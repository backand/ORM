/**
 * angular-kickstart - Speed up your AngularJS development whith a great build system.
 * @version v1.0.1
 * @link https://github.com/vesparny/angular-kickstart
 * @license MIT
 */
function isStateForSignedOutUser(state){return"sign_in"===state.name||"sign_up"===state.name||"change_password"===state.name}function run($rootScope,$state,SessionService,AuthService,CONSTS){"DEV"===CONSTS.env&&$rootScope.$on("$stateChangeError",console.log.bind(console)),$rootScope.$on("$stateChangeStart",function(event,toState,toParams){if(toParams.data||toParams.error)if(event.preventDefault(),toParams.error){var errorData=JSON.parse(toParams.error);errorData.message==="The user is not signed up to "+CONSTS.mainAppName&&AuthService.socialLogin(errorData.provider,!0)}else window.opener&&window.opener.postMessage(JSON.stringify(toParams),location.origin);SessionService.currentUser?isStateForSignedOutUser(toState)&&(event.preventDefault(),$state.go("apps.index")):isStateForSignedOutUser(toState)||(event.preventDefault(),SessionService.setRequestedState(toState,toParams),$state.go("sign_in"))})}!function(){"use strict";function run($log,editableOptions,$localStorage){$log.debug("App is running!"),editableOptions.theme="bs3",$localStorage.backand=$localStorage.backand||{}}run.$inject=["$log","editableOptions","$localStorage"],angular.module("controllers",[]),angular.module("services",[]),angular.module("backand",["ui.router","ui.bootstrap","ui.grid","ui.tree","ui.grid.edit","ui.grid.rowEdit","ui.grid.cellNav","ui.grid.selection","ui.grid.resizeColumns","ui.ace","ngClipboard","backand.routes","backand.consts","angularSpinner","ngAnimate","toaster","xeditable","angular-ladda","angularMoment","ui.router.tabs","common.modals","common.directives","theme.directives","common.services","common.data_models","common.filters.uppercase","common.filters.newTerminology","common.interceptors.http","controllers","templates","services","backand.apps","backand.database","backand.backoffice","backand.playground","backand.docs","backand.dbQueries","ngMessages","pascalprecht.translate","angled-windows.directives","ngStorage","angulartics","angulartics.segment.io","flowChart"]).config(["ngClipProvider",function(ngClipProvider){ngClipProvider.setPath("vendor/zeroclipboard/dist/ZeroClipboard.swf")}]).run(run).value("version","1.0.1"),angular.element(document).ready(function(){angular.bootstrap(document,["backand"])})}(),function(){angular.module("common.services",["ngCookies"])}(),function(){"use strict";function AuthLayoutService(){var self=this;self.flags={}}angular.module("common.services").service("AuthLayoutService",AuthLayoutService)}(),function(){"use strict";function SessionService($cookieStore,$injector){var self=this,requestedState={},failedRequests=[];self.currentUser=$cookieStore.get("globals")?$cookieStore.get("globals").currentUser:void 0,self.setCredentials=function(currentUser){self.currentUser=currentUser,$cookieStore.put("globals",{currentUser:currentUser})},self.clearCredentials=function(){$cookieStore.remove("globals"),self.currentUser=void 0},self.getUserId=function(){return self.currentUser&&self.currentUser.userId?self.currentUser.userId:0},self.getAuthHeader=function(){return self.currentUser&&self.currentUser.access_token?"bearer "+self.currentUser.access_token:!1},self.getToken=function(){return self.currentUser?self.currentUser.access_token:!1},self.clearToken=function(){self.currentUser&&(self.currentUser.access_token=null)},self.setRequestedState=function(state,params){_.isEmpty(requestedState)&&(requestedState={state:state,params:params})},self.getRequestedState=function(){var state=requestedState;return self.clearRequestedState(),state},self.clearRequestedState=function(){requestedState={}},self.addFailedRequest=function(request){failedRequests.push(request)},self.updateFailedRequestsAuth=function(newAuth){failedRequests.forEach(function(request){request.headers.Authorization=newAuth})},self.rerunFailedRequests=function(){var http=$injector.get("$http");failedRequests.forEach(function(request){http(request)}),self.clearFailedRequests()},self.clearFailedRequests=function(){failedRequests=[]}}angular.module("common.services").service("SessionService",["$cookieStore","$injector",SessionService])}(),function(){function HttpBufferService($injector){function retryHttpRequest(config,deferred){function successCallback(response){deferred.resolve(response)}function errorCallback(response){deferred.reject(response)}var $http=$injector.get("$http");$http=$http||$injector.get("$http"),$http(config).then(successCallback,errorCallback)}var self=this,buffer=[];self.append=function(config,deferred){buffer.push({config:config,deferred:deferred})},self.rejectAll=function(reason){if(reason)for(var i=0;i<buffer.length;++i)buffer[i].deferred.reject(reason);buffer=[]},self.retryAll=function(updater){for(var i=0;i<buffer.length;++i)retryHttpRequest(updater(buffer[i].config),buffer[i].deferred);buffer=[]}}angular.module("common.services").service("HttpBufferService",["$injector",HttpBufferService])}(),function(){"use strict";function AuthService(SessionService,$http,CONSTS,SocialProvidersService,$window,$q,AnalyticsService,HttpBufferService,$interval){function signIn(userData){return $http({method:"POST",url:CONSTS.appUrl+"/token",headers:{"Content-Type":"application/x-www-form-urlencoded"},transformRequest:function(obj){var str=[];for(var prop in obj)str.push(prop+"="+encodeURIComponent(obj[prop]));return str.join("&")},data:userData})}function signUp(fullName,email,password){return $http({method:"POST",url:CONSTS.appUrl+"/api/account/signUp",data:{fullName:fullName,email:email,password:password,confirmPassword:password}})}function updater(request){return request.headers.Authorization=SessionService.getAuthHeader(),request}function getSocialUrl(social,isSignup){var action=isSignup?"up":"in";return"user/socialSign"+action+"?provider="+social.label+"&response_type=token&client_id=self&redirect_uri="+social.url+"&state=rcFNVUMsUOSNMJQZ%2bDTzmpqaGgSRGhUfUOyQHZl6gas%3d"}function setUserDataFromToken(message){if(message.origin===location.origin){stopCheckingSocialWindow(!0),self.socialAuthWindow.close(),self.socialAuthWindow=null;var eventData=JSON.parse(message.data);if(eventData.error){var errorData=JSON.parse(eventData.error);if(errorData.message==="The user is not signed up to "+CONSTS.mainAppName)self.socialLogin(errorData.provider,!0);else{var errorMessage=errorData.message+" (signing in with "+errorData.provider+")";self.loginPromise.reject({data:errorMessage})}}else{if(eventData.data)return signInWithToken(JSON.parse(eventData.data),eventData.st).then(function(response){self.loginPromise.resolve(response)});self.loginPromise.reject()}}}function signInWithToken(userData){var tokenData={grant_type:"password",accessToken:userData.access_token,appName:userData.appName};return self.signIn(tokenData)}function setCredentials(serverData,username){serverData.username=serverData.username||username,SessionService.setCredentials(serverData),AnalyticsService.jacoIdentify(serverData.username),AnalyticsService.track("session",{name:serverData.username}),AnalyticsService.inspect(serverData.username)}function startCheckingSocialWindow(){checkSocialWindow||(checkSocialWindow=$interval(getSocialWindowStatus,500))}function stopCheckingSocialWindow(byService){angular.isDefined(checkSocialWindow)&&($interval.cancel(checkSocialWindow),checkSocialWindow=void 0,byService||self.loginPromise.reject(""))}function getSocialWindowStatus(){self.socialAuthWindow&&self.socialAuthWindow.closed&&(stopCheckingSocialWindow(),self.flags.authenticating=!1)}var self=this;self.flags={authenticating:!1},self.socials=SocialProvidersService.socialProviders;var signingIn=!1;self.signIn=function(userData){return signingIn?void 0:(signingIn=!0,userData.grant_type="password",userData.appName=userData.appName||CONSTS.mainAppName,signIn(userData).then(function(response){return setCredentials(response.data,userData.username),HttpBufferService.retryAll(updater),response.data})["finally"](function(){signingIn=!1}))},self.signUp=function(fullName,email,password){return signUp(fullName,email,password).then(function(){return self.signIn({username:email,password:password})}).then(function(response){return response})},self.refreshToken=function(){return self.signIn({username:SessionService.currentUser.username,refreshToken:SessionService.currentUser.refresh_token})},self.forgot=function(email){return $http({method:"POST",url:CONSTS.appUrl+"/api/account/SendChangePasswordLink",data:{username:email}})},self.socialLogin=function(provider,isSignup){startCheckingSocialWindow(),"string"==typeof provider&&(provider=_.find(self.socials,{name:provider}));var st="?st="+(isSignup?provider.id:"0"),returnAddress=encodeURIComponent($window.location.href.replace(/\?.*/g,""));self.loginPromise=$q.defer();var loginUrl=CONSTS.appUrl+"/1/"+getSocialUrl(provider,isSignup)+"&appname="+CONSTS.mainAppName+"&returnAddress="+returnAddress+st;return isSignup?$window.location=loginUrl:self.socialAuthWindow=window.open(loginUrl,"socialSigninWindow","left=10, top=10, width=600, height=600"),window.addEventListener("message",setUserDataFromToken,!1),self.loginPromise.promise},self.resetPassword=function(password,id){return $http({method:"POST",url:CONSTS.appUrl+"/api/account/changePassword",data:{confirmPassword:password,password:password,token:id}})},self.changePassword=function(oldPassword,newPassword){return $http({method:"POST",url:CONSTS.appUrl+"/1/user/changePassword",data:{oldPassword:oldPassword,newPassword:newPassword}})};var checkSocialWindow}angular.module("common.services").service("AuthService",["SessionService","$http","CONSTS","SocialProvidersService","$window","$q","AnalyticsService","HttpBufferService","$interval",AuthService])}(),function(){"use strict";function AnalyticsService($analytics,SessionService){var self=this;self.track=function(eventName,eventObject){analytics&&analytics.identify(SessionService.currentUser.username,{name:SessionService.currentUser.username,email:SessionService.currentUser.username,createdAt:(new Date).getTime()}),$analytics.eventTrack(eventName,eventObject)},self.trackSignupEvent=function(fullName,email,social){var socialName=social?social.name:"self";analytics.identify(email,{name:fullName,email:email,signed_up_at:(new Date).getTime()}),$analytics.eventTrack("SignedUp",{name:fullName}),$analytics.eventTrack("SocialSignedUp",{provider:socialName})},self.identify=function(fullName,email){analytics&&analytics.identify(email,{name:fullName,email:email,createdAt:(new Date).getTime()})},self.jacoIdentify=function(username){window.JacoRecorder&&window.JacoRecorder.identify(username)},self.woopraIdentify=function(email,id){woopra&&woopra.identify({email:email,id:id})},self.inspect=function(username){"undefined"!=typeof __insp&&__insp.push(["identify",username])}}angular.module("common.services").service("AnalyticsService",["$analytics","SessionService",AnalyticsService])}(),function(){"use strict";function SocialProvidersService(CONSTS,$http,$q){function init(){self.socialProviders=[],self.getSocialProviders().then(function(response){angular.copy(response,self.socialProviders)})}var self=this,socialProviders=[{name:"github",label:"GitHub",url:"www.github.com",css:"github",id:1,helpUrl:"socialAndKeysGithub"},{name:"google",label:"Google",url:"www.google.com",css:"google-plus",id:2,helpUrl:"socialAndKeysGoogle"},{name:"facebook",label:"Facebook",url:"www.facebook.com",css:"facebook",id:3,helpUrl:"socialAndKeysFacebook",clientIdTitle:"App ID",secretIdTitle:"App Secret"}];self.getSocialProviders=function(){return $q.when(socialProviders)},init()}angular.module("common.services").service("SocialProvidersService",["CONSTS","$http","$q",SocialProvidersService])}(),function(){"use strict";function NotificationService(toaster,$timeout){function setLastError(type,text){self.lastError={type:type,text:text}}function resetError(){setLastError(null,null)}var self=this;self.add=function(type,text){("error"!==type&&"warning"!==type||!_.isEqual(type,self.lastError.type)||!_.isEqual(text,self.lastError.text))&&text&&(setLastError(type,text),toaster.pop(type,"",text),$timeout(resetError,1e3))},resetError()}angular.module("common.services").service("NotificationService",["toaster","$timeout",NotificationService])}(),function(){"use strict";function AppsService($http,$q,CONSTS,DatabaseNamesService,$interval,$rootScope,SessionService){function setCurrentApp(data){angular.copy(data,self.currentApp),self.currentApp.databaseName=data.Database_Source?DatabaseNamesService.getDBSource(data.Database_Connection.Database_Source):void 0,stopRefreshDBStatus(),2==self.currentApp.DatabaseStatus&&(self.currentAppStatus=2,startRefreshDBStatus())}function startRefreshDBStatus(){refreshDBStatus=$interval(getAppStatus,3e3)}function getAppStatus(){return _.isEmpty(self.currentApp)?void stopRefreshDBStatus():void getApp(self.currentApp.Name).success(function(result){result&&2!=result.DatabaseStatus&&2===self.currentAppStatus&&(self.currentAppStatus=1,setCurrentApp(result),$rootScope.$broadcast("AppDbReady",result.Name))})}function stopRefreshDBStatus(){angular.isDefined(refreshDBStatus)&&($interval.cancel(refreshDBStatus),refreshDBStatus=void 0)}function getAllApps(){return $http({method:"GET",url:CONSTS.appUrl+"/admin/myApps?pageSize=200"})}function addNewApp(name,title){return $http({method:"POST",url:CONSTS.appUrl+"/admin/myApps/",data:{Name:name,Title:title}})}function getApp(appName){return $http({method:"GET",url:CONSTS.appUrl+"/admin/myApps/"+appName+"?deep=true"})}function updateApp(name,data){return $http({method:"PUT",url:CONSTS.appUrl+"/admin/myApps/"+name,data:data})}function deleteApp(name){return $http({method:"DELETE",url:CONSTS.appUrl+"/admin/myApps/"+name})}function resetApp(appName){return $http({method:"GET",url:CONSTS.appUrl+"/1/app/reload/",headers:{AppName:appName}})}var self=this,apps={list:[],alerts:{}};self.apps=apps,self.all=function(){var deferred=$q.defer();return getAllApps().success(function(data){angular.copy(data.data,apps.list),deferred.resolve(data)}).error(function(error){deferred.reject(error)}),deferred.promise},self.add=function(name,title){var deferred=$q.defer();return addNewApp(name,title).success(function(data){self.all().then(function(){deferred.resolve(data.data)})}).error(function(error){deferred.reject(error)}),deferred.promise},self.currentApp={},self.resetCurrentApp=function(){angular.copy({},self.currentApp)},self.isExampleApp=function(app){return app&&app.Name?app.Name==="todo"+SessionService.getUserId():!1},self.getApp=function(appName){var deferred=$q.defer();return getApp(appName).success(function(data){setCurrentApp(data),deferred.resolve(self.currentApp)}).error(function(err){deferred.reject(err)}),deferred.promise};var refreshDBStatus;self.update=function(name,data){return updateApp(name,data).then(function(){self.getApp(data.Name||name)})},self.setAlert=function(appName,msg){apps.alerts[appName]=msg},self["delete"]=function(name){return deleteApp(name).then(function(){self.currentApp.Name===name&&(self.currentApp=null),self.all()})},self.reset=function(name){return resetApp(name).then(function(){self.all()})},self.appDbStat=function(appName){return $http({method:"GET",url:CONSTS.appUrl+"/1/app/dbStat",headers:{AppName:appName}})},self.appKeys=function(appName){return $http({method:"GET",url:CONSTS.appUrl+"/admin/myAppKeys/"+appName})},self.resetAppKey=function(appName,key){return $http({method:"GET",url:CONSTS.appUrl+"/admin/myAppKeys/reset/"+appName+"/"+key})}}angular.module("common.services").service("AppsService",["$http","$q","CONSTS","DatabaseNamesService","$interval","$rootScope","SessionService",AppsService])}(),function(){"use strict";function DatabaseService($http,CONSTS){this.updateTemplate=function(name,templateId){return $http({method:"PUT",url:CONSTS.appUrl+"/admin/myApps/"+name,data:{ThemeId:templateId}})},this.connect2DB=function(appName,data){return $http({method:"POST",url:CONSTS.appUrl+"/admin/myAppConnection/"+appName,data:data})},this.reConnect2DB=function(appName,data){return $http({method:"PUT",url:CONSTS.appUrl+"/admin/myAppConnection/"+appName,data:data})},this.createDB=function(appName,product,sampleApp,schema){return $http(null==schema?{method:"POST",url:CONSTS.appUrl+"/admin/myAppConnection/"+appName,data:{product:product,sampleApp:sampleApp}}:{method:"POST",url:CONSTS.appUrl+"/admin/myAppConnection/"+appName,data:{product:product,sampleApp:"",schema:schema}})},this.getDBInfo=function(appName){return $http({method:"GET",url:CONSTS.appUrl+"/admin/myAppConnection/"+appName})},this.getAppPassword=function(appName){return $http({method:"GET",url:CONSTS.appUrl+"/admin/myAppConnection/getPassword/"+appName})};var dataSourcesArray=[{imgSrc:"assets/images/mysql.png",name:"sqlserver"},{imgSrc:"assets/images/mysql.png",name:"mysql"},{imgSrc:"assets/images/mongodb.png",name:"mongodb"},{imgSrc:"assets/images/oracle.jpg",name:"oracle"},{imgSrc:"assets/images/postgresql.jpg",name:"postgresql"}];this.getDataSources=function(){return dataSourcesArray}}angular.module("common.services").service("DatabaseService",["$http","CONSTS",DatabaseService])}(),function(){"use strict";function DatabaseNamesService(){var numbers={2:"sqlserver",4:"mysql",6:"mongodb",7:"oracle",8:"postgresql",10:"newMysql",11:"newPostgre",12:"newDummy"},names={sqlserver:2,mysql:4,mongodb:6,oracle:7,postgresql:8,newMysql:10,newPostgre:11,newDummy:12},database_source={1:"sqlserver",2:"sqlazure",3:"mysql",4:"postgresql",5:"oracle"};this.getName=function(dataNumber){return numbers[dataNumber]},this.getNumber=function(dataName){return names[dataName]},this.getDBSource=function(dataName){return database_source[dataName]}}angular.module("common.services").service("DatabaseNamesService",[DatabaseNamesService])}(),function(){"use strict";function AppLogService($http,CONSTS){function arrangeMsg(item){var log=item.__metadata.descriptives.Action.label+" "+item.FieldName+" ";switch(item.__metadata.descriptives.Action.label){case"Update":log+="from "+item.OldValue+" to "+item.NewValue;break;case"Insert":log+=item.NewValue;break;case"Delete":log+=item.OldValue}return log}var self=this;self.LOG_URL="/1/table/data/durados_Log",self.HISTORY_URL="/1/table/data/durados_v_ChangeHistory",self.getAppLog=function(appName,size,page,filterParam,sort){var sortParam=sort||'[{fieldName:"id", order:"desc"}]';return $http({method:"GET",url:CONSTS.appUrl+self.HISTORY_URL,headers:{AppName:appName},params:{pageSize:String(size),pageNumber:String(page),filter:filterParam,sort:sortParam}})},self.createLogMsg=function(array){var logMsgs=[];return array.forEach(function(item){var msg=arrangeMsg(item),label=item.__metadata.descriptives.Username.label,info=msg.substr(0,100)+" by "+label,infoLong=msg+" by "+label,long=msg.length>100;logMsgs.push({info:info,infoLong:infoLong,"long":long,open:!1,time:item.UpdateDate,user:label})}),logMsgs},self.getAppActivity=function(appName,size,page,filterParam,sort){return $http({method:"GET",url:CONSTS.appUrl+self.LOG_URL,headers:{AppName:appName},params:{pageSize:String(size),pageNumber:String(page),filter:filterParam,sort:sort}})},self.getActionLog=function(appName,guid){return $http({method:"GET",url:CONSTS.appUrl+self.LOG_URL,headers:{AppName:appName},params:{pageSize:"100",pageNumber:"1",filter:'[{"fieldName":"LogType", "operator":"greaterThanOrEqualsTo","value":"500"},{"fieldName":"Guid", "operator":"equals","value":"'+guid+'"}]',sort:'[{fieldName:"ID", order:"desc"}]'}})}}angular.module("common.services").service("AppLogService",["$http","CONSTS",AppLogService])}(),function(){"use strict";function TablesService($http,$q,CONSTS){function _get(appName){return $http({method:"GET",url:CONSTS.appUrl+"/1/table/config?pageSize=200&pageNumber=1",headers:{AppName:appName},params:{filter:'[{fieldName:"SystemView", operator:"equals", value: false}]',sort:'[{fieldName:"captionText", order:"asc"}]'}})}var self=this;self.tables=[],self.get=function(appName){return _get(appName).then(function(data){return angular.copy(data.data.data,self.tables),self.tables})},self.getTableNameById=function(tables,id){return _.findWhere(tables,{__metadata:{id:id}})},self.getTableByName=function(tableName){return _.findWhere(self.tables,{name:tableName})},self.add=function(appName,table){return $http({method:"POST",url:CONSTS.appUrl+"/1/table/config",headers:{AppName:appName},data:table})},self.update=function(appName,viewName,table){return $http({method:"PUT",url:CONSTS.appUrl+"/1/table/config/"+viewName,headers:{AppName:appName},data:table})},self.addSchema=function(appName,schema){return $http({method:"POST",url:CONSTS.appUrl+"/1/table/config/template",headers:{AppName:appName},data:schema,dataType:"json"})}}angular.module("common.services").service("TablesService",["$http","$q","CONSTS",TablesService])}(),function(){function ColumnsService($http,CONSTS,$q,NotificationService,$interval,$rootScope,AppsService){function _get(tableName){return $http({method:"GET",url:CONSTS.appUrl+"/1/table/config/"+(_.isEmpty(tableName)?self.tableName:tableName),headers:{AppName:AppsService.currentApp.Name}})}function update(table){_hashCommit[table.__metadata.name]=angular.copy(table)}function _update(table){return $http({method:"PUT",url:CONSTS.appUrl+"/1/table/config/"+table.__metadata.name,headers:{AppName:AppsService.currentApp.Name},data:table})}function stopRefresh(){angular.isDefined(stop)&&($interval.cancel(stop),stop=void 0)}var stop,self=this,_tableConfig=null,_preTableName=null;self.commit=update,self.forceCommit=_update,self.tableName=null,self.tables={},self.sync=function(){return $http({method:"GET",url:CONSTS.appUrl+"/1/app/sync",headers:{AppName:AppsService.currentApp.Name}})},self.get=function(force){var deferred=$q.defer();return force||null==_tableConfig||null==_preTableName||_preTableName!=self.tableName?_get().success(function(data){_tableConfig=data,_preTableName=self.tableName,_tableConfig.__metadata.name=data.name,deferred.resolve(_tableConfig)}).error(function(err){_tableConfig=null,deferred.reject(err)}):deferred.resolve(_tableConfig),deferred.promise},self.getColumns=function(tableName,force){return!force&&self.tables[tableName]?$q.when(self.tables[tableName]):_get(tableName).then(function(result){return self.tables[tableName]=result,result})};var _hashCommit={},saveData=!1;self.commitAndUpdate=function(table){return update(table),_update(table)},stop=$interval(function(){if(!saveData){if("{}"==JSON.stringify(_hashCommit))return void(saveData=!1);saveData=!0;var localHash=angular.copy(_hashCommit);_hashCommit={},angular.forEach(localHash,function(table1){_update(table1).then(function(){delete localHash[table1.__metadata.name],"{}"==JSON.stringify(localHash)&&(saveData=!1,NotificationService.add("success","Data saved"),table1.__metadata.name!=table1.name&&$rootScope.$broadcast("appname:saved"))},function(){saveData=!1,delete localHash[table1.__metadata.name]})})}},1e3),$rootScope.$on("$destroy",function(){stopRefresh()})}angular.module("common.services").service("ColumnsService",["$http","CONSTS","$q","NotificationService","$interval","$rootScope","AppsService",ColumnsService])}(),function(){function DataService($http,CONSTS,AppsService,stringifyHttp){function logAndExecute(http,log){var logItem={};return log&&(logItem={requestJson:stringifyHttp(http),requestUrl:http.url,requestMethod:http.method,requestTitle:log},self.log.push(logItem),self.logIndex.last=self.log.length-1),$http(http).then(function(response){return log&&response.data&&(logItem.response=angular.toJson(response.data,!0)),response})}var self=this;self.log=[],self.logIndex={},self.getDataSample=function(tableName,log,ignoreError){var http={method:"GET",url:CONSTS.appUrl+"/1/objects/"+tableName,headers:{AppName:AppsService.currentApp.Name},config:{ignoreError:ignoreError}};return logAndExecute(http,log?"Get Data":null)},self.get=function(tableName,size,page,sort,filter,log){var http={method:"GET",url:CONSTS.appUrl+"/1/objects/"+tableName,headers:{AppName:AppsService.currentApp.Name},params:{pageSize:size,pageNumber:page,filter:"undefined"==typeof filter?"":filter,sort:sort}};return logAndExecute(http,log?"Get Data":null)},self.getItem=function(tableName,itemId,log){var http={method:"GET",url:CONSTS.appUrl+"/1/objects/"+tableName+"/"+itemId,headers:{AppName:AppsService.currentApp.Name}};return logAndExecute(http,log?"Get Item":null)},self.update=function(tableName,record,id,log){var http={method:"PUT",url:CONSTS.appUrl+"/1/objects/"+tableName+"/"+id+"?returnObject=true",headers:{AppName:AppsService.currentApp.Name},data:record};return logAndExecute(http,log?"Update Item":null)},self.post=function(tableName,record,log){var http={method:"POST",url:CONSTS.appUrl+"/1/objects/"+tableName+"?returnObject=true",headers:{AppName:AppsService.currentApp.Name},data:record};return logAndExecute(http,log?"New Item":null)},self["delete"]=function(tableName,record,id,log){var http={method:"DELETE",url:CONSTS.appUrl+"/1/objects/"+tableName+"/"+id,headers:{AppName:AppsService.currentApp.Name}};return logAndExecute(http,log?"Delete Item":null)},self.getAutocomplete=function(tableName,columnName,term,limit){return $http({method:"GET",url:CONSTS.appUrl+"/1/view/data/autocomplete/"+tableName+"/"+columnName,params:{term:term,limit:limit||20},headers:{AppName:AppsService.currentApp.Name}})},self.search=function(tableName,term,pageSize,pageNumber){return $http({method:"GET",url:CONSTS.appUrl+"/1/objects/"+tableName,params:{search:term,pageSize:pageSize||20,pageNumber:pageNumber||1},headers:{AppName:AppsService.currentApp.Name}})}}angular.module("common.services").service("DataService",["$http","CONSTS","AppsService","stringifyHttp",DataService])}(),function(){"use strict";function ObjectsService($http,AppsService,CONSTS){var self=this;self.getObject=function(tableName,objectId,ignoreError){return $http({method:"GET",url:CONSTS.appUrl+"/1/objects/"+tableName+"/"+objectId,headers:{AppName:AppsService.currentApp.Name},config:{ignoreError:ignoreError}})}}angular.module("common.services").service("ObjectsService",["$http","AppsService","CONSTS",ObjectsService])}(),function(){function RulesService($http,CONSTS){var self=this,baseUrl="/1/businessRule";self.tableRuleUrl="/1/objects/",self.addUserUrl="/1/user";self.appName=null,self.tableId=null,self.tableName=null,self.dataActions=[{crud:"update",value:"OnDemand",label:"On demand - Execute via REST API",level1:0,level2:0},{crud:"create",value:"BeforeCreate",label:"Create - Before adding data",level1:1,level2:0},{crud:"create",value:"AfterCreateBeforeCommit",label:"Create - After data saved but before it committed",level1:1,level2:1},{crud:"create",value:"AfterCreate",label:"Create - After data saved and committed",level1:1,level2:2},{crud:"update",value:"BeforeEdit",label:"Update - Before update data",level1:2,level2:0},{crud:"update",value:"AfterEditBeforeCommit",label:"Update - After data saved but before it committed",level1:2,level2:1},{crud:"update",value:"AfterEdit",label:"Update - After data saved and committed",level1:2,level2:2},{crud:"delete",value:"BeforeDelete",label:"Delete - Before delete",level1:3,level2:0},{crud:"delete",value:"AfterDeleteBeforeCommit",label:"Delete - After record deleted but before it committed",level1:3,level2:1},{crud:"delete",value:"AfterDelete",label:"Delete - After record deleted and committed",level1:3,level2:2}],self.actionTemplateCategories=[{id:1,label:"Mail"},{id:2,label:"Payment Processing"},{id:3,label:"File Storage"},{id:4,label:"Metrics & Analytics"},{id:null,label:"Other"}],self.get=function(){return $http({method:"GET",url:CONSTS.appUrl+baseUrl+'?filter=[{fieldName:"viewTable", operator:"in", value:'+self.tableId+'}]&sort=[{fieldName:"name", order:"asc"}]',headers:{AppName:self.appName}})},self.getRule=function(id){return $http({method:"GET",url:CONSTS.appUrl+baseUrl+"/"+id,headers:{AppName:self.appName}})},self.post=function(rule){return $http({method:"POST",url:CONSTS.appUrl+baseUrl,headers:{AppName:self.appName},data:rule})},self.update=function(rule){return $http({method:"PUT",url:CONSTS.appUrl+baseUrl+"/"+rule.__metadata.id,headers:{AppName:self.appName},data:rule})},self.remove=function(rule){return $http({method:"DELETE",url:CONSTS.appUrl+baseUrl+"/"+rule.__metadata.id,headers:{AppName:self.appName},data:rule})},self.getActionTemplates=function(){return $http({method:"GET",url:CONSTS.appUrl+"/admin/actionTemplate"})},self.saveActionTemplate=function(rule){return $http({method:"POST",url:CONSTS.appUrl+"/admin/actionTemplate",data:rule})},self.getTestUrl=function(rule,test,actionType,tableName,debug,fromGetHttp){var onDemand="On Demand"===actionType,parameters=angular.copy(test.parameters);if(debug&&(parameters.$$debug$$=!0),"backandUsers"===tableName&&"Create"===actionType)return encodeURI(CONSTS.appUrl+self.addUserUrl+(debug?"?parameters="+JSON.stringify(parameters):""));var rowId=test.rowId||"",uri=CONSTS.appUrl+self.tableRuleUrl+(onDemand?"action/":"")+tableName+"/"+rowId;return encodeURI(fromGetHttp&&!debug?uri:uri+(onDemand||debug?"?":"")+(onDemand?"name="+rule.name:"")+(onDemand&&!_.isEmpty(parameters)?"&":"")+(_.isEmpty(parameters)?"":"parameters="+JSON.stringify(parameters)))},self.testRule=function(rule,test,actionType,tableName,rowData){return $http(self.getTestHttp(rule,test,actionType,tableName,rowData,!0))},self.getTestHttp=function(rule,test,actionType,tableName,rowData,debug){var method;switch(actionType){case"Create":method="POST";break;case"Update":method="PUT";break;case"Delete":method="DELETE";break;case"On Demand":default:method="GET"}var http={method:method,url:self.getTestUrl(rule,test,actionType,tableName,debug,!0)};return debug?http.headers={AppName:self.appName}:http.params={name:rule.name,parameters:test.parameters},("Create"===actionType||"Update"===actionType)&&(http.data=angular.fromJson(rowData)),http}}angular.module("common.services").service("RulesService",["$http","CONSTS",RulesService])}(),function(){"use strict";function SecurityService($http,CONSTS){function getHttp(method,isConfig,tableName,id){var url=isConfig?"":self.dbDataUrl;return{method:method,url:CONSTS.appUrl+url+tableName+(id?"/"+id:""),headers:{AppName:self.appName}}}var self=this;self.appName=null,self.usersTableName=CONSTS.backandUserObject,self.rolesTableName=CONSTS.backandRoleObject,self.workspaceTableName="/1/workspace",self.dbDataUrl="/1/table/data/",self.userUrl="/1/user",self.getData=function(tableName,size,page,sort,isConfig,filter){sort=sort||"",filter=filter||"",size=size||20,page=page||1;var http=getHttp("GET",isConfig,tableName);return http.params={pageSize:String(size),pageNumber:String(page),sort:sort,filter:filter},$http(http)},self.updateData=function(tableName,rowData,id,isConfig){id=id||rowData.ID;var http=getHttp("PUT",isConfig,tableName,id);return http.data=rowData,$http(http)},self.postData=function(tableName,rowData,isConfig){var http=getHttp("POST",isConfig,tableName);return http.data=rowData,$http(http)},self.deleteData=function(tableName,Id,isConfig){return $http(getHttp("DELETE",isConfig,tableName,Id))},self.getUsers=function(size,page,sort,filter){return self.getData(self.usersTableName,size,page,sort,"",filter)},self.getRoles=function(){return self.getData(self.rolesTableName)},self.updateUser=function(user){return self.updateData(self.usersTableName,user)},self.updateRole=function(role,pk){return self.updateData(self.rolesTableName,role,pk)},self.newUser=function(user){return $http({method:"POST",url:CONSTS.appUrl+self.userUrl,headers:{AppName:self.appName},data:user})},self.userExists=function(username){return $http({method:"GET",url:CONSTS.appUrl+self.userUrl+"/exists",headers:{AppName:self.appName},params:{username:username}})},self.postUser=function(user){return self.postData(self.usersTableName,user)},self.postRole=function(role){return self.postData(self.rolesTableName,role)},self.deleteUser=function(Id){return self.deleteData(self.usersTableName,Id)},self.deleteRole=function(Id){return self.deleteData(self.rolesTableName,Id)},self.getWorkspace=function(){return self.getData(self.workspaceTableName,null,null,'[{fieldName:"name", order:"asc"}]',!0)
},self.postWorkspace=function(workspace){return self.postData(self.workspaceTableName,workspace,!0)},self.updateWorkspace=function(workspace){return self.updateData(self.workspaceTableName,workspace,workspace.__metadata.id,!0)},self.setUserPassword=function(userData){return $http({method:"PUT",url:CONSTS.appUrl+self.userUrl+"/password",headers:{AppName:self.appName},data:userData})},self.getUserToken=function(username){return $http({method:"GET",url:CONSTS.appUrl+self.userUrl+"/key",headers:{AppName:self.appName},params:{username:username}})},self.resetUserToken=function(username){return $http({method:"PUT",url:CONSTS.appUrl+self.userUrl+"/key/reset",headers:{AppName:self.appName},params:{username:username}})},self.getFilterCode=function(objectToUpdate,filter){return $http({method:"GET",url:CONSTS.appUrl+"/1/table/predefined/"+objectToUpdate+(filter.dontShowToAdmin?"?showAllForAdmin=false":""),params:{usersObjectName:filter.userObjectName,emailFieldName:filter.emailField,maxLevel:3},headers:{AppName:self.appName}})},self.transformNoSQL=function(json){return $http({method:"POST",url:CONSTS.appUrl+"/1/nosql/transform?whereOnly=true",data:{json:json,isFilter:!0},headers:{AppName:self.appName}})}}angular.module("common.services").service("SecurityService",["$http","CONSTS",SecurityService])}(),function(){function DictionaryService($http,CONSTS){var self=this,baseUrl="/1/table/dictionary/";self.appName=null,self.tableName=null,self.get=function(crud){return $http({method:"GET",url:CONSTS.appUrl+baseUrl+self.tableName+"/?deep=true&withSystemTokens=true&crud="+crud,headers:{AppName:self.appName}})}}angular.module("common.services").service("DictionaryService",["$http","CONSTS",DictionaryService])}(),function(){"use strict";function SecurityMatrixService(SecurityService){function loadPermission(permissions){var createPermission=permissions.allowCreate.split(","),editPermission=permissions.allowEdit.split(","),deletePermission=permissions.allowDelete.split(","),readPermission=permissions.allowRead.split(",");angular.forEach(_tempTemplate,function(role){self.contains(createPermission,role.title)&&(role.permissions.create=!0),self.contains(editPermission,role.title)&&(role.permissions.update=!0),self.contains(deletePermission,role.title)&&(role.permissions["delete"]=!0),self.contains(readPermission,role.title)&&(role.permissions.read=!0)})}var self=this;self.appName=null;var _tempTemplate;self.loadMatrix=function(permissions){return SecurityService.appName=self.appName,SecurityService.getRoles().then(function(data){var roles=data.data.data;return _tempTemplate=[],angular.forEach(roles,function(role){_tempTemplate.push({title:role.Name,readonly:"Admin"==role.Name||"User"==role.Name||"Public"==role.Name,permissions:{read:!1,create:!1,update:!1,"delete":!1}})}),loadPermission(permissions),_tempTemplate})},self.contains=function(arr,obj){for(var i=arr.length;i--;)if(arr[i]===obj)return!0;return!1},self.getPermission=function(template){var createPermission=[],editPermission=[],deletePermission=[],readPermission=[],permissions={allowCreate:"",allowEdit:"",allowDelete:"",allowRead:""};return angular.forEach(template,function(role){role.permissions.create&&createPermission.push(role.title),role.permissions.update&&editPermission.push(role.title),role.permissions["delete"]&&deletePermission.push(role.title),role.permissions.read&&readPermission.push(role.title)}),permissions.allowCreate=createPermission.join(","),permissions.allowEdit=editPermission.join(","),permissions.allowDelete=deletePermission.join(","),permissions.allowRead=readPermission.join(","),permissions}}angular.module("common.services").service("SecurityMatrixService",["SecurityService",SecurityMatrixService])}(),function(){function ConfirmationPopupService($modal,$rootScope){var self=this;!function(){self.modalScope=$rootScope.$new(!0)}(),self.confirm=function(msg,okText,cancelText,showOk,showCancel,title,size){self.modalScope.msg=msg,self.modalScope.okBtnText=okText||"OK",self.modalScope.cancelBtnText=cancelText||"CANCEL",self.modalScope.showOk=angular.isDefined(showOk)?showOk:!0,self.modalScope.showCancel=angular.isDefined(showCancel)?showCancel:!0,self.modalScope.Title=title,self.modalScope.close=function(result){modalInstance.close(result)};var modalInstance=$modal.open({templateUrl:"common/services/confirm_popup_service.html",backdrop:"static",scope:self.modalScope,keyboard:!1,size:size||"sm"});return modalInstance.result}}angular.module("common.services").service("ConfirmationPopup",["$modal","$rootScope",ConfirmationPopupService])}(),function(){"use strict";function DbQueriesService($http,CONSTS,NotificationService){function _get(appName){return $http({method:"GET",url:CONSTS.appUrl+baseUrl+configUrl,params:{pageSize:200,pageNumber:1,sort:'[{fieldName:"name", order:"asc"}]'},headers:{AppName:appName}})}function Query(){return{database:"0",name:"",sQL:"",parameters:"",workspaceID:"",precedent:!1}}function _request(method,path,data){return $http({method:method,url:CONSTS.appUrl+baseUrl+configUrl+path,headers:{AppName:currentApp},data:data})}function _put(query,queryId){return _request("PUT",queryId,query)}function _post(query){return _request("POST","",query)}function _delete(queryId){return _request("DELETE",queryId,null)}var self=this,baseUrl="/1/query/",configUrl="config/",getPromise=null,currentApp=null;self._queries=[],self.getQueries=function(appName){return getPromise&&currentApp==appName||(currentApp=appName,getPromise=_get(appName).then(function(data){return self._queries=data.data.data,self._queries},function(){NotificationService.add("error","cant get DB queries")})),getPromise},self.getQuery=function(id){return _.find(self._queries,{__metadata:{id:id}})},self.getQueryForEdit=function(id){return angular.copy(self.getQuery(id))},self.getNewQuery=function(){return new Query},self.saveQuery=function(query){if(query.__metadata){var queryId=query.__metadata.id;return _put(query,queryId).then(function(response){return NotificationService.add("success","Query saved"),_.assign(self.getQuery(queryId),response.data),response.data},function(){NotificationService.add("error","Can't get DB queries")})}return _post(query).then(function(data){return NotificationService.add("success","New query saved"),query=data.data,self._queries.push(query),data.data},function(){NotificationService.add("error","Can't save query")})},self.deleteQuery=function(query){return _delete(query.__metadata.id).then(function(data){return _.remove(self._queries,self.getQuery(query.__metadata.id)),data})},self.getQueryUrl=function(queryName,parameters,withParams){return encodeURI(CONSTS.appUrl+baseUrl+"data/"+queryName+(withParams&&!_.isEmpty(parameters)?"?parameters="+JSON.stringify(parameters):""))},self.getQueryHttp=function(queryName,parameters,runQuery){var http={method:"GET",url:self.getQueryUrl(queryName,parameters),params:{parameters:parameters}};return runQuery&&(http.headers={AppName:currentApp},http.config={ignoreError:!0}),http},self.runQuery=function(queryName,parameters){return $http(self.getQueryHttp(queryName,parameters,!0))},self.transformNoSQL=function(json){return $http({method:"POST",url:CONSTS.appUrl+"/1/nosql/transform",data:{json:json,isFilter:!0},headers:{AppName:currentApp}})}}angular.module("common.services").service("DbQueriesService",["$http","CONSTS","NotificationService",DbQueriesService])}(),function(){"use strict";function LayoutService($localStorage,SessionService){var self=this;self.userId=SessionService.getUserId(),$localStorage.backand=$localStorage.backand||{},$localStorage.backand[self.userId]=$localStorage.backand[self.userId]||{},self.showJumbo=function(){return $localStorage.backand=$localStorage.backand||{},$localStorage.backand[self.userId]&&angular.isDefined($localStorage.backand[self.userId].hideJumbo)||($localStorage.backand[self.userId]=$localStorage.backand[self.userId]||{},self.openJumbo()),!$localStorage.backand[self.userId].hideJumbo},self.closeJumbo=function(){$localStorage.backand[self.userId].hideJumbo=!0},self.openJumbo=function(){$localStorage.backand[self.userId].hideJumbo=!1}}angular.module("common.services").service("LayoutService",["$localStorage","SessionService",LayoutService])}(),function(){function ExampleAppService($http){var self=this;self.codeFiles=[{name:"index.html",type:"html"},{name:"main.html",type:"html"},{name:"main.js",type:"javascript"},{name:"todo_service.js",type:"javascript"},{name:"theme.css",type:"css"},{name:"model.json",type:"json"}],self.getFile=function(filename){return $http({method:"GET",url:"examples/todo/"+filename})}}angular.module("common.services").service("ExampleAppService",["$http",ExampleAppService])}(),function(){"use strict";function ModelService(CONSTS,$http){var self=this;self.get=function(appName){return $http({method:"GET",url:CONSTS.appUrl+"/1/model",headers:{AppName:appName}})},self.update=function(appName,schema){return $http({method:"POST",url:CONSTS.appUrl+"/1/model",headers:{AppName:appName},data:{newSchema:schema,severity:0}})},self.validate=function(appName,schema,oldSchema){return $http({method:"POST",url:CONSTS.appUrl+"/1/model/validate",headers:{AppName:appName},data:{newSchema:schema,oldSchema:oldSchema,severity:0}})}}angular.module("common.services").service("ModelService",["CONSTS","$http",ModelService])}(),function(){angular.module("common.data_models",[])}(),function(){"use strict";function DbDataModel(ModelService,$localStorage){function getAppLocalStorage(appName){return $localStorage.backand[appName]||($localStorage.backand[appName]={}),$localStorage.backand[appName].erdModel||($localStorage.backand[appName].erdModel={nodes:[],connections:[]}),$localStorage.backand[appName]}function updateModels(appName,model){return self.currentModel.schema=angular.toJson(model.data,!0),self.currentModel.json=model.data,self.currentModel.erdModel=modelToChartData(appName,model.data),self.saveErdModel(appName),self.newModel.schema=self.getCustomSchema(appName)||self.currentModel.schema,self.currentModel}function modelToChartData(appName,model){var chartData={nodes:[],connections:[]},pos=0,yIndent=0;return model.forEach(function(obj){var node={name:obj.name,id:obj.name,inputConnectors:[],outputConnectors:[]},savedModelObject=self.getErdModelObject(appName,obj.name);savedModelObject?(node.x=savedModelObject.x,node.y=savedModelObject.y):(node.x=pos+=50,node.y=pos+yIndent),_.forIn(obj.fields,function(field,fieldname){field.object?node.outputConnectors.push({name:fieldname}):field.collection&&node.inputConnectors.push({name:fieldname})}),chartData.nodes.push(node),500===pos&&(pos=0,yIndent+=100)}),model.forEach(function(obj){var dest=_.find(chartData.nodes,{name:obj.name});_.forIn(obj.fields,function(field,fieldname){if(field.collection){var destConnectorIndex=_.findIndex(dest.inputConnectors,{name:fieldname}),source=_.find(chartData.nodes,{name:field.collection}),sourceConnectorIndex=_.findIndex(source.outputConnectors,{name:field.via});chartData.connections.push({source:{nodeID:source.name,connectorIndex:sourceConnectorIndex},dest:{nodeID:dest.name,connectorIndex:destConnectorIndex}})}})}),chartData}var self=this;self.currentModel={schema:null,json:null},self.newModel={schema:null},self.getCustomSchema=function(appName){var customSchema=getAppLocalStorage(appName).customSchema;try{null!=customSchema&&(customSchema=angular.toJson(JSON.parse(customSchema),!0))}finally{return customSchema}},self.saveCustomSchema=function(appName,schema){schema&&($localStorage.backand[appName].customSchema=schema)},self.removeCustomSchema=function(appName){$localStorage.backand[appName].customSchema=null},self.getErdModel=function(appName){return $localStorage.backand[appName].erdModel},self.getErdModelObject=function(appName,objectName){return _.find($localStorage.backand[appName].erdModel.nodes,{name:objectName})},self.saveErdModel=function(appName){$localStorage.backand[appName].erdModel=self.currentModel.erdModel},self.get=function(appName){return getAppLocalStorage(appName),ModelService.get(appName).then(function(response){return updateModels(appName,response)})},self.update=function(appName,schema){return ModelService.update(appName,schema).then(function(response){return updateModels(appName,response)})}}angular.module("common.data_models").service("DbDataModel",["ModelService","$localStorage",DbDataModel])}(),function(){angular.module("common.services").value("EscapeSpecialChars",function(obj){var escapedObj=angular.copy(obj);return _.forOwn(escapedObj,function(value,key){"string"==typeof value&&(escapedObj[key]=value.replace(/%/g,"%25").replace(/\+/g,"%2B"))}),escapedObj})}(),function(){function stringifyHttp(CONSTS){return function(http){var stringifiedHttp="return $http ("+angular.toJson(_.omit(http,"headers"),!0)+");";return stringifiedHttp=stringifiedHttp.replace(/"([\d\w\s]+)"\s*:/g,"$1:"),stringifiedHttp=stringifiedHttp.replace(/"/g,"'"),stringifiedHttp=stringifiedHttp.replace("'"+CONSTS.appUrl,"Backand.getApiUrl() + '")}}angular.module("common.services").factory("stringifyHttp",["CONSTS",stringifyHttp])}(),function(){angular.module("common.modals",[])}(),function(){function ConfirmModelUpdateController(modalInstance,titles,validationResponse){var self=this;switch(self.detailsTitle=titles.detailsTitle,self.validationResponse=validationResponse,self.actionPhrase=titles.actionPhrase,self.notifications=_.uniq(_.map(_.flatten(_.map(validationResponse.notifications)),angular.toJson)),_.isEmpty(self.notifications)&&(self.notifications=null),_.isEmpty(validationResponse[titles.resultProperty])||(validationResponse[titles.resultProperty]instanceof Array?(self.result=_.uniq(validationResponse[titles.resultProperty]),self.details="array"):(self.result=validationResponse[titles.resultProperty],self.details="string")),self.validationResponse.valid){case"never":self.text={title:"Errors in "+_.capitalize(titles.itemName),message:"Please fix the following errors in the "+titles.itemName+":",cssClass:"danger",cancelButton:"Return"},self.notifications=_.uniq(self.validationResponse.warnings);break;case"always":self.text={title:_.capitalize(titles.itemName)+" is Valid",cssClass:"success",okButton:"OK",cancelButton:"Cancel"},self.notifications?(self.text.message="The "+_.capitalize(titles.itemName)+" is valid.<br>The following parts of the "+titles.itemName+", including the data they contain, will be permanently deleted.<br>Click Ok to proceed",self.text.cssClass="danger",self.text.title="Warning"):self.text.message="Click Ok to proceed";break;case"data":self.text={title:"Warning",cssClass:"danger",okButton:"OK",cancelButton:"Cancel"},self.notifications?self.text.message="The "+_.capitalize(titles.itemName)+" is valid.<br>The following parts of the "+titles.itemName+", including the data they contain, will be permanently deleted.<br>Changes made to the "+titles.itemName+" include changes to fields types.<br>Those changes may result in a loss or corruption of data.<br>Click Ok to proceed":(self.notifications=_.uniq(self.validationResponse.warnings),self.text.message="The "+_.capitalize(titles.itemName)+" is valid.<br>Changes made to the "+titles.itemName+" include changes to fields types.<br>Those changes may result in a loss or corruption of data.<br>Click Ok to proceed")}self.closeValidationModal=function(result){modalInstance.close(result)}}angular.module("common.modals").controller("ConfirmModelUpdateController",["$modalInstance","titles","validationResponse",ConfirmModelUpdateController])}(),angular.module("backand.routes",[]).config(["$stateProvider","$urlRouterProvider","$uiViewScrollProvider","$logProvider","$httpProvider",function($stateProvider,$urlRouterProvider,$uiViewScrollProvider,$logProvider,$httpProvider){$urlRouterProvider.otherwise("/"),$uiViewScrollProvider.useAnchorScroll(),$logProvider.debugEnabled(!0),$httpProvider.interceptors.push("httpInterceptor"),$stateProvider.state("auth",{url:"?data&error&st",templateUrl:"views/auth/auth.html","abstract":!0,controller:"AuthController as Auth"}).state("sign_up",{parent:"auth",url:"/sign_up?username&name&i&token",templateUrl:"views/auth/sign_up.html",controller:"SignUpController as signup"}).state("sign_in",{parent:"auth",url:"/sign_in",templateUrl:"views/auth/sign_in.html",controller:"SignInController as signin"}).state("change_password",{url:"/change_password",templateUrl:"views/auth/reset_password.html",controller:"resetPasswordController as change"}).state("session",{url:"/","abstract":!0,controller:"MainController as main",templateUrl:"views/shared/main_view.html",resolve:{appsList:["AppsService",function(AppsService){return AppsService.all()}]}}).state("apps",{url:"",parent:"session","abstract":!0,template:'<ui-view autoscroll="true"/>',onEnter:["AppsService",function(AppsService){AppsService.resetCurrentApp()}]}).state("app",{url:"app/:appName",parent:"session",template:'<ui-view autoscroll="true"/>',resolve:{appItem:["AppsService","$stateParams","$state",function(AppsService,$stateParams,$state){return AppsService.getApp($stateParams.appName)["catch"](function(){$state.go("apps.index")})}]},controller:["$state","appItem","AppsService","usSpinnerService",function($state,appItem,AppsService,usSpinnerService){var state,appStatus=appItem.DatabaseStatus;"app"===$state.current.name&&(state=2==appStatus?"docs.get-started":0==appStatus?"database.edit":AppsService.isExampleApp(appItem)?"playground.todo":"app.show",$state.go(state).then(function(){usSpinnerService.stop("loading-app")}))}]}).state("database",{url:"/database",parent:"app","abstract":!0,template:"<div ui-view></div>"}).state("backoffice",{url:"/backoffice",parent:"app","abstract":!0,template:"<div ui-view></div>"}).state("playground",{url:"/playground",parent:"app","abstract":!0,template:'<ui-view autoscroll="true"/>'}).state("tables",{url:"/objects",parent:"app","abstract":!0,template:"<div ui-view></div>"}).state("log",{url:"/log",parent:"app","abstract":!0,template:"<div ui-view></div>"}).state("security",{url:"/security",parent:"app","abstract":!0,template:"<div ui-view></div>"}).state("dbQueries",{url:"/queries",parent:"app","abstract":!0,template:"<div ui-view></div>"})}]).run(["$rootScope","$state","SessionService","AuthService","CONSTS",run]),function(){"use strict";angular.module("backand.consts",[]).constant("CONSTS",{mainAppName:"bko",appUrl:"https://api.backand.com",playgroundUrl:"//s3.amazonaws.com/demo.backand.net/misc/rest-api/",IntercomAppId:"ufkkj816",backandUserObject:"backandUsers",backandRoleObject:"backandRoles",env:"PROD"})}(),function(){"use strict";angular.module("backand").config(["$translateProvider",function($translateProvider){var tooltips={TITLE:"this is a title",FOO:"this is a foo",NEST:{FOO:"this is nested foo"}};$translateProvider.translations("en",tooltips).preferredLanguage("en")}])}(),function(){"use strict";function MainController($scope,$state,LayoutService,ConfirmationPopup){var self=this;!function(){self.showJumbo=LayoutService.showJumbo()}(),self.hideNav=function(){return"apps.index"==$state.current.name&&self.showJumbo},self.getAppName=function(){return $state.params.appName},$scope.$on("AppDbReady",function(event,appName){ConfirmationPopup.confirm('You can start by reviewing the REST API of your model in the Playground page. You can find the page under "Docs & API" in the navigation bar.',"Ok","",!0,!1,"Your app "+appName+" is ready")})}angular.module("backand").controller("MainController",["$scope","$state","LayoutService","ConfirmationPopup",MainController])}(),function(){"use strict";function NavCtrl($scope,$state,AppsService,$log,TablesService,DbQueriesService){function clearTables(){self.tables=[],self.queries=[]}function fetchTables(){clearTables(),loadTables()}function loadTables(){self.appName=$state.params.appName,void 0!=self.appName&&TablesService.get(self.appName).then(function(data){self.tables=data,self.appName&&(0==self.tables.length?AppsService.appDbStat(self.appName).then(successDbStats):self.dbEmpty=!1,fetchDbQueries())},function(data){$log.debug("TablesService failure",data)})}function successDbStats(data){data.data&&(self.dbEmpty=0==data.data.tableCount)}function fetchDbQueries(){DbQueriesService.getQueries($state.params.appName).then(function(data){self.queries=data},function(data){$log.debug("DbQueriesService failure",data)})}function loadApp(){"undefined"!=typeof self.appName&&AppsService.getApp(self.appName).then(successGetCurrentApp)}function successGetCurrentApp(data){self.app=data,self.DatabaseStatus=self.app.DatabaseStatus,0==self.DatabaseStatus?self.tables=[]:1==self.DatabaseStatus&&loadTables()}var self=this;!function(){self.app=AppsService.currentApp,clearTables()}(),self.isExampleApp=function(){return AppsService.isExampleApp(self.app)},self.showAppNav=function(){return $state.params.appName?self.app?0==self.app.DatabaseStatus||2==self.app.DatabaseStatus?"views/shared/nav_connect_db.html":"views/shared/nav_app.html":null:"views/shared/nav.html"},$scope.$on("fetchTables",fetchTables),$scope.$on("appname:saved",fetchTables),$scope.$on("$stateChangeSuccess",function(){self.state=$state.current.name,self.appName=$state.params.appName,loadApp()}),$scope.$on("AppDbReady",loadApp),self.isTablesActive=function(){return $state.includes("tables.columns")},self.getDBStatus=function(){if(_.isEmpty(self.app))return"unknown";switch(parseInt(self.app.DatabaseStatus)){case 0:case 2:return"warning";case 1:return"success";default:return"error"}},self.goTo=function(state){1===self.app.DatabaseStatus&&$state.go(state)},self.goToAlways=function(state){$state.go(state)},self.goToLocation=function(href){1===self.app.DatabaseStatus&&window.open(href,"_blank")},self.showTable=function(table){var path="object_fields";self.isTablesActive()&&(path=$state.current.name),$state.go(path,{tableName:table.name,tableId:table.__metadata.id})},self.showDbQuery=function(query){var params={queryId:query.__metadata.id};$state.go("dbQueries.query",params)},self.newDbQuery=function(){$state.go("dbQueries.newQuery")}}angular.module("controllers").controller("NavCtrl",["$scope","$state","AppsService","$log","TablesService","DbQueriesService",NavCtrl])}(),function(){"use strict";function HeaderController($scope,AppsService,$state,usSpinnerService,LayoutService,SessionService,$location,$modal){var self=this;!function(){self.showJumbo=LayoutService.showJumbo()}(),self.apps=AppsService.apps,self.currentAppName=AppsService.currentApp.Name,$scope.$on("$stateChangeSuccess",function(){self.currentAppName=AppsService.currentApp.Name}),self.goToApp=function(){usSpinnerService.spin("loading-app"),$state.go("app",{appName:self.currentAppName})},self.hideAppList=function(){return"apps.index"===$state.current.name&&self.showJumbo},self.getCurrentUser=function(){return SessionService.currentUser},self.logout=function(){SessionService.clearCredentials(),$location.path("/sign_in")},self.openVideoModal=function(){$modal.open({templateUrl:"views/shared/video_tutorials.html",windowTemplateUrl:"views/shared/video_tutorials_window.html",controller:"VideoController as videoCtrl",backdropClass:"video-bg"})},self.closeVideoModal=function(){self.showVideoModal=!1},self.changePassword=function(){$modal.open({templateUrl:"views/auth/change_password.html",controller:"ChangePasswordController as ChangePassword"})}}angular.module("controllers").controller("HeaderController",["$scope","AppsService","$state","usSpinnerService","LayoutService","SessionService","$location","$modal",HeaderController])}(),function(){function AuthController(AuthService,SessionService,HttpBufferService,NotificationService,$state,usSpinnerService,AuthLayoutService){var self=this;self.flags=AuthService.flags,self.flags.authenticating=!1,self.template=AuthLayoutService.flags.landing&&$state.is("sign_up")?"views/auth/auth_landing.html":"views/auth/auth_regular.html",SessionService.clearCredentials(),HttpBufferService.rejectAll(),$state.params.error&&NotificationService.add("error",JSON.parse($state.params.error).message),self.socials=AuthService.socials,self.socialLogin=function(social){self.flags.authenticating=!0,usSpinnerService.spin("socialSignin"),AuthService.socialLogin(social).then(function(){var requestedState=SessionService.getRequestedState();$state.go(requestedState.state||"apps.index",requestedState.params)})["catch"](function(error){self.flags.authenticating=!1,usSpinnerService.stop("socialSignin"),error.data&&NotificationService.add("error",error.data.error_description||error.data)})}}angular.module("backand").controller("AuthController",["AuthService","SessionService","HttpBufferService","NotificationService","$state","usSpinnerService","AuthLayoutService",AuthController])}(),function(){function SignInController(AuthService,$state,SessionService,$modal,NotificationService){var self=this;self.flags=AuthService.flags,self.loading=!1,self.signIn=function(){self.flags.authenticating=!0,self.loading=!0,self.error=void 0,AuthService.signIn({username:self.userName,password:self.userPassword}).then(function(){var requestedState=SessionService.getRequestedState();$state.go(requestedState.state||"apps.index",requestedState.params)})["catch"](function(response){self.flags.authenticating=!1,self.loading=!1,self.error=response.data.error_description})},self.open=function(){self.modalOn=!0;var modalInstance=$modal.open({templateUrl:"views/auth/forgot_modal.html",controller:"ForgotController as forgot",resolve:{Uemail:function(){return self.userName}}});modalInstance.result.then(function(){self.modalOn=!1,NotificationService.add("success","Please check your mailbox - we've sent you an email with a link to reset your password.")},function(){self.modalOn=!1})}}angular.module("backand").controller("SignInController",["AuthService","$state","SessionService","$modal","NotificationService",SignInController])}(),function(){function SignUpController(AuthService,$state,SessionService,$timeout){var self=this;!function(){self.flags=AuthService.flags,self.loading=!1,1==$state.params.i&&(self.fullName=$state.params.name,self.email=$state.params.username,self.password=Math.random().toString(36).substring(7),self.repassword=self.password,$timeout(function(){self.signUp()},100))}(),self.signUp=function(){self.flags.authenticating=!0,self.loading=!0,AuthService.signUp(self.fullName,self.email,self.password).then(function(){var requestedState=SessionService.getRequestedState();$state.go(requestedState.state||"apps.index",requestedState.params)})["catch"](function(data){self.flags.authenticating=!1,self.loading=!1,self.error=data.error_description,$timeout(function(){self.error=void 0},3e3)})}}angular.module("backand").controller("SignUpController",["AuthService","$state","SessionService","$timeout",SignUpController])}(),function(){"use strict";function ForgotController($scope,$modalInstance,Uemail,AuthService,$timeout){var self=this;this.email=Uemail,this.loading=!1,this.ok=function(){this.loading=!0,AuthService.forgot(self.email).success(function(){$modalInstance.close(self.email)}).error(function(data){self.loading=!1,self.error=data.error_description,$timeout(function(){self.error=void 0},3e3)})},this.cancel=function(){$modalInstance.dismiss("cancel")}}angular.module("backand").controller("ForgotController",["$scope","$modalInstance","Uemail","AuthService","$timeout",ForgotController])}(),function(){"use strict";function ChangePasswordController(AuthService,$modalInstance,NotificationService){var self=this;self.changePassword=function(){AuthService.changePassword(self.userData.oldPassword,self.userData.newPassword).then(function(){NotificationService.add("success","Password was changed"),$modalInstance.close()})},self.cancelChangePassword=function(){$modalInstance.dismiss("cancel")}}angular.module("backand").controller("ChangePasswordController",["AuthService","$modalInstance","NotificationService",ChangePasswordController])}(),function(){"use strict";function resetPasswordController(AuthService,$state,$location,NotificationService,$timeout){var self=this;this.loading=!1,this.submit=function(){this.loading=!0,AuthService.resetPassword(self.password,$location.search().id).success(function(){NotificationService.add("success","password changed"),$state.go("sign_in")}).error(function(data){self.loading=!1,self.error=data.error_description,$timeout(function(){self.error=void 0},3e3)})}}angular.module("backand").controller("resetPasswordController",["AuthService","$state","$location","NotificationService","$timeout",resetPasswordController])}(),function(){"use strict";function config($stateProvider){$stateProvider.state("tables.notables",{url:"/sync",controller:"TablesShow as tables",templateUrl:"views/tables/no_tables.html"}).state("tables.model",{url:"/model","abstract":!0,controller:"ModelController as Model",templateUrl:"views/tables/model/model.html"}).state("tables.columns",{url:"/:tableId",controller:"SingleTableShow as singleTable",templateUrl:"views/tables/show_single_table.html","abstract":!0,resolve:{tableName:["TablesService","RulesService","ColumnsService","DictionaryService","$stateParams","$q",function(TablesService,RulesService,ColumnsService,DictionaryService,$stateParams,$q){return TablesService.get($stateParams.appName).then(function(tables){var tableName=TablesService.getTableNameById(tables,$stateParams.tableId).name;return RulesService.tableName=ColumnsService.tableName=DictionaryService.tableName=tableName,tableName},function(error){return $q.reject(error)})}]}}).state("object_fields",{url:"/fields",parent:"tables.columns",templateUrl:"views/tables/fields/fields.html",controller:"FieldsController as fields"}).state("object_actions",{parent:"tables.columns",url:"/actions",templateUrl:"views/tables/rules/rules.html"}).state("object_security",{url:"/security",parent:"tables.columns",templateUrl:"views/tables/security/security.html",controller:"SecurityController as security"}).state("object_settings",{url:"/settings",parent:"tables.columns",templateUrl:"views/tables/settings/settings.html",controller:"FieldsController as fields"}).state("object_data",{url:"/data?showLog",parent:"tables.columns",templateUrl:"views/tables/data/data.html",controller:"ObjectDataController as ObjectData",params:{showLog:!0}}).state("object_restapi",{url:"/restapi",parent:"tables.columns",templateUrl:"views/tables/restapi/restapi.html",controller:"RestAPITab as rest"})}angular.module("backand").config(config),config.$inject=["$stateProvider"]}(),function(){"use strict";function TablesShow($rootScope,$stateParams,NotificationService,ColumnsService){var self=this;!function(){self.appName=$stateParams.appName}(),self.sync=function(){self.syncing=!0,NotificationService.add("info","Sync takes 1-2 minutes"),ColumnsService.sync().then(function(data){self.syncing=!1,self.messages=[],self.messages.push("New tables added: "+data.data.added),self.messages.push("Tables with error:"+(data.data.newTables-data.data.added)),""!==data.data.errors?(NotificationService.add("error","Synchronizing tables completed with errors: "+data.data.errors),self.alertClass="tables-alert-with-errors",self.messages.push("Errors: "+data.data.errors)):(NotificationService.add("success","Synchronizing tables was completed successfully"),self.alertClass=""),$rootScope.$broadcast("fetchTables"),$rootScope.$broadcast("after:sync")},function(){self.syncing=!1,NotificationService.add("error","Cannot sync tables")})}}angular.module("backand").controller("TablesShow",["$rootScope","$stateParams","NotificationService","ColumnsService",TablesShow])}(),function(){function SingleTableShow($stateParams,ColumnsService,$scope,RulesService,DictionaryService,SecurityService,NotificationService,$rootScope,tableName,AppsService){function loadColumns(){ColumnsService.get().then(null,errorHandler)}function updateAppName(event,data){self.tableName=data,ColumnsService.tableName=DictionaryService.tableName=self.tableName}function errorHandler(error,message){NotificationService.add("error",message)}var self=this;!function(){self.appName=$stateParams.appName,self.tableId=$stateParams.tableId,self.tableName=tableName,self.messages=[],self.fields=[],self.view={},self.fieldTypesRange=["String","DateTime","Integer"],self.selectedField=null,self.tabs=[{heading:"Fields",route:"object_fields"},{heading:"Actions",route:"object_actions"},{heading:"Security",route:"object_security"},{heading:"Settings",route:"object_settings"},{heading:"Data",route:"object_data"},{heading:"REST API",route:"object_restapi"}],RulesService.appName=DictionaryService.appName=SecurityService.appName=self.appName,RulesService.tableId=self.tableId,$scope.$on("appname:updated",updateAppName),$scope.$on("appname:saved",loadColumns),self.isLocal="local"===AppsService.currentApp.connectionSource,loadColumns()
}(),self.sync=function(){self.syncing=!0,NotificationService.add("info","Sync takes 1-2 minutes"),ColumnsService.sync().then(function(data){self.syncing=!1,self.messages=[],self.messages.push("New tables added: "+data.data.added),self.messages.push("Tables with error:"+(data.data.newTables-data.data.added)),__insp.push(["tagSession","sync tables_"+data.data.added]),""!==data.data.errors?(NotificationService.add("error","Synchronizing tables completed with errors: "+data.data.errors),self.alertClass="tables-alert-with-errors",self.messages.push("Errors: "+data.data.errors)):(NotificationService.add("success","Synchronizing tables was completed successfully"),self.alertClass=""),$rootScope.$broadcast("fetchTables"),$rootScope.$broadcast("after:sync")},function(){self.syncing=!1,NotificationService.add("error","Can not sync tables")})}}angular.module("backand").controller("SingleTableShow",["$stateParams","ColumnsService","$scope","RulesService","DictionaryService","SecurityService","NotificationService","$rootScope","tableName","AppsService",SingleTableShow])}(),function(){"use strict";function RestAPITab(CONSTS,SessionService,$state,usSpinnerService,$sce,ColumnsService,$scope){function eventListener(e){var eventName=e.data[0],data=e.data[1];switch(eventName){case"setHeight":$("#restIframe").height(data+50);break;case"ready":var o=document.getElementsByTagName("iframe")[0];usSpinnerService.spin("loading");var message={auth:"bearer "+token,appName:appName};o.contentWindow.postMessage(message,"*");break;case"complete":usSpinnerService.stop("loading")}}var self=this,token=SessionService.getToken(),appName=$state.params.appName,tableName=ColumnsService.tableName;self.urlPrefix=$sce.trustAsHtml('<iframe id="restIframe" src="'+CONSTS.playgroundUrl+"index.html?tableName="+tableName+'&useToken=true&split=true#!/Objects" style="height:578px;width:100%;border: none"></iframe>'),$scope.$on("$destroy",function(){window.removeEventListener("message",eventListener,!1);var iframe=angular.element("#restIframe");iframe&&iframe.length>0&&(iframe[0].src="javascript:void(0);")}),window.addEventListener("message",eventListener,!1)}angular.module("backand").controller("RestAPITab",["CONSTS","SessionService","$state","usSpinnerService","$sce","ColumnsService","$scope",RestAPITab])}(),function(){function FieldsController($scope,ColumnsService,TablesService,NotificationService){function reloadFields(){ColumnsService.get(!0).then(successHandler,errorHandler)}function getFields(force){null==self.view&&null!=ColumnsService.tableName&&ColumnsService.get(force).then(successHandler,errorHandler)}function successHandler(data){self.items=data.fields,self.view=data}function afterSync(){ColumnsService.forceCommit(self.view).then(reloadFields,errorHandler)}function errorHandler(error,message){NotificationService.add("error",message)}var self=this;self.newTypes={ShortText:"string",LongText:"text",Numeric:"float",DateTime:"datetime",Boolean:"boolean",SingleSelect:"object",MultiSelect:"collection"},function(){self.items=[],getFields(!0),$scope.$on("appname:saved",reloadFields),$scope.$on("after:sync",afterSync)}(),self.getTableId=function(tableName){return TablesService.getTableByName(tableName).__metadata.id},$scope.$watch(function(){return self.view},function(newVal,oldValue){null!=newVal&&null!=oldValue&&newVal!==oldValue&&(ColumnsService.commit(self.view),self.view.name!=self.view.__metadata.name&&$scope.$emit("appname:updated",self.view.name))},!0)}angular.module("backand").controller("FieldsController",["$scope","ColumnsService","TablesService","NotificationService",FieldsController])}(),function(){function RulesController($scope,ConfirmationPopup,$filter,RulesService,NotificationService,DictionaryService,$stateParams,AppsService,AppLogService,DataService,ObjectsService,usSpinnerService,ColumnsService,CONSTS,AnalyticsService,EscapeSpecialChars,$modal,stringifyHttp){function init(){self.isNewAction=!1,self.showJsCodeHelpDialog=!1,setTestActionTitle(),getRules(),self.getActionTemplates()}function openActionTemplateModal(){var modalInstance=$modal.open({templateUrl:"views/tables/rules/action_template_modal.html",controller:"ActionTemplateController as actionTemplateCtrl",resolve:{action:function(){return self.action}}});modalInstance.result.then(function(){self.getActionTemplates()})}function refreshAction(action){return self.editMode=!1,self.requestTestForm=!1,self.showJsCodeHelpDialog=!1,$scope.modal.toggleGroup(),self.newRuleForm&&self.newRuleForm.$setPristine(),action&&action.__metadata?RulesService.getRule(action.__metadata.id).then(loadAction,errorHandler):void(self.action=null)}function loadAction(data){self.action=data.data}function getTestRow(){"Create"===self.getDataActionType()?self.getNewRow():self.getFirstRow()}function updateOrPostNew(action,isUpdate){return isUpdate?updateRule(action):postNewRule(action)}function isEditMode(){return self.editMode}function isCurGroup(groupName){return $scope.modal.curGroup==groupName}function toggleGroup(groupName){$scope.modal.curGroup=$scope.modal.isCurGroup(groupName)?null:groupName}function insertTokenAtChar(elementId,token){var aceEditor=$scope.ace.editors[elementId];aceEditor?setTimeout(function(){aceEditor.insert("{{"+token+"}}")}):$scope.$parent.$broadcast("insert:placeAtCaret",[elementId,"{{"+token+"}}"])}function digestIn(){angular.element()}function getRules(){self.dictionaryItems={parameters:[]};var crud=["create","update","delete"];crud.forEach(function(crudAction){DictionaryService.get(crudAction).then(function(data){populateDictionaryItems(crudAction,data.data)})}),RulesService.get().then(buildTree,errorHandler)}function populateDictionaryItems(crudAction,data){self.dictionaryItems[crudAction]={userInput:data.userInput,userProfile:data.systemTokens,dbRow:data[getTableName()]}}function getTableName(){return $stateParams.tableId?RulesService.tableName:CONSTS.backandUserObject}function getDictionaryItems(dictionarySection){return"parameters"===dictionarySection?self.dictionaryItems.parameters:self.dictionaryItems[_.find(RulesService.dataActions,{value:self.action.dataAction}).crud][dictionarySection]}function buildParametersDictionary(){var keys=[];self.action&&self.action.inputParameters&&(self.test.inputParametersArray=_.compact(self.action.inputParameters.replace(/ /g,"").split(",")),self.test.parameters=_.pick(self.test.parameters,self.test.inputParametersArray),angular.forEach(self.test.inputParametersArray,function(param){keys.push({token:param,label:param}),self.test.parameters[param]=self.test.parameters[param]||""})),self.dictionaryItems.parameters=keys}function getRuleByName(rulename){return angular.copy($filter("filter")(self.ruleList,function(f){return f.name===rulename})[0])}function postNewRule(rule){var data=angular.extend(defaultRule,rule);return RulesService.post(data).then(function(response){self.action=response.data})}function updateRule(rule){return RulesService.update(rule)}function getDefaultValue(type){switch(type){case"Numeric":return 0;case"DateTime":return new Date;case"ShortText":case"LongText":return"text";case"Boolean":return!1;case"SingleSelect":return null;default:return"text"}}function setTestRowData(data){usSpinnerService.stop("loading-row"),self.testRowObjectNotification=null,self.rowData=JSON.stringify(_.omit(data,["__metadata"]),null,"	")}function errorTestRowData(errorMessage){setTestRowData(),self.testRowObjectNotification=errorMessage}function getLog(response){self.test.resultStatus={code:response.status,text:response.statusText},self.test.result=response.data;var guid=response.headers("Action-Guid");self.testUrl=RulesService.getTestUrl(self.action,self.test,self.getDataActionType(),getTableName()),self.testHttp=stringifyHttp(RulesService.getTestHttp(self.action,self.test,self.getDataActionType(),getTableName(),self.rowData)),self.inputParametersForm.$setPristine(),self.testUrlCopied=!1,self.testHttpCopied=!1,AppLogService.getActionLog($stateParams.appName,guid).then(showLog,errorHandler)}function showLog(response){self.test.logMessages=[],response.data.data.forEach(function(log){self.test.logMessages.push({text:log.FreeText,isError:501==log.LogType,time:log.Time})}),self.test.testLoading=!1}function buildTree(data){self.ruleList=data.data.data,self.items=[{title:"On Demand",visible:!0,items:[{visible:!1,title:"Execute",description:"These actions fire based on a direct call to the REST API",dataAction:"OnDemand",items:[]}]},{title:"Create",visible:!0,items:[{visible:!1,title:"Before",dataAction:"BeforeCreate",description:"These actions execute before an object is created in the database",items:[]},{visible:!1,title:"During",dataAction:"AfterCreateBeforeCommit",description:"These actions execute after the object is being created and saved but before commit. The event occurring during the same transaction context",items:[]},{visible:!1,title:"After",dataAction:"AfterCreate",description:"These actions fire after a new record has been added to the database",items:[]}]},{title:"Update",visible:!0,items:[{visible:!1,title:"Before",dataAction:"BeforeEdit",description:"These actions execute before an object is updated in the database",items:[]},{visible:!1,title:"During",dataAction:"AfterEditBeforeCommit",description:"These actions execute while the object is being saved but before commit. The event occurring during the same transaction context",items:[]},{visible:!1,title:"After",dataAction:"AfterEdit",description:"These actions fire after a record has been modified in the database",items:[]}]},{title:"Delete",visible:!0,items:[{visible:!1,title:"Before",dataAction:"BeforeDelete",description:"These actions execute before an object is deleted from the database",items:[]},{visible:!1,title:"During",dataAction:"AfterDeleteBeforeCommit",description:"These actions execute while the object is being deleted but before commit. This event occurring during the same transaction context",items:[]},{visible:!1,title:"After",dataAction:"AfterDelete",description:"These actions fire after a new record has been deleted from the database",items:[]}]}],self.dataActionToType={},self.items.forEach(function(type){type.items.forEach(function(item){self.dataActionToType[item.dataAction]=type.title})}),angular.forEach(self.ruleList,function(value){var obj={name:value.name},da=$filter("filter")($scope.modal.dataActions,function(f){return f.value===value.dataAction})[0];da&&(self.items[da.level1].items[da.level2].visible=!0,self.items[da.level1].items[da.level2].items.push(obj))})}function setTestActionTitle(){var text="Test Action";if(self.action){var dataActionType=self.getDataActionType();text="Test "+dataActionType,text+="On Demand"===dataActionType?" Action":" Trigger"}self.testActionTitle=text}function getInputParametersForm(){return self.inputParametersForm}function getRuleForm(){return self.newRuleForm}function getTestUrl(){return self.testUrl}function getTestHttp(){return self.testHttp}function errorHandler(error,message){NotificationService.add("error",message),self.test.testLoading=!1}var self=this;self.getCategoryLabel=function(id){return _.find(RulesService.actionTemplateCategories,{id:parseInt(id)}).label},self.getActionTemplates=function(){return RulesService.getActionTemplates().then(function(result){result.data.data.forEach(function(template){try{template.json=angular.fromJson(template.json)}catch(error){console.log(error)}self.actionTemplates=_.groupBy(_.sortBy(result.data.data,"ordinal"),"category")})})},self.selectTemplate=function(template){self.action||self.newAction(null,template.name),self.action.name=self.action.name||template.ruleName,self.action.dataAction=self.action.dataAction||template.action||"OnDemand",_.assign(self.action,{workflowAction:template.ruleType,whereCondition:template.condition,inputParameters:template.parameters,code:template.code,command:template.executeCommand,executeMessage:template.executeMessage})},self.saveActionTemplate=function(){openActionTemplateModal()};var defaultRule={viewTable:RulesService.tableId,additionalView:"",databaseViewName:"",useSqlParser:!0};self.newAction=function(trigger,templateName){return self.action?(refreshAction(),self.clearTest(),void(self.isNewAction=!1)):(AnalyticsService.track("Template Selected",{template:templateName||"New Blank"}),self.showJsCodeHelpDialog=!1,self.action={whereCondition:"true",code:backandCallbackConstCode.start+"\n	// write your code here\n\n	return {};\n"+backandCallbackConstCode.end},trigger&&(self.action.dataAction=trigger),self.clearTest(),self.editAction(),void(self.isNewAction=!0))},self.showAction=function(actionName){self.showJsCodeHelpDialog=!1,self.isNewAction=!1;var action=getRuleByName(actionName);refreshAction(action).then(self.clearTest)},self.allowEditAction=function(){return self.action&&self.action.__metadata&&!self.editMode},self.editAction=function(){self.editMode=!0,$scope.modal.toggleGroup(),buildParametersDictionary()},self.clearTest=function(){self.test={parameters:{}},getTestRow(),setTestActionTitle(),buildParametersDictionary()},self.doneEdit=function(){refreshAction(self.action)},self.cancelEdit=function(){ConfirmationPopup.confirm("Changes will be lost. Are sure you want to cancel editing?","Cancel Editing","Continue Editing").then(function(result){result?refreshAction(self.action):!1})},self.saveAction=function(withTest){self.saving=!0,withTest?self.savingAndTesting=!0:null,self.testUrl="",self.testHttp="",buildParametersDictionary(),self.action.inputParameters=_.trimRight(self.action.inputParameters,",");var ruleToSend=EscapeSpecialChars(self.action);updateOrPostNew(ruleToSend,self.action.__metadata).then(getRules).then(function(){self.newRuleForm.$setPristine(),NotificationService.add("success","The action was saved"),AnalyticsService.track("AddedRule",{rule:self.action.name}),self.saving=!1,self.savingAndTesting=!1,self.isNewAction=!1,withTest&&self.testData(),self.requestTestForm=!0},function(){self.saving=!1,self.savingAndTesting=!1})},self.deleteAction=function(){self.showJsCodeHelpDialog=!1,ConfirmationPopup.confirm("Are sure you want to delete this rule?").then(function(result){result&&RulesService.remove(self.action).then(getRules).then(refreshAction)})},self.allowTestForm=function(){var allow=self.action&&self.action.__metadata;return allow},self.toggleTestForm=function(){self.requestTestForm=!self.requestTestForm},self.showTestForm=function(){return self.requestTestForm&&self.allowTestForm()},self.allowTest=function(){return self.test&&(self.allowTestEditMode=null!=self.test.rowId||null==self.test.rowId&&"Delete"!=self.getDataActionType()&&"Update"!=self.getDataActionType()),self.newRuleForm&&self.newRuleForm.$pristine},$scope.ace={dbType:"mysql"==AppsService.currentApp.databaseName&&"mysql"||"pgsql",editors:{},onLoad:function(_editor){$scope.ace.editors[_editor.container.id]=_editor,_editor.$blockScrolling=1/0}},$scope.modal={title:"Action",dataActions:RulesService.dataActions,workflowActions:[{value:"JavaScript",label:"Server side JavaScript code"},{value:"Notify",label:"Send Email"},{value:"Execute",label:"Transactional sql script"}],insertAtChar:insertTokenAtChar,digest:digestIn,toggleGroup:toggleGroup,isCurGroup:isCurGroup,buildParameters:buildParametersDictionary},self.anchorParams={showAnchorCondition:isEditMode,toggleAngledWindow:$scope.modal.toggleGroup,showAngledWindow:$scope.modal.isCurGroup,dictionaryItems:self.dictionaryItems,insertAtChar:insertTokenAtChar,template:"views/tables/rules/dictionary_window.html",dictionarySections:["userInput","dbRow","parameters","userProfile"],getDictionaryItems:getDictionaryItems},self.getDictionary=function(crudAction){return self.dictionaryItems[crudAction]},self.getTableName=getTableName;var constRuleNames=["newUserVerification","requestResetPassword","userApproval","beforeSocialSignup","backandAuthOverride"];self.isConstName=function(ruleName){return"backandUsers"===self.getTableName()&&constRuleNames.indexOf(ruleName)>-1},$scope.modal.handleTabKey=function(e){if(9===e.keyCode){var start=e.currentTarget.selectionStart,end=e.currentTarget.selectionEnd,target=e.target,value=target.value;target.value=value.substring(0,start)+"	"+value.substring(end),e.currentTarget.selectionStart=e.currentTarget.selectionEnd=start+1,e.preventDefault()}},self.getNewRow=function(){return"backandUsers"===getTableName()?setTestRowData({email:"email",firstName:"text",lastName:"text",role:"User",password:"text",confirmPassword:"text"}):(ColumnsService.tableName=getTableName(),void ColumnsService.get().then(function(data){var newRow={};data.fields.forEach(function(field){"MultiSelect"===field.type||field.form.hideInCreate||(newRow[field.name]=getDefaultValue(field.type))}),setTestRowData(newRow)}))},self.getFirstRow=function(){return usSpinnerService.spin("loading-row"),DataService.get(getTableName(),1,1,"").then(function(data){data.data.data.length>0?(setTestRowData(data.data.data[0]),self.test.rowId=parseInt(data.data.data[0].__metadata.id)):self.test.rowId=null},function(){errorTestRowData("No data found")})},self.getRow=function(id){return null==id||""==id?(self.testRowObjectNotification=null,self.rowData="",void usSpinnerService.stop("loading-row")):(usSpinnerService.spin("loading-row"),ObjectsService.getObject(getTableName(),id).then(function(data){setTestRowData(data.data)},function(){errorTestRowData("No data exists with the specified Item Id")}))},self.ace={onLoad:function(_editor){self.ace.editor=_editor,_editor.$blockScrolling=1/0}},$scope.$watch(function(){return self.action?self.getDataActionType():void 0},function(newVal){self.ace&&self.ace.editor&&(self.clearTest(),"On Demand"===newVal||"Delete"===newVal?(self.ace.editor.setReadOnly(!0),self.ace.message="Item data (read only)"):(self.ace.message="Data to send in the test",self.ace.editor.setReadOnly(!1)))}),self.testData=function(){self.test.testLoading=!0,RulesService.testRule(self.action,self.test,self.getDataActionType(),getTableName(),self.rowData).then(getLog,errorHandler)},$scope.$watch(function(){return self.test?self.test.rowId:void 0},function(newVal,oldVal){"undefined"!=typeof newVal&&newVal!==oldVal&&self.getRow(newVal)}),self.treeSign=function(item){return 0===item.items.length?"":item.visible?"-":"+"},self.getDataActionType=function(){return self.action?self.dataActionToType[self.action.dataAction]:void 0},self.copyUrlParams={getUrl:getTestUrl,getInputForm:getInputParametersForm,getTestForm:getRuleForm},self.copyHttpParams={getUrl:getTestHttp,getInputForm:getInputParametersForm,getTestForm:getRuleForm},self.namePattern=/^\w+[\w ]*$/,self.paramsPattern=/^\s*(?:(?:[A-Za-z_]\w*)(?:\s*,\s*)?)*$/,self.codePattern=/\s*function\s+backandCallback\s*\(\s*userInput\s*,\s*dbRow\s*,\s*parameters\s*,\s*userProfile\s*\)\s*{(.|[\r\n])*}\s*$/;var backandCallbackConstCode={start:"/* globals\n  $http - Service for AJAX calls \n  CONSTS - CONSTS.apiUrl for Backands API URL\n  Config - Global Configuration\n*/\n'use strict';\nfunction backandCallback(userInput, dbRow, parameters, userProfile) {",end:"}"};init()}angular.module("backand").controller("RulesController",["$scope","ConfirmationPopup","$filter","RulesService","NotificationService","DictionaryService","$stateParams","AppsService","AppLogService","DataService","ObjectsService","usSpinnerService","ColumnsService","CONSTS","AnalyticsService","EscapeSpecialChars","$modal","stringifyHttp",RulesController])}(),function(){function ActionTemplateController($modalInstance,RulesService,action){var self=this;self.actionTemplate={name:action.name,shortDescription:"",documentation:"",ruleName:action.name,action:action.dataAction,ruleType:action.workflowAction,condition:action.whereCondition,parameters:action.inputParameters,code:action.code,executeCommand:action.command,executeMessage:action.executeMessage,json:{}},self.categories=RulesService.actionTemplateCategories,self.saveActionTemplate=function(){self.savingActionTemplate=!0,self.actionTemplate.json=angular.toJson(self.actionTemplate.json),RulesService.saveActionTemplate(self.actionTemplate).then(function(){$modalInstance.close()})["finally"](function(){self.savingActionTemplate=!1})},self.cancelActionTemplate=function(){$modalInstance.dismiss("cancel")}}angular.module("backand").controller("ActionTemplateController",["$modalInstance","RulesService","action",ActionTemplateController])}(),function(){function SecurityController($scope,$state,$filter,$modal,SecurityMatrixService,NotificationService,SecurityService,ColumnsService,DataService,DictionaryService,TablesService,ConfirmationPopup,tableName){function replaceFilter(result,type){var confirmationMessage="sql"===type?"The NoSQL query will be deleted. Would you like to continue?":"Would you like to replace the current pre-defined filter?";return"sql"!==type&&self.view.dataEditing.permanentFilter||"nosql"!==type&&self.view.dataEditing.nosqlPermanentFilter?ConfirmationPopup.confirm(confirmationMessage).then(function(approve){return approve?("sql"===type&&(self.view.dataEditing.nosqlPermanentFilter=""),updateFilter(result)):void 0}):updateFilter(result)}function updateFilter(filter){return self.showWizard=!1,filter&&filter.sql&&(self.view.dataEditing.permanentFilter=filter.sql),filter&&filter.noSql&&(self.view.dataEditing.nosqlPermanentFilter=filter.noSql),self.savePermanentFilter()}function savePermanentFilter(){return ColumnsService.commitAndUpdate(self.view).then(function(){return DataService.getDataSample(self.currentObjectName,!1,!0)})["catch"](function(error){return openErrorModal(error)})}function openErrorModal(error){$modal.open({templateUrl:"common/modals/confirm_update/confirm_update.html",controller:"ConfirmModelUpdateController as ConfirmModelUpdate",backdrop:"static",keyboard:!1,resolve:{validationResponse:function(){return{valid:"never",warnings:[_.last(error.data.split("Error details: "))]}},titles:function(){return{itemName:"query",actionPhrase:"The query was saved with errors."}}}})}function openValidationModal(response){var modalInstance=$modal.open({templateUrl:"common/modals/confirm_update/confirm_update.html",controller:"ConfirmModelUpdateController as ConfirmModelUpdate",backdrop:"static",keyboard:!1,resolve:{validationResponse:function(){return response.data},titles:function(){return{itemName:"query",detailsTitle:"The NoSQL is equivalent to the following SQL query:",resultProperty:"sql"}}}});return modalInstance.result}function toggleAngledWindow(){self.showDictionary=!self.showDictionary}function showAngledWindow(){return self.showDictionary}function insertTokenAtChar(elementId,token){var aceEditor=self.ace.editors[self.predefinedFilterType];aceEditor&&setTimeout(function(){aceEditor.insert("{{"+token+"}}")})}function getItemByRegex(object,regex){return _.find(object,function(item){return regex.test(item.name)})}function getUserObjectFields(){return self.filter.emailField=null,self.filter.userObjectFields=[],self.filter.userObjectName?ColumnsService.getColumns(self.filter.userObjectName).then(function(result){self.filter.userObjectFields=result.data.fields;var emailField=getItemByRegex(result.data.fields,/email/i);self.filter.emailField=emailField?emailField.name:null}):void 0}function toggleDictionary(){self.dictionaryState=!self.dictionaryState}function populateDictionaryItems(data){var raw=data.data,keys=Object.keys(raw);self.dictionaryItems={headings:{tokens:keys[0]},data:{tokens:raw[keys[0]]}}}function getWorkspaces(){DictionaryService.get("read").then(populateDictionaryItems),null==self.workspaces&&(SecurityService.appName=SecurityService.getWorkspace().then(workspaceSuccessHandler,errorHandler))}function workspaceSuccessHandler(data){self.workspaces=data.data.data,null==self.view&&ColumnsService.get().then(successHandler,errorHandler)}function successHandler(data){self.view=data,self.currentST=String(self.view.permissions.securityWorkspace),self.view.dataEditing.nosqlPermanentFilter||(self.view.dataEditing.permanentFilter?self.predefinedFilterType="sql":self.showWizard=!0),buildTemplate()}function templateChanged(template){var permissions=SecurityMatrixService.getPermission(template);return null==self._lastPermissions||JSON.stringify(permissions)==JSON.stringify(self._lastPermissions)?void(self._lastPermissions=permissions):(self.view.permissions.allowCreateRoles=permissions.allowCreate,self.view.permissions.allowEditRoles=permissions.allowEdit,self.view.permissions.allowDeleteRoles=permissions.allowDelete,self.view.permissions.allowReadRoles=permissions.allowRead,void ColumnsService.commit(self.view))}function templateRoleAdd(roleName){return SecurityService.postRole({Name:roleName,Description:roleName})}function templateRoleRename(roleName,newName){return SecurityService.updateRole({Name:newName,Description:newName},roleName)}function templateRoleRemove(roleName){return SecurityService.deleteRole(roleName)}function buildTemplate(){self.sTemplate=[];var permissions={};if(self.appName=SecurityMatrixService.appName=$state.params.appName,self.view.permissions.overrideinheritable)permissions.allowCreate=self.view.permissions.allowCreateRoles,permissions.allowEdit=self.view.permissions.allowEditRoles,permissions.allowDelete=self.view.permissions.allowDeleteRoles,permissions.allowRead=self.view.permissions.allowReadRoles,self._lastPermissions=permissions;else{var ws=$filter("filter")(self.workspaces,function(f){return f.__metadata.id==String(self.view.permissions.securityWorkspace)});if(!ws||!ws[0])return void NotificationService.add("error","Can't find security template");permissions.allowCreate=ws[0].allowCreate,permissions.allowEdit=ws[0].allowEdit,permissions.allowDelete=ws[0].allowDelete,permissions.allowRead=ws[0].allowRead}SecurityMatrixService.loadMatrix(permissions).then(function(data){self.sTemplate=data})}function errorHandler(error,message){NotificationService.add("error",message)}var self=this;!function(){self.predefinedFilterType="nosql",self.getUserObjectFields=getUserObjectFields,self.currentObjectName=tableName,self.appObjects=TablesService.tables;var userObject=getItemByRegex(self.appObjects,/user/i);self.filter={userObjectName:userObject?userObject.name:null},getUserObjectFields(),self.placeHolderSql="'{{sys::username}}' = ProjectUserEmail",self.placeHolderNoSql='{"title":{"$gt":"aaa"}}',self._lastPermissions=null,self.workspaces=null,self.view=null,self.savePermanentFilter=savePermanentFilter,self.templateChanged=templateChanged,self.templateRoleAdd=templateRoleAdd,self.templateRoleRename=templateRoleRename,self.templateRoleRemove=templateRoleRemove,getWorkspaces(),self.dictionaryItems={},self.dictionaryState=!1,self.toggleOptions=toggleDictionary,self.insertAtChar=insertTokenAtChar}(),self.ace={editors:{},onLoad:function(_editor){self.ace.editors[_editor.container.id]=_editor,_editor.$blockScrolling=1/0}},self.saveSqlFilter=function(){return replaceFilter(null,"sql")},self.transformNoSQL=function(){if(_.isEmpty(self.view.dataEditing.nosqlPermanentFilter))return self.view.dataEditing.permanentFilter="",savePermanentFilter();try{var q=JSON.parse(self.view.dataEditing.nosqlPermanentFilter)}catch(error){return NotificationService.add("error","JSON is not properly formatted"),void(self.loading=!1)}return SecurityService.transformNoSQL({object:self.currentObjectName,q:q}).then(function(response){return self.filter.result=response.data.sql,openValidationModal(response)}).then(function(result){result&&replaceFilter({sql:self.filter.result},"nosql")})},self.anchorParams={toggleAngledWindow:toggleAngledWindow,showAngledWindow:showAngledWindow,dictionaryItems:self.dictionaryItems,insertAtChar:insertTokenAtChar,template:"views/tables/rules/dictionary_window.html",dictionarySections:["userInput","dbRow","parameters","userProfile"],getDictionaryItems:function(){return self.dictionaryItems}},self.getFilterCode=function(){return SecurityService.getFilterCode(self.currentObjectName,self.filter).then(function(response){return self.filter.result={sql:response.data.sql,noSql:response.data.nosql},openValidationModal(response)}).then(function(result){result&&(self.filter.result.noSql=angular.toJson(angular.fromJson(self.filter.result.noSql).q,!0),replaceFilter(self.filter.result,"getCode"))})},$scope.$watch(function(){return self.currentST},function(newVal,oldValue){null!=newVal&&null!=oldValue&&newVal!==oldValue&&(self.view.permissions.securityWorkspace=Number(self.currentST),buildTemplate())})}angular.module("backand").controller("SecurityController",["$scope","$state","$filter","$modal","SecurityMatrixService","NotificationService","SecurityService","ColumnsService","DataService","DictionaryService","TablesService","ConfirmationPopup","tableName",SecurityController])}(),function(){function ObjectDataController(NotificationService,ColumnsService,DataService,$scope,$modal,usSpinnerService,tableName,ConfirmationPopup,$filter,$state){function getPageData(newVal,oldVal){newVal!==oldVal&&getData(!1,!0)}function getData(force,log){usSpinnerService.spin("loading-data"),ColumnsService.get(force).then(successColumnsHandler,errorHandler).then(function(){return loadData(log)}).then(successDataHandler,errorHandler)}function loadData(log){return DataService.get(self.tableName,self.paginationOptions.pageSize,self.paginationOptions.pageNumber,self.sort,null,log)}function successColumnsHandler(data){self.columnDefs=data.fields,getFilterOptions(),getEditRowData()}function successDataHandler(response){if(self.gridOptions.totalItems=response.data.totalRows,0===self.gridOptions.totalItems)return void usSpinnerService.stop("loading-data");self.gridOptions.data=response.data.data;var columns=[];response.data.data.length>0&&(columns=_.without(Object.keys(response.data.data[0]),"__metadata")),fixDatesInData(),self.gridOptions.columnDefs=columns.map(function(column){var columnInfo=_.find(self.columnDefs,{name:column});return{minWidth:80,name:column,displayName:column,cellTemplate:getCellEditTemplate(columnInfo)}}),addActionColumns(),_.last(self.gridOptions.columnDefs)&&(_.last(self.gridOptions.columnDefs).minWidth=286),setTimeout(refreshGridDisplay(),1),usSpinnerService.stop("loading-data")}function addActionColumns(){var actionColumnOptions={width:30,displayName:"",enableSorting:!1,enableColumnMenu:!1},deleteColumnOptions={name:"delete",cellTemplate:'<div class="grid-icon" ng-click="grid.appScope.ObjectData.deleteRow($event, row)"><i class="ti-trash"/></div>'};angular.extend(deleteColumnOptions,actionColumnOptions),self.gridOptions.columnDefs.unshift(deleteColumnOptions);var editColumnOptions={name:"edit",cellTemplate:'<div class="grid-icon" ng-click="grid.appScope.ObjectData.editRow($event, row)"><i class="ti-pencil"/></div>'};angular.extend(editColumnOptions,actionColumnOptions),self.gridOptions.columnDefs.unshift(editColumnOptions)}function refreshGridDisplay(){self.refreshOnce||(resizeGrid(),self.refreshOnce=!0)}function errorHandler(error,message){usSpinnerService.stop("loading-data"),NotificationService.add("error",message)}function getCellEditTemplate(column){if(column.form.hideInEdit||column.form.disableInEdit||column.advancedLayout.excludeInUpdate)return void 0;var callbackOptions=' onbeforesave="grid.appScope.ObjectData.onUpdateRowCell(row, col, $data)"',type=getFieldType(column.type);return"multiSelect"===type?void 0:"dateTime"==type?'<div class="ui-grid-cell-contents"><span editable-date="MODEL_COL_FIELD" class="editable-grid-cell" '+callbackOptions+'>{{COL_FIELD | date:"MM/dd/yyyy" CUSTOM_FILTERS }}</span> <span editable-bstime="MODEL_COL_FIELD" e-show-meridian="false" class="editable-grid-cell" '+callbackOptions+'>{{COL_FIELD | date:"HH:mm:ss" CUSTOM_FILTERS }}</span></div>':"singleSelect"===type?'<div class="ui-grid-cell-contents" editable-text="MODEL_COL_FIELD" e-typeahead="item.__metadata.id as grid.appScope.ObjectData.getSingleSelectLabel(item, col) for item in grid.appScope.ObjectData.getSingleAutocomplete(col, $viewValue)" e-typeahead-template-url="views/tables/data/select_row_template.html" e-typeahead-editable="false" '+callbackOptions+">{{COL_FIELD CUSTOM_FILTERS}}</div>":("numeric"===type&&(type="text"),'<div class="ui-grid-cell-contents" editable-'+type+'="MODEL_COL_FIELD" '+callbackOptions+">{{COL_FIELD CUSTOM_FILTERS}}</div>")
}function fixDatesInData(){self.columnDefs.forEach(function(columnDef){"DateTime"==columnDef.type&&self.gridOptions.data.forEach(function(row){var date=row[columnDef.name];row[columnDef.name]=date?new Date(date):"- - - - - - -"})})}function getFieldType(type){switch(type){case"MultiSelect":return"multiSelect";case"SingleSelect":return"singleSelect";case"Numeric":return"numeric";case"DateTime":return"dateTime";case"ShortText":return"text";case"LongText":return"textarea";case"Boolean":return"checkbox";default:return"text"}}function getFieldTypeForFilter(type){switch(type){case"MultiSelect":return null;case"SingleSelect":return"select";case"ShortText":case"LongText":return"text";default:return type}}function getEditRowEntity(rowItem){self.editRowData.id=rowItem?rowItem.entity.__metadata.id:null,self.editRowData.entities=[],self.editRowData.form.forEach(function(formItem){self.editRowData.entities.push({key:formItem.key,hide:formItem.hideInCreate&&!rowItem||formItem.hideInEdit&&rowItem||"multiSelect"===formItem.type,disable:formItem.disable||formItem.disableInCreate&&!rowItem||formItem.disableInEdit&&rowItem,required:formItem.required,value:rowItem?rowItem.entity[formItem.key]:formItem.defaultValue,type:formItem.type,relatedView:formItem.relatedView})})}function resetEditRowData(){self.editRowData={form:[]},self.relatedViews={}}function getEditRowData(){resetEditRowData(),self.columnDefs.forEach(function(column){var columnData={disableInCreate:column.form.disableInCreate||column.advancedLayout.excludeInInsert,hideInCreate:column.form.hideInCreate,disableInEdit:column.form.disableInEdit||column.advancedLayout.excludeInUpdate,hideInEdit:column.form.hideInEdit,required:column.advancedLayout.required,defaultValue:column.advancedLayout.defaultValue,key:column.name,type:getFieldType(column.type)};_.isEmpty(column.relatedViewName)||ColumnsService.getColumns(column.relatedViewName).then(function(response){columnData.relatedView={object:column.relatedViewName,descriptiveColumn:response.data.columnDisplayinTitle},self.relatedViews[column.name]={object:column.relatedViewName,descriptiveColumn:response.data.columnDisplayinTitle}}),self.editRowData.form.push(columnData)})}function openModal(){var modalInstance=$modal.open({templateUrl:"views/tables/data/edit_row.html",controller:"EditRowController as EditRow",resolve:{editRowData:function(){return self.editRowData},tableName:function(){return self.tableName}}});modalInstance.result.then(function(result){result&&result.reopen?self.newRow():usSpinnerService.spin("loading-data"),loadData().then(successDataHandler)})}function getFilterOptions(){self.filterOptions={fields:getFieldsForFilter(),operators:null},self.filterReady=!0,self.lastQuery=[]}function getFieldsForFilter(){var fields=_.map(self.columnDefs,function(field,index){var fieldData={index:index,name:field.name,type:getFieldTypeForFilter(field.type),originalType:field.type};return"SingleSelect"!==field.type||_.isEmpty(field.relatedViewName)||ColumnsService.getColumns(field.relatedViewName).then(function(response){fieldData.relatedView={object:field.relatedViewName,descriptiveColumn:response.data.columnDisplayinTitle}}),fieldData});return _.remove(fields,{type:null}),fields}function filterValid(item){return item.field&&item.operator&&(item.value||self.disableValue(item.operator))}function resizeGrid(){setTimeout("$('#grid-container').trigger('resize');",50)}var self=this;self.tableName=tableName,self.title="",self.sort="",self.refreshOnce=!1,self.httpRequestsLog=DataService.log=[],self.showLog="false"===$state.params.showLog?!1:$state.params.showLog,self.logIndex=DataService.logIndex,this.paginationOptions={pageNumber:1,pageSize:20,pageSizes:[20,50,100,1e3]},function(){getData(!0,!0)}(),self.toggleShowLog=function(){self.showLog=!self.showLog,$state.go(".",{showLog:self.showLog},{notify:!1}),resizeGrid()},self.gotoNextLogItem=function(){self.httpRequestsLog[self.logIndex.last+1]&&self.logIndex.last++},self.gotoPrevLogItem=function(){self.httpRequestsLog[self.logIndex.last-1]&&self.logIndex.last--},self.toggleShowFilter=function(){self.filterReady&&(self.showFilter=!self.showFilter)},self.createData=function(data){DataService.post(tableName,data,!0)},self.refresh=function(){self.filterData()},self.gridOptions={enablePaginationControls:!1,useExternalSorting:!0,excludeProperties:"__metadata",excessColumns:20,onRegisterApi:function(gridApi){$scope.gridApi=gridApi,$scope.gridApi.core.on.sortChanged($scope,function(grid,sortColumns){self.sort=sortColumns[0]?'[{fieldName:"'+sortColumns[0].name+'", order:"'+sortColumns[0].sort.direction+'"}]':"",getData(!1,!0)})}},$scope.$watchGroup(["ObjectData.paginationOptions.pageNumber","ObjectData.paginationOptions.pageSize"],getPageData),this.pageMax=function(pageSize,currentPage,max){return Math.min(pageSize*currentPage,max)},self.getSingleAutocomplete=function(item,query){return DataService.search(self.relatedViews[item.field].object,query).then(function(result){return results=$filter("orderBy")(result.data.data,"__matadata.id"),results})},self.getAutocomplete=function(columnName,term){return DataService.getAutocomplete(self.tableName,columnName,term).then(function(result){return results=$filter("orderBy")(result.data,"value"),results})},self.onUpdateRowCell=function(row,col,newValue){var updatedObject={};updatedObject[col.name]=newValue;var updatePromise=DataService.update(self.tableName,updatedObject,row.entity.__metadata.id,!0);return updatePromise.then(function(){return loadData()}).then(successDataHandler),updatePromise},self.newRow=function(){getEditRowEntity(),openModal()},self.editRow=function(event,rowItem){DataService.getItem(self.tableName,rowItem.entity.__metadata.id,!0),getEditRowEntity(rowItem),openModal()},self.deleteRow=function(event,rowItem){ConfirmationPopup.confirm("Are you sure you want to delete the object?").then(function(result){result&&(usSpinnerService.spin("loading-data"),DataService["delete"](self.tableName,rowItem.entity,rowItem.entity.__metadata.id,!0).then(function(){return loadData()}).then(successDataHandler))})},self.disableValue=function(operator){return["empty","notEmpty"].indexOf(operator)>-1},self.filterData=function(){if(1===self.filterQuery.length&&_.isEmpty(self.filterQuery[0]))return getData(!0,!0);usSpinnerService.spin("loading-data");var query=_.map(self.filterQuery,function(item){return filterValid(item)?{fieldName:item.field.name,operator:item.operator||"equals",value:self.disableValue(item.operator)?"":item.value||""}:void 0});return query=_.compact(query),_.isEqual(query,self.lastQuery)?void usSpinnerService.stop("loading-data"):(self.lastQuery=query,DataService.get(self.tableName,self.paginationOptions.pageSize,self.paginationOptions.pageNumber,self.sort,query,!0).then(successDataHandler,errorHandler))}}angular.module("backand").controller("ObjectDataController",["NotificationService","ColumnsService","DataService","$scope","$modal","usSpinnerService","tableName","ConfirmationPopup","$filter","$state",ObjectDataController])}(),function(){function EditRowController(modalInstance,tableName,editRowData,DataService,$filter){var self=this;self.tableName=tableName,self.editRowData=editRowData,self.getLabel=function(text){return text.replace(/_/g," ")},self.saveRow=function(reopen){reopen?self.savingRowAndNew=!0:self.savingRow=!0;var record={};self.editRowData.entities.forEach(function(entity){entity.hide||entity.disable||(record[entity.key]=entity.value,"checkbox"===entity.type&&entity.required&&_.isEmpty(entity.value)&&(record[entity.key]=!1))}),self.editRowData.id?DataService.update(self.tableName,record,self.editRowData.id,!0).then(modalInstance.close)["finally"](function(){self.savingRow=!1,self.savingRowAndNew=!1}):DataService.post(self.tableName,record,!0).then(function(){modalInstance.close({reopen:reopen})})["finally"](function(){self.savingRow=!1,self.savingRowAndNew=!1})},self.saveAndNew=function(){self.saveRow(!0)},self.cancelEditRow=function(){modalInstance.dismiss("cancel")},self.getAutocomplete=function(columnName,query){return DataService.getAutocomplete(self.tableName,columnName,query).then(function(result){var results=$filter("orderBy")(result.data,"value");return results})},self.getMultiSelectLabel=function(row){var label="";return _.forEach(row,function(value,key){label+=key+": "+value+"; "}),label},self.getMultiAutocomplete=function(columnName,term,item){item.words=_.words(term,/[^, ]+/g);var query=_.last(item.words);return self.getAutocomplete(columnName,query)},self.onMultiSelect=function(item,$model){item.value=(item.words&&item.words.length>1?_.dropRight(item.words).join()+",":"")+$model}}angular.module("backand").controller("EditRowController",["$modalInstance","tableName","editRowData","DataService","$filter",EditRowController])}(),function(){function LogData($stateParams,$log,NotificationService,AppLogService,$scope){function getLog(){AppLogService.getAppLog($stateParams.appName,self.paginationOptions.pageSize,self.paginationOptions.pageNumber,isAdmin,self.sort,$stateParams.tableName).then(logSuccsessHandler,errorHandler)}function logSuccsessHandler(data){self.gridOptions.data=data.data.data,self.gridOptions.totalItems=data.data.totalRows,setTimeout(refreshGridDisplay(),1)}function refreshGridDisplay(){self.refreshOnce||(setTimeout("$('#grid-container').trigger('resize')",1),self.refreshOnce=!0)}function errorHandler(error,message){NotificationService.add("error",message),$log.debug(error)}var isAdmin,self=this;this.title="",this.sort='[{fieldName:"UpdateDate", order:"desc"}]',this.paginationOptions={pageNumber:1,pageSize:20,pageSizes:[20,50,100,1e3]},function(){isAdmin=!0}(),this.gridOptions={enableColumnResize:!0,enablePaginationControls:!1,useExternalSorting:!0,columnDefs:[{name:"UpdateDate",field:"__metadata.dates.UpdateDate",displayName:"Updated",type:"date",sort:{direction:"desc",priority:0}},{name:"Username",displayName:"Updated By",field:"__metadata.descriptives.Username.label"},{name:"Action",field:"__metadata.descriptives.Action.label"},{name:"FieldName"},{name:"OldValue"},{name:"NewValue"}],onRegisterApi:function(gridApi){$scope.gridApi=gridApi,$scope.gridApi.core.on.sortChanged($scope,function(grid,sortColumns){"UpdateDate"!=sortColumns[0].name&&(self.gridOptions.columnDefs[0].sort.direction=""),self.sort='[{fieldName:"'+sortColumns[0].name+'", order:"'+sortColumns[0].sort.direction+'"}]',getLog()})}},$scope.$watch(function(){return self.paginationOptions?self.paginationOptions.pageNumber:void 0},getLog),this.pageMax=function(pageSize,currentPage,max){return Math.min(pageSize*currentPage,max)}}angular.module("backand").controller("LogData",["$stateParams","$log","NotificationService","AppLogService","$scope",LogData])}(),function(){"use strict";function config($stateProvider){$stateProvider.state("json_model",{parent:"tables.model",url:"/json",controller:"JsonModelController as jsonModel",templateUrl:"views/tables/model/json_model/json_model.html"}).state("erd_model",{parent:"tables.model",url:"/erd",controller:"ErdModelController as erdModel",templateUrl:"views/tables/model/erd_model/erd_model.html",params:{tableName:""}})}angular.module("backand").config(config),config.$inject=["$stateProvider"]}(),function(){"use strict";function ModelController($scope,AppsService,DbDataModel,ModelService,usSpinnerService,NotificationService,$modal,$q){function init(){var currentApp=AppsService.currentApp;self.appName=currentApp.Name,self.showHelpDialog=!1,self.oldModel=DbDataModel.currentModel,self.newModel=DbDataModel.newModel,self.tabs=[{heading:"Model JSON",route:"json_model"},{heading:"Model Diagram",route:"erd_model"}],getSchema()}function getSchema(){usSpinnerService.spin("loading"),DbDataModel.get(self.appName)["finally"](function(){usSpinnerService.stop("loading")})}function openValidationModal(response){var modalInstance=$modal.open({templateUrl:"common/modals/confirm_update/confirm_update.html",controller:"ConfirmModelUpdateController as ConfirmModelUpdate",backdrop:"static",keyboard:!1,resolve:{validationResponse:function(){return response.data},titles:function(){return{itemName:"model",detailsTitle:"The following operations will be performed:",resultProperty:"alter"}}}});return modalInstance.result}function modelErrorHandler(){getSchema(),$scope.$root.$broadcast("fetchTables"),self.loading=!1,usSpinnerService.stop("loading")}var self=this;self.showHelp=function(event){self.showHelpDialog=!0,event&&event.stopPropagation()},$scope.$on("open-help",self.showHelp),self.closeHelp=function(){self.showHelpDialog=!1,$scope.$broadcast("close-help")},self.reset=function(){DbDataModel.removeCustomSchema(self.appName),getSchema()},self.saveSchema=function(){self.loading=!0;try{var oldSchema=JSON.parse(self.oldModel.schema),schema=JSON.parse(self.newModel.schema)}catch(err){return NotificationService.add("error","JSON is not properly formatted"),void(self.loading=!1)}ModelService.validate(self.appName,schema,oldSchema).then(function(response){return self.loading=!1,openValidationModal(response)}).then(function(result){return result?(self.loading=!0,DbDataModel.update(self.appName,schema)):$q.reject(null)}).then(function(){$scope.$root.$broadcast("fetchTables"),self.loading=!1})["catch"](modelErrorHandler)},init()}angular.module("backand").controller("ModelController",["$scope","AppsService","DbDataModel","ModelService","usSpinnerService","NotificationService","$modal","$q",ModelController])}(),function(){"use strict";function JsonModelController($scope,AppsService,DbDataModel,usSpinnerService){function init(){var currentApp=AppsService.currentApp;self.appName=currentApp.Name,self.fieldTypes=["string","text","datetime","float","boolean"],self.schemaEditor=null,self.oldSchemaEditor=null,self.editorControl={},self.showHelpDialog=!1,self.showDiffs=!0,self.oldModel=DbDataModel.currentModel,self.newModel=DbDataModel.newModel,getSchema()}function getSchema(){usSpinnerService.spin("loading"),DbDataModel.get(self.appName)["finally"](function(){usSpinnerService.stop("loading")})}function saveCustomSchema(schema){schema&&DbDataModel.saveCustomSchema(self.appName,schema)}function getTokenAtCursor(){var position=self.schemaEditor.getCursorPosition(),token=self.schemaEditor.session.getTokenAt(position.row,position.column);return null!==token?token.value:void 0}function setCursorPosition(){self.editorControl.gotoLine(self.schemaEditor)}var self=this;self.aceDiffOptions={onLoad:function(editor){editor.$blockScrolling=1/0,editor.getSession().setTabSize(2)},theme:"ace/theme/monokai",mode:"ace/mode/json",right:{editable:!1},left:{copyLinkEnabled:!1}},self.toggleShowDiff=function(){self.showDiffs=!self.showDiffs,self.differ.setOptions({showDiffs:self.showDiffs})},self.reset=function(){DbDataModel.removeCustomSchema(self.appName),getSchema()},$scope.$watch(function(){return self.newModel.schema},saveCustomSchema),self.insertTypeAtChar=function(param){var tokenAtCursor=getTokenAtCursor();'""'!==tokenAtCursor&&"''"!==tokenAtCursor&&(param='"'+param+'"'),setTimeout(function(){self.schemaEditor.insert(param)})},self.showHelp=function(){$scope.$emit("open-help")},$scope.$on("close-help",setCursorPosition),init()}angular.module("backand").controller("JsonModelController",["$scope","AppsService","DbDataModel","usSpinnerService",JsonModelController])}(),function(){"use strict";function ErdModelController($scope,$state,AppsService,DbDataModel,TablesService,usSpinnerService){function init(){var currentApp=AppsService.currentApp;self.appName=currentApp.Name,self.showHelpDialog=!1,self.currentModel=DbDataModel.currentModel,self.newModel=DbDataModel.newModel,self.currentObject=$state.params.tableName,getSchema()}function getSchema(){usSpinnerService.spin("loading"),DbDataModel.get(self.appName)["finally"](function(){usSpinnerService.stop("loading")})}var self=this;self.saveModel=function(){DbDataModel.saveErdModel(self.appName)},self.gotoObject=function(obj){var table=TablesService.getTableByName(obj.data.name);table&&$state.go("object_fields",{tableName:obj.name,tableId:table.__metadata.id})},self.reset=function(){DbDataModel.removeCustomSchema(self.appName),getSchema()},self.showHelp=function(){$scope.$emit("open-help")},init()}angular.module("backand").controller("ErdModelController",["$scope","$state","AppsService","DbDataModel","TablesService","usSpinnerService",ErdModelController])}(),function(){"use strict";function config($stateProvider){$stateProvider.state("apps.index",{url:"",controller:"AppsIndexController as index",templateUrl:"views/apps/index.tpl.html",resolve:{appsList:["AppsService",function(AppsService){return AppsService.all()}]}}).state("app.show",{url:"/",controller:"AppShowController as show",templateUrl:"views/apps/show.tpl.html"}).state("app.edit",{url:"/settings",controller:"AppSettings as settings",templateUrl:"views/apps/settings.html"})}angular.module("backand.apps",["services"]).config(config),config.$inject=["$stateProvider"]}(),function(){"use strict";function AppsIndexController($scope,AppsService,appsList,$state,NotificationService,$interval,usSpinnerService,LayoutService,AnalyticsService,SessionService){function convertStateNumber(app){var ribbonInfo;switch(app.DatabaseStatus){case 0:ribbonInfo={"class":"ui-ribbon-warning",text:"Pending"};break;case 1:ribbonInfo={"class":"ui-ribbon-success",text:"Connected"};break;case 2:ribbonInfo={"class":"ui-ribbon-info",text:"Create"};break;default:ribbonInfo={"class":"ui-ribbon-danger",text:"Error"}}return self.exampleApp(app)&&(ribbonInfo.text="Example"),ribbonInfo}function stopRefresh(){angular.isDefined(stop)&&($interval.cancel(stop),stop=void 0)}var self=this;self.loading=!1;var stop;!function(){self.apps=appsList.data,self.showJumbo=LayoutService.showJumbo();var userId=SessionService.getUserId();if(0!=userId){var exampleAppName="todo"+userId;_.find(self.apps,{Name:exampleAppName})||AppsService.add(exampleAppName,"My First App - Todo list example")}}(),self.addApp=function(){self.loading=!0,""===self.appTitle&&(self.appTitle=self.appName),AppsService.add(self.appName,self.appTitle).then(function(){AnalyticsService.track("CreatedApp",{appName:self.appName}),NotificationService.add("success","App was successfully created"),$state.go("database.edit",{appName:self.appName})},function(){self.loading=!1})},self.appManage=function(app){usSpinnerService.spin("loading"),$state.go("app",{appName:app.Name})},self.appSettings=function(appName){$state.go("app.edit",{appName:appName})},self.goToLink=function(app){$state.go(self.getGoToLink(app).state,{appName:app.Name})},self.getGoToLink=function(app){return AppsService.isExampleApp(app)?{state:"playground.todo",linkTitle:"Todo Example page"}:{state:"playground.show",linkTitle:"REST API Playground"}},self.goToLocation=function(href){window.open(href,"_blank")},self.getAppManageTitle=function(app){return 2==app.DatabaseStatus?"Connecting to Database":1==app.DatabaseStatus?"Manage App":AppsService.isExampleApp(app)?"Build Example App":"Complete DB Connection"},self.namePattern=/^\w+$/,self.getRibboninfo=function(app){return convertStateNumber(app)},self.exampleApp=function(app){return AppsService.isExampleApp(app)},stop=$interval(function(){AppsService.all().then(function(apps){self.apps=apps.data},function(){stopRefresh()})},1e4),$scope.$on("$destroy",function(){stopRefresh()}),self.closeJumbo=function(){LayoutService.closeJumbo(),self.showJumbo=!1},self.openJumbo=function(){LayoutService.openJumbo(),self.showJumbo=!0}}angular.module("backand.apps").controller("AppsIndexController",["$scope","AppsService","appsList","$state","NotificationService","$interval","usSpinnerService","LayoutService","AnalyticsService","SessionService",AppsIndexController])}(),function(){"use strict";function AppShowController($scope,AppsService,$sce,$state){var self=this,app=AppsService.currentApp;return self.appName=app.Name,$scope.appName=self.appName,$scope.$root.$broadcast("fetchTables"),1!==app.DatabaseStatus?$state.go("database.edit",{name:self.appName}):(self.statisticsArray=app.stat,self.logLimit=7,self.appTitle=app.Title,self.connectionStatus="",self.alertMsg="",self.goToLocation=function(href){window.open(href,"_blank")},AppsService.appDbStat($state.params.appName).then(function(data){if(0==data.data.tableCount){var msg='Your app has no objects! go to <a href="#/app/'+$state.params.appName+'/objects/model">Backand Model</a> to populate the app or use any DB admin tool like Workbench or phpMyAdmin';self.alertMsg=$sce.trustAsHtml(msg),AppsService.setAlert($state.params.appName,msg)}}),self.setAlertStatus=function(){AppsService.setAlert(self.appName,""),self.alertMsg=""},$scope.$on("$destroy",function(){}),void(self.updateAppName=function(){AppsService.update(self.appName,self.appTitle)}))}angular.module("backand.apps").controller("AppShowController",["$scope","AppsService","$sce","$state",AppShowController])}(),function(){"use strict";function AppSettings(ConfirmationPopup,AppsService,$state,NotificationService){function submitSuccess(){NotificationService.add("success","Application settings updated successfully"),self.loading=!1,self.globalAppName!=self.appName&&$state.go("apps.index")}function deleteSuccess(){NotificationService.add("success","The application was deleted"),self.loading=!1}function resetSuccess(){NotificationService.add("success","The cache was cleared"),self.loading=!1}function errorHandler(error,message){NotificationService.add("error",message),self.loading=!1}var self=this;!function(){var appData=AppsService.currentApp;self.globalAppName=appData.Name,self.appName=appData.Name,self.appTitle=appData.Title,self.dateFormat=appData.settings.defaultDateFormat,self.datesFormar=["MM/dd/yyyy","dd/MM/yyyy"],self.defaultPageSize=appData.settings.defaultPageSize,self.defaultLevelOfDept=appData.settings.defaultLevelOfDept,self.config=appData.settings.config||"{\n\n\n}"}(),self.submitForm=function(){try{{JSON.parse(self.config)}}catch(err){return NotificationService.add("error","Config need to be properly formatted as JSON"),void(self.loading=!1)}self.loading=!0;var data={Name:self.appName,Title:self.appTitle,settings:{defaultDateFormat:self.dateFormat,defaultPageSize:self.defaultPageSize,defaultLevelOfDept:self.defaultLevelOfDept,config:self.config}};AppsService.update(self.globalAppName,data).then(submitSuccess,errorHandler),self.globalAppName!=self.appName&&$state.go("apps.index")},self["delete"]=function(){ConfirmationPopup.confirm("Are you sure you want to delete the app?").then(function(result){result&&(self.loading=!0,AppsService["delete"](self.globalAppName).then(deleteSuccess,errorHandler),$state.go("apps.index"))})},self.reset=function(){ConfirmationPopup.confirm("Are you sure you want to clear the cache?").then(function(result){result&&(self.loading=!0,AppsService.reset(self.globalAppName).then(resetSuccess,errorHandler))})},self.ace={onLoad:function(_editor){self.ace.editor=_editor,_editor.$blockScrolling=1/0}}}angular.module("backand.apps").controller("AppSettings",["ConfirmationPopup","AppsService","$state","NotificationService",AppSettings])}(),function(){"use strict";function config($stateProvider){$stateProvider.state("backoffice.edit",{url:"/template",controller:"BackofficeTemplate as backT",templateUrl:"views/backoffice/template.html"}).state("backoffice.cust",{url:"/customization",templateUrl:"views/backoffice/customize.html"}).state("backoffice.code",{url:"/code",templateUrl:"views/backoffice/code.html"})}angular.module("backand.backoffice",[]).config(config),config.$inject=["$stateProvider"]}(),function(){"use strict";function BackofficeTemplate($state,AppsService,DbDataModel,NotificationService){var self=this,currentApp=AppsService.currentApp;self.templateId=currentApp.durados_Theme.__metadata.id,this.templates=[{Id:"2",imgSrc:"assets/images/template_lte.jpg",label:"AdminLTE"},{Id:"3",imgSrc:"assets/images/template_devoops.png",label:"Devoops"},{Id:"4",imgSrc:"assets/images/template_dashgum.png",label:"Dashgum"}],this.updateTemplate=function(templateId){self.templateId=templateId,DbDataModel.updateTemplate($state.params.appName,templateId).success(function(){NotificationService.add("success","template changed")})}}angular.module("backand.backoffice").controller("BackofficeTemplate",["$state","AppsService","DbDataModel","NotificationService",BackofficeTemplate])}(),function(){"use strict";function config($stateProvider){$stateProvider.state("playground.show",{url:"/rest",controller:"Playground as play",templateUrl:"views/api_playground/show.html"}).state("playground.orm",{url:"/orm",controller:"OrmController as play",templateUrl:"views/api_playground/orm.html"}).state("playground.orm-config",{url:"/orm/config",templateUrl:"views/api_playground/orm_config.html"}).state("playground.orm-usage",{url:"/orm/usage",templateUrl:"views/api_playground/orm_usage.html"}).state("playground.todo",{url:"/todo",controller:"TodoCtrl as todo",templateUrl:"views/api_playground/todo.html"})}angular.module("backand.playground",[]).config(config),config.$inject=["$stateProvider"]}(),function(){"use strict";function Playground(CONSTS,SessionService,$state,usSpinnerService,$sce,$scope){function eventListener(e){var eventName=e.data[0],data=e.data[1];switch(eventName){case"setHeight":$("#restIframe").height(data+50);break;case"ready":var o=document.getElementsByTagName("iframe")[0];usSpinnerService.spin("loading");var message={auth:"bearer "+token,appName:appName};o.contentWindow.postMessage(message,"*");break;case"complete":usSpinnerService.stop("loading")}}var self=this,token=SessionService.getToken(),appName=$state.params.appName;self.urlPrefix=$sce.trustAsHtml('<iframe id="restIframe" src="'+CONSTS.playgroundUrl+'index.html?useToken=true#!/Objects" style="height:578px;width:100%;border: none"></iframe>'),$scope.$on("$destroy",function(){window.removeEventListener("message",eventListener,!1);var iframe=angular.element("#restIframe");iframe&&iframe.length>0&&(iframe[0].src="javascript:void(0);")}),window.addEventListener("message",eventListener,!1)}angular.module("backand.playground").controller("Playground",["CONSTS","SessionService","$state","usSpinnerService","$sce","$scope",Playground])}(),function(){"use strict";function TodoCtrl(ExampleAppService,SessionService,usSpinnerService,$state,AppsService,CONSTS){var self=this;self.isNew=function(){var isNew=2==AppsService.currentApp.DatabaseStatus;return isNew&&usSpinnerService.spin("loading-iframe"),isNew},self.iframeReady=function(){var dbReady=AppsService.currentApp&&1==AppsService.currentApp.DatabaseStatus;return dbReady?usSpinnerService.stop("loading-iframe"):usSpinnerService.spin("loading-iframe"),dbReady},self.curApp=function(){return AppsService.currentApp};var token=SessionService.getToken();self.codeFiles=ExampleAppService.codeFiles,self.getFile=function(file){ExampleAppService.getFile(file.name).then(function(result){self.todoHTML="object"==typeof result.data?angular.toJson(result.data,!0):result.data,self.activeFile=file})},self.getFile(self.codeFiles[0]),self.getAceObj=function(){return{onLoad:function(_editor){_editor.$blockScrolling=1/0},theme:"monokai",mode:self.activeFile?self.activeFile.type:"html",firstLineNumber:1,rendererOptions:{fontSize:15}}},window.addEventListener("message",function(e){var eventName=e.data[0],data=e.data[1];switch(eventName){case"setHeight":$("#todoIframe").height(data+50);break;case"ready":var o=document.getElementsByTagName("iframe")[0];usSpinnerService.spin("loading");var message={auth:"bearer "+token,appName:$state.params.appName,url:CONSTS.appUrl};o.contentWindow.postMessage(message,"*");break;case"complete":usSpinnerService.stop("loading")}},!1)}angular.module("backand.playground").controller("TodoCtrl",["ExampleAppService","SessionService","usSpinnerService","$state","AppsService","CONSTS",TodoCtrl])}(),function(){"use strict";function config($stateProvider){$stateProvider.state("docs",{url:"docs","abstract":!0,template:'<ui-view autoscroll="true"/>'}).state("docs.get-started",{parent:"app",url:"/docs/start",controller:"Docs as docs",templateUrl:"views/docs/get_started_open.html"}).state("docs.getting-started-open",{parent:"apps",url:"start",templateUrl:"views/docs/get_started_open.html",controller:"Docs as docs"}).state("docs.kickstart",{parent:"app",url:"/docs/kickstart",templateUrl:"views/docs/kickstart.html",controller:"Docs as docs"}).state("docs.kickstart-open",{parent:"apps",url:"kickstart",templateUrl:"views/docs/kickstart.html",controller:"Docs as docs"}).state("docs.api-desc",{parent:"app",url:"/docs/api",templateUrl:"views/docs/api_desc.html",controller:"Desc as desc"}).state("docs.api-desc-open",{parent:"apps",url:"api",templateUrl:"views/docs/api_desc.html",controller:"Desc as desc"}).state("docs.mobile-open",{parent:"apps",url:"mobile",templateUrl:"views/docs/ionic_starter.html",controller:"Docs as docs"}).state("docs.mobile",{parent:"app",url:"/docs/mobile",templateUrl:"views/docs/ionic_starter.html",controller:"Docs as docs"})}angular.module("backand.docs",[]).config(config),config.$inject=["$stateProvider"]}(),function(){"use strict";function Docs(AppsService,usSpinnerService,$state){function setKeysInfo(data){self.keys=data.data}var self=this;!function(){usSpinnerService.spin("connecting-app-to-db"),self.currentApp=AppsService.currentApp,0===self.currentApp.DatabaseStatus||_.isEmpty(AppsService.currentApp)||AppsService.appKeys(self.currentApp.Name).then(setKeysInfo)}(),self.goToKickstart=function(){$state.go(_.isEmpty(AppsService.currentApp)?"docs.kickstart-open":"docs.kickstart")},self.goToQuickstart=function(){$state.go(_.isEmpty(AppsService.currentApp)?"docs.getting-started-open":"docs.get-started")},self.isNew=function(){var isNew=!_.isEmpty(AppsService.currentApp)&&2==AppsService.currentApp.DatabaseStatus;return isNew?usSpinnerService.spin("connecting-app-to-db"):usSpinnerService.stop("connecting-app-to-db"),isNew}}angular.module("backand.docs").controller("Docs",["AppsService","usSpinnerService","$state",Docs])}(),function(){"use strict";function Desc($scope,$location,$anchorScroll){var self=this;self.scrollTo=function(id){$location.hash(id),$anchorScroll()}}angular.module("backand.docs").controller("Desc",["$scope","$location","$anchorScroll",Desc])}(),function(){"use strict";function VideoController($modalInstance){var self=this;self.close=function(){$modalInstance.close()},self.videos=[{img:"https://img.youtube.com/vi/-35LHkNiorc/mqdefault.jpg",href:"https://www.youtube.com/embed/-35LHkNiorc?rel=0&autoplay=1",title:"2 minutes overview",desc:""},{img:"https://img.youtube.com/vi/IU_qp2yzU9Q/mqdefault.jpg",href:"https://www.youtube.com/embed/IU_qp2yzU9Q?rel=0&autoplay=1",title:"15 min product tour",desc:""},{img:"https://img.youtube.com/vi/mFYSe4VFHCI/mqdefault.jpg",href:"https://www.youtube.com/embed/mFYSe4VFHCI?rel=0&autoplay=1",title:"Working with Database and schema model",desc:""},{img:"https://img.youtube.com/vi/7C6AHmK-zcM/mqdefault.jpg",href:"https://www.youtube.com/embed/7C6AHmK-zcM?rel=0&autoplay=1",title:"How to build server side logic using Backand's Actions",desc:""},{img:"https://img.youtube.com/vi/mzxjDxozmLQ/mqdefault.jpg",href:"https://www.youtube.com/embed/mzxjDxozmLQ?rel=0&autoplay=1",title:"How to build a Query",desc:""},{img:"https://img.youtube.com/vi/KG3rL1xHEg4/mqdefault.jpg",href:"https://www.youtube.com/embed/KG3rL1xHEg4?rel=0&autoplay=1",title:"How to use security",desc:""}]}angular.module("backand.docs").controller("VideoController",["$modalInstance",VideoController])}(),function(){"use strict";function config($stateProvider){$stateProvider.state("log.config",{url:"/config",controller:"LogConfig as log",templateUrl:"views/log/log.html"}).state("log.history",{url:"/history",controller:"LogConfig as log",templateUrl:"views/log/log.html"}).state("log.exception",{url:"/exception",controller:"LogActivity as log",templateUrl:"views/log/activity.html"})}angular.module("backand").config(config),config.$inject=["$stateProvider"]}(),function(){function LogConfig($stateParams,$state,$log,NotificationService,AppLogService,$scope,ConfirmationPopup,usSpinnerService){function setGridOptions(){self.gridOptions={enableColumnResize:!0,enablePaginationControls:!1,useExternalSorting:!0,columnDefs:[{name:"UpdateDate",field:"__metadata.dates.UpdateDate",displayName:"Updated",type:"date",sort:{direction:"desc",priority:0}},{name:"Username",displayName:"Updated By",field:"__metadata.descriptives.Username.label"},{name:"Action",field:"__metadata.descriptives.Action.label",displayName:self.names.Action},{name:"ViewName",field:"__metadata.descriptives.ViewName.label",displayName:self.names.ViewName},{name:"PK",field:"__metadata.descriptives.PK.label",displayName:self.names.PK},{name:"FieldName",displayName:self.names.FieldName},{name:"OldValue"},{name:"NewValue"}],onRegisterApi:function(gridApi){$scope.gridApi=gridApi,$scope.gridApi.core.on.sortChanged($scope,function(grid,sortColumns){"UpdateDate"!=sortColumns[0].name&&(self.gridOptions.columnDefs[0].sort.direction=""),self.sort='[{fieldName:"'+sortColumns[0].name+'", order:"'+sortColumns[0].sort.direction+'"}]',getLog()
})}},self.gridOptions.columnDefs.forEach(function(columnDef){columnDef.cellTemplate='<div class="ui-grid-cell-contents" style="cursor: pointer;" ng-click="grid.appScope.log.showCellData(COL_FIELD, col.displayName)">{{COL_FIELD}}</div>'})}function filterValid(item){return item.field&&item.operator&&(item.value||self.disableValue(item.operator))}function getFilterOptions(){self.filterOptions={fields:getFieldsForFilter(),operators:null},self.filterReady=!0,self.lastQuery=[{fieldName:"Admin",operator:"equals",value:String(isAdmin)}]}function getFieldsForFilter(){return[{name:"UpdateDate",type:"DateTime"},{name:"FieldName",type:"text"},{name:"OldValue",type:"text"},{name:"NewValue",type:"text"}]}function getLog(){AppLogService.getAppLog($stateParams.appName,self.paginationOptions.pageSize,self.paginationOptions.pageNumber,self.lastQuery,self.sort).then(logSuccsessHandler,errorHandler)}function logSuccsessHandler(data){self.gridOptions.data=data.data.data,self.gridOptions.totalItems=data.data.totalRows,usSpinnerService.stop("loading")}function errorHandler(error,message){NotificationService.add("error",message),$log.debug(error)}var isAdmin,self=this;self.title="",self.sort='[{fieldName:"UpdateDate", order:"desc"}]',self.showFilter=!0,self.lastQuery=[],self.paginationOptions={pageNumber:1,pageSize:20,pageSizes:[20,50,100,1e3]},function(){isAdmin=-1==$state.$current.url.source.indexOf("/history"),isAdmin?(self.title="Log Configuration",self.helpKey="logConfiguration",self.names={ViewName:"Entity",PK:"Entity Name / Id",FieldName:"Property Name",Action:"Event"}):(self.title="Data History",self.helpKey="dataHistory",self.names={ViewName:"Object Name",PK:"Object Id",FieldName:"Field Name",Action:"Event"}),setGridOptions(),getFilterOptions()}(),self.showCellData=function(COL_FIELD,displayName){ConfirmationPopup.confirm(COL_FIELD,"OK","",!0,!1,displayName,"lg")},self.toggleShowFilter=function(){self.filterReady&&(self.showFilter=!self.showFilter)},self.disableValue=function(operator){return["empty","notEmpty"].indexOf(operator)>-1},self.filterData=function(){usSpinnerService.spin("loading");var query=_.map(self.filterQuery,function(item){return filterValid(item)?{fieldName:item.field.name,operator:item.operator||"equals",value:self.disableValue(item.operator)?"":item.value||""}:void 0});return query=_.compact(query),_.isEqual(query,self.lastQuery)?void usSpinnerService.stop("loading"):(self.lastQuery=query,self.lastQuery.push({fieldName:"Admin",operator:"equals",value:String(isAdmin)}),void getLog())},$scope.$watch(function(){return self.paginationOptions?self.paginationOptions.pageNumber:void 0},getLog),self.pageMax=function(pageSize,currentPage,max){return Math.min(pageSize*currentPage,max)}}angular.module("backand").controller("LogConfig",["$stateParams","$state","$log","NotificationService","AppLogService","$scope","ConfirmationPopup","usSpinnerService",LogConfig])}(),function(){function LogActivity($stateParams,$state,$log,NotificationService,AppLogService,$scope,usSpinnerService){function filterValid(item){return item.field&&item.operator&&(item.value||self.disableValue(item.operator))}function getFilterOptions(){self.filterOptions={fields:getFieldsForFilter(),operators:null},self.filterReady=!0,self.lastQuery=[{fieldName:"LogType",operator:"equals",value:isException?"1":"3"}]}function getFieldsForFilter(){return[{name:"ID",type:"Numeric"},{name:"Username",type:"text"},{name:"Time",type:"DateTime"},{name:"ExceptionMessage",type:"text"}]}function getLog(){AppLogService.getAppActivity($stateParams.appName,self.paginationOptions.pageSize,self.paginationOptions.pageNumber,self.lastQuery,self.sort).then(logSuccsessHandler,errorHandler)}function logSuccsessHandler(data){self.gridOptions.data=data.data.data,self.gridOptions.totalItems=data.data.totalRows,usSpinnerService.stop("loading")}function errorHandler(error,message){NotificationService.add("error",message),$log.debug(error)}var isException,self=this;this.title="",this.sort='[{fieldName:"ID", order:"desc"}]',self.showFilter=!0,self.lastQuery=[],this.paginationOptions={pageNumber:1,pageSize:20,pageSizes:[20,50,100,1e3]},function(){isException=$state.$current.url.source.indexOf("/exception")>-1,isException?(self.title="APP Exceptions",self.helpKey="appException"):self.title="APP Activity",getFilterOptions()}(),this.gridOptions={enablePaginationControls:!1,useExternalSorting:!0,columnDefs:[{name:"ID",displayName:"Exception Id",sort:{direction:"desc",priority:0},width:100},{name:"Username",displayName:"Updated By",width:100},{name:"Time",field:"__metadata.dates.Time",displayName:"Time",type:"datetime",width:150},{name:"ExceptionMessage",minWidth:300}],onRegisterApi:function(gridApi){$scope.gridApi=gridApi,$scope.gridApi.core.on.sortChanged($scope,function(grid,sortColumns){sortColumns[0]?("ID"!=sortColumns[0].name&&(self.gridOptions.columnDefs[0].sort.direction=""),self.sort='[{fieldName:"'+sortColumns[0].name+'", order:"'+sortColumns[0].sort.direction+'"}]'):self.sort="",getLog()})}},self.disableValue=function(operator){return["empty","notEmpty"].indexOf(operator)>-1},self.filterData=function(){usSpinnerService.spin("loading");var query=_.map(self.filterQuery,function(item){return filterValid(item)?{fieldName:item.field.name,operator:item.operator||"equals",value:self.disableValue(item.operator)?"":item.value||""}:void 0});return query=_.compact(query),_.isEqual(query,self.lastQuery)?void usSpinnerService.stop("loading"):(self.lastQuery=query,self.lastQuery.push({fieldName:"LogType",operator:"equals",value:isException?"1":"3"}),void getLog())},$scope.$watchGroup(["log.paginationOptions.pageNumber","log.paginationOptions.pageSize"],getLog),this.pageMax=function(pageSize,currentPage,max){return Math.min(pageSize*currentPage,max)}}angular.module("backand").controller("LogActivity",["$stateParams","$state","$log","NotificationService","AppLogService","$scope","usSpinnerService",LogActivity])}(),function(){"use strict";function config($stateProvider){$stateProvider.state("security.users",{url:"/users",controller:"SecurityUsers as users",templateUrl:"views/security/user/users.html"}).state("security.team",{url:"/team",controller:"SecurityUsers as users",templateUrl:"views/security/user/users.html"}).state("security.templates",{url:"/templates",controller:"SecurityWorkspace as securityws",templateUrl:"views/security/workspace/workspace.html"}).state("security.keys",{url:"/social_and_keys",controller:"KeysController as keys",templateUrl:"views/security/social_and_keys/social_and_keys.html",resolve:{socialProviders:["SocialProvidersService",function(SocialProvidersService){return SocialProvidersService.socialProviders}]}}).state("security.auth",{url:"/auth",controller:"SecurityAuth as auth",templateUrl:"views/security/auth/auth.html"}).state("security.actions",{url:"/actions",controller:"SecurityActions as actions",templateUrl:"views/security/actions/actions.html",resolve:{tableName:["$stateParams","RulesService","DictionaryService","CONSTS",function($stateParams,RulesService,DictionaryService,CONSTS){return DictionaryService.appName=RulesService.appName,RulesService.tableId=4,DictionaryService.tableName=CONSTS.backandUserObject,DictionaryService.tableName}]}})}angular.module("backand").config(config),config.$inject=["$stateProvider"]}(),function(){function SecurityUsers(ConfirmationPopup,$modal,$state,$log,usSpinnerService,NotificationService,SecurityService,$scope,SessionService,AppsService,AnalyticsService){function getRoles(){usSpinnerService.spin("loading"),null==self.roles?SecurityService.getRoles().then(rolesSuccessHandler,errorHandler):getUsers()}function rolesSuccessHandler(data){self.roles=data.data.data,self.gridOptions.columnDefs[self.adminMode?4:5].editDropdownOptionsArray=self.roles,$scope.modal.roles=self.roles.map(function(role){return role.Name}),getUsers()}function getUsers(){self.adminMode?SecurityService.getUsers(self.paginationOptions.pageSize,self.paginationOptions.pageNumber,self.sort,self.lastQuery).then(usersSuccessHandler,errorHandler):SecurityService.getUsers(self.paginationOptions.pageSize,self.paginationOptions.pageNumber,self.sort,self.lastQuery).then(usersSuccessHandler,errorHandler)}function usersSuccessHandler(data){self.gridOptions.data=data.data.data,self.gridOptions.totalItems=data.data.totalRows,self.roleFieldName=self.gridOptions.data[0]&&self.gridOptions.data[0].Role?"Role":self.roleFieldName,self.gridOptions.columnDefs[self.adminMode?4:5].name=self.roleFieldName,usSpinnerService.stop("loading")}function usersDeleteSuccessHandler(){getRoles()}function successApp(data){self.defaultUserRole=data.settings.newUserDefaultRole||"User",self.registrationRedirectUrl=data.settings.registrationRedirectUrl||""}function newUser(){$scope.modal.mode="new",$scope.modal.NewUser=!0,launchModal()}function errorHandler(error,message){NotificationService.add("error",message),$log.debug(error)}function SetDataUserRole(data,role){data.Role=role}function filterValid(item){return item.field&&item.operator&&(item.value||self.disableValue(item.operator))}function getFilterOptions(){self.filterOptions={fields:getFieldsForFilter(),operators:null},self.filterReady=!0,self.lastQuery=[],self.adminMode?(self.lastQuery.push({fieldName:"Email",operator:"notEquals",value:"guest@durados.com"}),self.lastQuery.push({fieldName:"Role",operator:"in",value:",Admin"})):self.lastQuery.push({fieldName:"Email",operator:"notEquals",value:"guest@durados.com"})}function getFieldsForFilter(){return[{name:"Username",type:"text"},{name:"FirstName",type:"text"},{name:"LastName",type:"text"},{name:"IsApproved",type:"Boolean"}]}function launchModal(){self.modalInstance=$modal.open({templateUrl:"views/security/user/new_user.html",backdrop:"static",scope:$scope}),$scope.changeEmail=function(user){user.email?SecurityService.userExists(user.email).then(function(data){$scope.modal.NewUser=!data.data.exists},function(err){console.log(err.data.Message)}):$scope.modal.NewUser=!0},$scope.closeModal=function(user){user.password=user.password||"",user.confirmPassword=user.confirmPassword||"",SecurityService.newUser(user).then(function(){self.modalInstance.close(),getRoles()})},$scope.cancel=function(){self.modalInstance.dismiss()}}var self=this;!function(){self.roleFieldName="durados_User_Role",self.open=newUser,self.roles=null,self.gridOptions={},self.appName=SecurityService.appName=$state.params.appName,self.actions=["Delete"],self.action="",self.showFilter=!0,self.lastQuery=[],self.invitedUsers="",self.invitedAdmins="",self.sort='[{fieldName:"Username", order:"desc"}]',self.adminMode=$state.$current.url.source.indexOf("/team")>-1,self.title=self.adminMode?"Team":"Registered Users",self.gridOptions.rowEditWaitInterval=200,self.paginationOptions={pageNumber:1,pageSize:20,pageSizes:[20,50,100,1e3]},self.gridOptions={enableColumnResize:!0,enablePaginationControls:!1,useExternalSorting:!0,multiSelect:!0,enableSelectAll:!1,columnDefs:[{name:"Username",enableCellEdit:!1,sort:{direction:"asc",priority:0}},{name:"FirstName"},{name:"LastName"},{name:self.roleFieldName,displayName:"Role",editableCellTemplate:"ui-grid/dropdownEditor",editDropdownOptionsArray:[],editDropdownIdLabel:"Name",editDropdownValueLabel:"Name"},{name:"IsApproved",displayName:"Is Approved",type:"boolean"},{field:"readyToSignin",displayName:"Ready to sign-in",enableCellEdit:!1}]},self.gridOptions.columnDefs.unshift({name:"getUserToken",cellTemplate:'<div class="grid-icon" ng-click="grid.appScope.users.getUserToken($event, row)"><i class="ti-key"/></div>',width:30,displayName:"",enableSorting:!1,enableColumnMenu:!1,enableCellEdit:!1}),self.adminMode||self.gridOptions.columnDefs.unshift({name:"changePassword",cellTemplate:'<div class="grid-icon" ng-click="grid.appScope.users.changePassword($event, row)"><i class="ti-lock"/></div>',width:30,displayName:"",enableSorting:!1,enableColumnMenu:!1,enableCellEdit:!1}),getFilterOptions(),$scope.$watch(function(){return self.paginationOptions?self.paginationOptions.pageNumber:void 0},getRoles),successApp(AppsService.currentApp)}(),self.changePassword=function(event,row){if(row.entity.readyToSignin){$modal.open({templateUrl:"views/security/user/change_user_password.html",controller:"ChangeUserPasswordController as ChangeUserPassword",resolve:{username:function(){return row.entity.Username}}})}else ConfirmationPopup.confirm("Change password is only for users that ready for sign in","OK","",!0,!1,"Change Password")},self.getUserToken=function(event,row){$modal.open({templateUrl:"views/security/user/get_user_token.html",controller:"GetUserTokenController as GetUserToken",resolve:{username:function(){return row.entity.Username}}})},self.goTo=function(state){$state.go(state)},self["delete"]=function(){var items=$scope.gridApi.selection.getSelectedRows();if(!items||0==items.length)return void NotificationService.add("error","No user was selected, please select row(s)");var username=SessionService.currentUser.username;ConfirmationPopup.confirm("You are going to delete "+items.length+" user(s). Are you sure you want to continue?").then(function(result){result&&angular.forEach(items,function(item){username==item.Username?NotificationService.add("error","Can't delete the creator of the app"):SecurityService.deleteUser(item.ID).then(usersDeleteSuccessHandler,errorHandler)})})},$scope.modal={title:"Application User",okButtonText:"Save",cancelButtonText:"Cancel",roles:[]},$scope.saveRow=function(rowEntity){var promise=SecurityService.updateUser(rowEntity);$scope.gridApi.rowEdit.setSavePromise($scope.gridApi.grid,rowEntity,promise)},self.gridOptions.onRegisterApi=function(gridApi){$scope.gridApi=gridApi,$scope.gridApi.rowEdit.on.saveRow($scope,$scope.saveRow),$scope.gridApi.core.on.sortChanged($scope,function(grid,sortColumns){self.sort='[{fieldName:"'+sortColumns[0].name+'", order:"'+sortColumns[0].sort.direction+'"}]',getRoles()})},self.pageMax=function(pageSize,currentPage,max){return Math.min(pageSize*currentPage,max)},self.disableValue=function(operator){return["empty","notEmpty"].indexOf(operator)>-1},self.filterData=function(){usSpinnerService.spin("loading");var query=_.map(self.filterQuery,function(item){return filterValid(item)?{fieldName:item.field.name,operator:item.operator||"equals",value:self.disableValue(item.operator)?"":item.value||""}:void 0});return query=_.compact(query),_.isEqual(query,self.lastQuery)?void usSpinnerService.stop("loading"):(self.lastQuery=query,self.adminMode?(self.lastQuery.push({fieldName:"Email",operator:"notEquals",value:"guest@durados.com"}),self.lastQuery.push({fieldName:"Role",operator:"in",value:",Admin"})):self.lastQuery.push({fieldName:"Email",operator:"notEquals",value:"guest@durados.com"}),void getUsers())},self.isEmail=function(email){return""==email?!1:email.indexOf("@")<=0?!1:!0},self.inviteAdmins=function(){AnalyticsService.track("AddedAdmin",{admins:self.invitedAdmins}),self.inviteUsers(self.invitedAdmins,"Admin")},self.validateEmail=function(email_array){for(var isValid=!0,i=0;i<email_array.length;)email_array[i]=email_array[i].replace(/^\s*/,"").replace(/\s*$/,""),""==email_array[i]&&(email_array.splice(i,1),i--),self.isEmail(email_array[i])||(isValid=!1,NotificationService.add("error",email_array[i]+" is not a valid email")),i++;return isValid},self.inviteUsers=function(emails_string,role){var userRole=role?role:self.defaultUserRole,emails=emails_string?emails_string:self.invitedUsers,email_array=emails.split(",");if(!self.validateEmail(email_array))return void NotificationService.add("error","please fix the erroneous emails and try again");if(email_array.length>20)return void NotificationService.add("error","The maximum emails allowed is 20.");for(var i=0;i<email_array.length;i++){var name=email_array[i].split("@"),user={Username:email_array[i],Email:email_array[i],IsApproved:!0,FirstName:name[0],LastName:name[1]};SetDataUserRole(user,userRole),SecurityService.postUser(user).then(getRoles,errorHandler)}emails_string?self.invitedAdmins="":self.invitedUsers=""}}angular.module("backand").controller("SecurityUsers",["ConfirmationPopup","$modal","$state","$log","usSpinnerService","NotificationService","SecurityService","$scope","SessionService","AppsService","AnalyticsService",SecurityUsers])}(),function(){function ChangeUserPasswordController(modalInstance,SecurityService,username,NotificationService){var self=this;self.userData={username:username},self.savePassword=function(){SecurityService.setUserPassword(self.userData).then(function(){NotificationService.add("success","Password was changed"),modalInstance.close()})},self.cancelNewPassword=function(){modalInstance.dismiss("cancel")}}angular.module("backand").controller("ChangeUserPasswordController",["$modalInstance","SecurityService","username","NotificationService",ChangeUserPasswordController])}(),function(){function GetUserTokenController(modalInstance,SecurityService,username,ConfirmationPopup){var self=this;self.userData={username:username},self.token="****************",self.getToken=function(){SecurityService.getUserToken(self.userData.username).then(function(response){self.token=response.data})},self.getToken(),self.closeGetToken=function(){modalInstance.dismiss("cancel")},self.resetToken=function(){ConfirmationPopup.confirm("After reset, you need to update all the relevant code associated with it.","Reset","Cancel").then(function(result){result&&(self.reseting=!0,SecurityService.resetUserToken(self.userData.username).then(function(response){self.token=response.data,self.reseting=!1}))})}}angular.module("backand").controller("GetUserTokenController",["$modalInstance","SecurityService","username","ConfirmationPopup",GetUserTokenController])}(),function(){function SecurityWorkspace($stateParams,SecurityService,SecurityMatrixService,NotificationService,$filter){function templateRoleAdd(roleName){return SecurityService.postRole({Name:roleName,Description:roleName}).then(function(data){return getWorkspaces(),data})}function templateRoleRename(roleName,newName){return SecurityService.updateRole({Name:newName,Description:newName},roleName).then(function(data){return getWorkspaces(),data})}function templateRoleRemove(roleName){return SecurityService.deleteRole(roleName).then(function(data){return getWorkspaces(),data})}function templateChanged(template,wsId){if(template){var permissions=SecurityMatrixService.getPermission(template),workspace=$filter("filter")(self.workspaces,function(w){return w.__metadata.id===wsId})[0];workspace.allowCreate=permissions.allowCreate,workspace.allowEdit=permissions.allowEdit,workspace.allowDelete=permissions.allowDelete,workspace.allowRead=permissions.allowRead,SecurityService.updateWorkspace(workspace)}}function getWorkspaces(){SecurityService.getWorkspace().then(workspaceSuccessHandler,errorHandler)}function workspaceSuccessHandler(data){self.workspaces=data.data.data,self.loading=!0,angular.forEach(self.workspaces,function(workspace){var permissions={};permissions.allowCreate=workspace.allowCreate,permissions.allowEdit=workspace.allowEdit,permissions.allowDelete=workspace.allowDelete,permissions.allowRead=workspace.allowRead,workspace.tabActive=workspace.workspaceName==self.defaultWorkspaceName,SecurityMatrixService.loadMatrix(permissions).then(function(data){workspace.template=data})}),self.processingNewWS=!1}function getNewWorkspaceName(){var notFound=!0,exits=!1,counter=0,newWorkspaceName="Security Template";if(self.workspaces&&self.workspaces.length)for(;notFound;)exits=!1,angular.forEach(self.workspaces,function(workspace){workspace.workspaceName==newWorkspaceName+(0==counter?"":" "+String(counter))&&(exits=!0)}),exits?counter++:notFound=!1;return newWorkspaceName+(0==counter?"":" "+String(counter))}function errorHandler(error,message){NotificationService.add("error",message),self.processingNewWS=!1}var self=this;!function(){SecurityMatrixService.appName=SecurityService.appName=$stateParams.appName;self.workspaces=null,self.templateChanged=templateChanged,self.templateRoleAdd=templateRoleAdd,self.templateRoleRename=templateRoleRename,self.templateRoleRemove=templateRoleRemove,self.processingNewWS=!1,self.defaultWorkspaceName="Public",getWorkspaces()}(),self.changeName=function(newName,wsId){SecurityService.updateWorkspace({__metadata:{id:wsId},workspaceName:newName})},self.addWorkspace=function(){self.processingNewWS=!0;var newWorkspaceName=getNewWorkspaceName(),newWS={allowCreate:"Developer,Admin",allowDelete:"Developer,Admin",allowEdit:"Developer,Admin",allowRead:"Developer,Admin",overridepermissions:!0,workspaceName:newWorkspaceName};self.defaultWorkspaceName=newWorkspaceName,SecurityService.postWorkspace(newWS).then(getWorkspaces,errorHandler)}}angular.module("backand").controller("SecurityWorkspace",["$stateParams","SecurityService","SecurityMatrixService","NotificationService","$filter",SecurityWorkspace])}(),function(){function SecurityAuth($state,NotificationService,SecurityService,AppsService,RulesService,DictionaryService,$scope){function loadConfigurationData(){SecurityService.getRoles().then(rolesSuccessHandler,errorHandler)}function rolesSuccessHandler(data){self.roles=data.data.data,setDbInfo(AppsService.currentApp)}function setDbInfo(data){self.data.settings=data.settings,self.data.allowAnonymous="AllUsers"==self.data.settings.secureLevel,AppsService.appKeys(self.appName).then(setKeysInfo,errorHandler),$scope.$watch("auth",updateAppAuth,!0)}function setKeysInfo(data){self.keys=data.data}function updateAppAuth(newVal,oldVal){null!=oldVal&&(self.authForm.$invalid||(newVal.data.allowAnonymous!==oldVal.data.allowAnonymous||newVal.data.settings.defaultGuestRole!==oldVal.data.settings.defaultGuestRole||newVal.data.settings.newUserDefaultRole!==oldVal.data.settings.newUserDefaultRole||newVal.data.settings.registrationRedirectUrl!==oldVal.data.settings.registrationRedirectUrl||newVal.data.settings.signInRedirectUrl!==oldVal.data.settings.signInRedirectUrl||newVal.data.settings.enableUserRegistration!==oldVal.data.settings.enableUserRegistration||newVal.data.settings.forgotPasswordUrl!==oldVal.data.settings.forgotPasswordUrl||newVal.data.settings.signupEmailVerification!==oldVal.data.settings.signupEmailVerification)&&(self.data.settings.secureLevel=newVal.data.allowAnonymous?"AllUsers":"RegisteredUsers",AppsService.update(self.appName,self.data).then(updateSuccess,errorHandler)))}function updateSuccess(){NotificationService.add("success","Data saved")}function errorHandler(error,message){NotificationService.add("error",message)}var self=this;!function(){self.appName=SecurityService.appName=AppsService.appName=$state.params.appName,self.data={settings:{},allowAnonymous:!1},self.updateAppAuth=updateAppAuth,loadConfigurationData()}(),self.goTo=function(state){$state.go(state)}}angular.module("backand").controller("SecurityAuth",["$state","NotificationService","SecurityService","AppsService","RulesService","DictionaryService","$scope","CONSTS",SecurityAuth])}(),function(){function SecurityActions($state,NotificationService,SecurityService,AppsService,RulesService,DictionaryService,$scope,CONSTS){var self=this;!function(){self.appName=SecurityService.appName=AppsService.appName=$state.params.appName,RulesService.appName=DictionaryService.appName=self.appName,RulesService.tableId=4,DictionaryService.tableName=CONSTS.backandUserObject}()}angular.module("backand").controller("SecurityActions",["$state","NotificationService","SecurityService","AppsService","RulesService","DictionaryService","$scope","CONSTS",SecurityActions])}(),function(){function KeysController(NotificationService,AppsService,socialProviders,ConfirmationPopup){function init(){self.socialProviders=angular.copy(socialProviders),self.appName=AppsService.currentApp.Name,getAppSettings(),AppsService.appKeys(self.appName).then(setKeysInfo,errorHandler)}function getAppSettings(){self.socialProviders.forEach(function(socialProvider){settings.forEach(function(setting){socialProvider[setting]=AppsService.currentApp.settings[getSettingKey(setting,socialProvider)]}),syncSocialKeys(socialProvider),setUseOwnApp(socialProvider)}),setTokenExpiration()}function getSettingKey(setting,socialProvider){return"enable"===setting?"enable"+_.capitalize(socialProvider.name):socialProvider.name+_.capitalize(setting)}function setTokenExpiration(){self.useRefreshToken=AppsService.currentApp.settings.useRefreshToken,self.tokenExpiration=self.useRefreshToken?!1:AppsService.currentApp.settings.tokenExpiration}function setKeysInfo(data){self.tokens=data.data}function syncSocialKeys(socialProvider){(socialProvider.clientSecret||socialProvider.clientId)&&(socialProvider.temp={clientSecret:socialProvider.clientSecret,clientId:socialProvider.clientId})}function setUseOwnApp(socialProvider){socialProvider.useOwnApp=!!socialProvider.clientSecret||!!socialProvider.clientId}function updateSettings(appSettings){AppsService.update(self.appName,{settings:appSettings}).then(updateSuccess,errorHandler)}function updateSuccess(){NotificationService.add("success","Data saved")}function errorHandler(error,message){NotificationService.add("error",message),self.errorUpdate=!0}var self=this,settings=["enable","clientId","clientSecret"];self.displayedTokens=[{name:"general",label:"Master",description:"Use this token to access without username and password. The master token must sent with the user's token",helpKey:"socialAndKeysMasterToken"},{name:"signup",label:"API Sign-up",description:"Use this token when registering a user via the sign-up REST API URL - /user/signup (put it in headers parameter SignUpToken)",helpKey:"socialAndKeysAPISignupToken"}],self.resetKey=function(key){ConfirmationPopup.confirm("After reset, you need to update all the relevant code associated with it.","Reset","Cancel").then(function(result){result&&(self.reseting=key,AppsService.resetAppKey(self.appName,key).then(function(response){self.tokens[key]=response.data,self.reseted=key,self.reseting=!1}))})},self.tokenExpirations=[{label:"10 Hours",seconds:36e3},{label:"1 Day",seconds:86400},{label:"1 Week",seconds:604800},{label:"1 Month",seconds:2592e3},{label:"Never - Use Refresh Token",seconds:!1}];var TOKEN_EXPIRATION_WITH_REFRESH=86400;self.useOwnAppChange=function(socialProvider){socialProvider.useOwnApp?angular.extend(socialProvider,socialProvider.temp):socialProvider.clientSecret=socialProvider.clientId=null,self.updateSocialSettings(socialProvider)},self.updateTokenExpire=function(){self.errorUpdate=!1;var appSettings={};appSettings.useRefreshToken=!self.tokenExpiration,appSettings.tokenExpiration=self.tokenExpiration||TOKEN_EXPIRATION_WITH_REFRESH,updateSettings(appSettings)},self.updateSocialSettings=function(socialProvider){self.errorUpdate=!1;var appSettings={};syncSocialKeys(socialProvider),settings.forEach(function(setting){appSettings[getSettingKey(setting,socialProvider)]=socialProvider[setting]}),updateSettings(appSettings)},init()}angular.module("backand").controller("KeysController",["NotificationService","AppsService","socialProviders","ConfirmationPopup",KeysController])}(),function(){"use strict";function config($stateProvider){$stateProvider.state("database.example",{url:"/example",controller:"DatabaseTodoExample as dbtodo",templateUrl:"views/database/todo_example.html"}).state("database.show",{url:"",controller:"DatabaseShow as dbshow",templateUrl:"views/database/show.html"}).state("database.edit",{url:"/edit",controller:"DatabaseEdit as dbedit",templateUrl:"views/database/edit.html"})}angular.module("backand.database",[]).config(config),config.$inject=["$stateProvider"]}(),function(){"use strict";function DatabaseShow($state,AppsService,usSpinnerService,DatabaseService,DatabaseNamesService){function checkDatabaseStatuse(){usSpinnerService.spin("loading"),DatabaseService.getDBInfo($state.params.appName).success(function(dataIn){self.data={},self.data.Database_Source=dataIn.Database_Source,self.data.databaseName=DatabaseNamesService.getDBSource(dataIn.Database_Source),self.data.database=dataIn.Catalog,self.data.server=dataIn.ServerName,self.data.username=dataIn.Username,self.data.usingSsh=dataIn.SshUses,self.data.usingSsl=dataIn.SslUses,self.data.sshRemoteHost=dataIn.SshRemoteHost,self.data.sshUser=dataIn.SshUser,self.data.sshPort=dataIn.SshPort,self.data.sshPassword=dataIn.SshPassword,self.data.sshPrivateKey=dataIn.SshPrivateKey,usSpinnerService.stop("loading")})}var self=this;self.appName=$state.params.appName;var currentApp=AppsService.currentApp;self.isLocal="local"===currentApp.connectionSource,checkDatabaseStatuse(),self.getPassword=function(){DatabaseService.getAppPassword(self.appName).success(function(data){self.data.password=data})},self.displayButton=function(){return!AppsService.isExampleApp(self.appName)},self.edit=function(){$state.go("database.edit")},self.back=function(){$state.go("app.show")},self.sync=function(toSync){$state.go("tables.show",{sync:toSync})}}angular.module("backand.database").controller("DatabaseShow",["$state","AppsService","usSpinnerService","DatabaseService","DatabaseNamesService",DatabaseShow])}(),function(){"use strict";function DatabaseEdit($scope,$http,AppsService,$state,DatabaseNamesService,NotificationService,DatabaseService,DbDataModel,usSpinnerService,ConfirmationPopup,$modal,AnalyticsService){function getCurrentApp(){self.databaseStatus=currentApp.DatabaseStatus,self.dbConnected=1===currentApp.DatabaseStatus,self.dataName=currentApp.databaseName||"newMysql",self.data={usingSsl:"true",usingSsh:"false"},0!==self.databaseStatus&&checkDatabaseStatus()}function checkDatabaseStatus(){usSpinnerService.spin("loading"),DatabaseService.getDBInfo($state.params.appName).success(function(dataIn){self.data={},self.data.Database_Source=dataIn.Database_Source,self.data.databaseName=DatabaseNamesService.getDBSource(dataIn.Database_Source),self.data.database=dataIn.Catalog,self.data.server=dataIn.ServerName,self.data.username=dataIn.Username,self.data.usingSsh=String(dataIn.SshUses),self.data.usingSsl=String(dataIn.SslUses),self.data.sshRemoteHost=dataIn.SshRemoteHost,self.data.sshUser=dataIn.SshUser,self.data.sshPort=dataIn.SshPort,self.data.sshPassword=dataIn.SshPassword,self.data.sshPrivateKey=dataIn.SshPrivateKey}),usSpinnerService.stop("loading")}function openValidationModal(error){var modalInstance=$modal.open({templateUrl:"views/tables/model/confirm_update.html",controller:"ConfirmModelUpdateController as ConfirmModelUpdate",backdrop:"static",keyboard:!1,resolve:{validationResponse:function(){var validationResponse={valid:"never",warnings:error.split(/\(\d+\)/)};return validationResponse.warnings.shift(),validationResponse}}});return modalInstance.result}function saveCustomSchema(schema){DbDataModel.saveCustomSchema(self.appName,schema)}function getTokenAtCursor(){var position=self.ace.editor.getCursorPosition();return self.ace.editor.session.getTokenAt(position.row,position.column).value}var self=this,currentApp=AppsService.currentApp;!function(){AppsService.isExampleApp(currentApp)&&$state.go("database.example"),2==currentApp.DatabaseStatus&&$state.go("docs.kickstart"),self.databaseStatus=null,self.appName=$state.params.appName,self.loading=!1,self.showHelp=!1,self.showHelpDialog=!1,getCurrentApp()}(),self.create=function(){self.loading=!0;var useSchema=!1,product=DatabaseNamesService.getNumber(self.dataName),schema=null;if(self.isCustomMode())try{schema=angular.isDefined(self.template.schema)?JSON.parse(self.template.schema):null,useSchema=!0}catch(err){return NotificationService.add("error","JSON is not properly formatted"),void(self.loading=!1)}else DbDataModel.removeCustomSchema(self.appName);DatabaseService.createDB($state.params.appName,product,self.template.appName,schema).success(function(){NotificationService.add("info","Creating new database... It may take 1-2 minutes"),useSchema?AnalyticsService.track("CreatedNewDB",{schema:self.template.schema}):AnalyticsService.track("CreatedNewDB",{app:self.template.appName}),AnalyticsService.track("create app",{app:self.template.appName}),$state.go("docs.kickstart")
}).error(function(err){self.loading=!1,openValidationModal(err)})},self.showHelp=function(){self.showHelpDialog=!0},self.dataSources=DatabaseService.getDataSources(),self.sumbitForm=function(){self.loading=!0,self.data.product=DatabaseNamesService.getNumber(self.dataName),DbDataModel.removeCustomSchema(self.appName),self.dbConnected?DatabaseService.reConnect2DB($state.params.appName,self.data).success(function(){NotificationService.add("info","Update App connection to database"),$state.go("docs.get-started")}).error(function(){self.loading=!1}):DatabaseService.connect2DB($state.params.appName,self.data).success(function(){AnalyticsService.track("ConnectedExistingDB",{product:self.data.product}),NotificationService.add("info","Connecting to the database..."),$state.go("docs.get-started")}).error(function(){self.loading=!1,self.showHelp=!0})},self.back=function(){$state.go("app.show")},self.Confirmation=function(msg){ConfirmationPopup.confirm(msg,"Ok","",!0,!1)},self.ace={onLoad:function(_editor){self.ace.editor=_editor,_editor.$blockScrolling=1/0,_editor.getSession().setTabSize(2)}},self.customTemplate={title:"Custom Model",filename:"create_your_own",appName:"",description:"Design your own database schema model"},self.templates=[{order:3,title:"Game Shop Store",filename:"game_shop",appName:"OnlineGaming-MySql",description:"Schema mode for game shop management store"},{order:2,title:"Email Campaigns",filename:"ecommerce_campaign",appName:"Email-campaign-MySql",description:"Advanced schema model for building e-commerce campaign app"},{order:1,title:"Advertisement Agency",filename:"ad_system",appName:"Advertising-System",description:"Complex schema model to support advertising agency app"}],self.getFile=function(template){return $http({method:"GET",url:"views/database/db_templates/"+template.filename+".json"}).then(function(result){return angular.toJson(result.data,!0)})},self.showFile=function(template){self.ace&&self.ace.editor&&self.ace.editor.setReadOnly(!0),self.template=template,template.schema||self.getFile(template).then(function(result){template.schema=result})},self.isCustomMode=function(){return self.template===self.customTemplate},self.customize=function(){self.template=self.customTemplate;var schema=DbDataModel.getCustomSchema(self.appName);schema?self.template.schema=schema:self.showFile(self.customTemplate),self.ace&&self.ace.editor&&self.ace.editor.setReadOnly(!1)},self.customize(),$scope.$watch(function(){return self.customTemplate?self.customTemplate.schema:void 0},saveCustomSchema),self.fieldTypes=["string","text","datetime","float","boolean"],self.insertTypeAtChar=function(param){var tokenAtCursor=getTokenAtCursor();'""'!==tokenAtCursor&&"''"!==tokenAtCursor&&(param='"'+param+'"'),setTimeout(function(){self.ace.editor.insert(param)})},self.chooseDb=function(dbName){if(self.dbConnected)return void self.Confirmation("Changing database is not allowed for connected app.");switch(dbName){case"mysql":return void(self.dataName="mysql");case"postgresql":return self.dataName="postgresql",void(self.data.usingSsh=!1);case"sqlserver":return self.dataName="sqlserver",void(self.data.usingSsh=!1);case"oracle":return void self.Confirmation("Oracle is available only in the Enterprise edition.");case"mongodb":return void self.Confirmation("Sorry but mongoDB is in closed Beta")}},self.loadOpt=function(){window.optimizely=window.optimizely||[],window.optimizely.push(["activate",2928170239])}}angular.module("backand.database").controller("DatabaseEdit",["$scope","$http","AppsService","$state","DatabaseNamesService","NotificationService","DatabaseService","DbDataModel","usSpinnerService","ConfirmationPopup","$modal","AnalyticsService",DatabaseEdit])}(),function(){"use strict";function DatabaseTodoExample($state,DatabaseNamesService,NotificationService,DatabaseService,$http,$scope,AnalyticsService){var self=this;!function(){self.appName=$state.params.appName,self.loading=!1,$http({method:"GET",url:"examples/todo/model.json"}).then(function(result){self.generatorCode=angular.toJson(result.data,!0)})}(),self.create=function(){self.loading=!0;var product=DatabaseNamesService.getNumber("newMysql"),sampleApp="todo-mysql";DatabaseService.createDB(self.appName,product,sampleApp).success(function(){NotificationService.add("info","Creating new database... It may take 1-2 minutes"),AnalyticsService.track("create todo",{name:self.appName}),$state.go("playground.todo")}).error(function(err){self.loading=!1,NotificationService.add("error",err)})},$scope.ace={dbType:"json",editors:{},onLoad:function(_editor){$scope.ace.editors[_editor.container.id]=_editor,_editor.$blockScrolling=1/0}}}angular.module("backand.database").controller("DatabaseTodoExample",["$state","DatabaseNamesService","NotificationService","DatabaseService","$http","$scope","AnalyticsService",DatabaseTodoExample])}(),function(){"use strict";function config($stateProvider){$stateProvider.state("dbQueries.newQuery",{url:"/new",controller:"DbQueryController as DbQuery",templateUrl:"views/db_queries/query.html"}).state("dbQueries.query",{url:"/:queryId",controller:"DbQueryController as DbQuery",templateUrl:"views/db_queries/query.html"})}angular.module("backand.dbQueries",[]).config(config),config.$inject=["$stateProvider"]}(),function(){"use strict";function DbQueryController(CONSTS,$state,$stateParams,DbQueriesService,ConfirmationPopup,NotificationService,DictionaryService,SecurityService,AppsService,EscapeSpecialChars,$modal,$window){function getInputParametersForm(){return self.inputParametersForm}function getQueryForm(){return self.queryForm}function getQueryUrl(){return self.queryUrl}function getQueryHttp(){return self.queryHttp}function init(){self.appName=$stateParams.appName,self.inputValues={},self.queryForm&&self.queryForm.$setPristine(),loadQueries(),loadDbType()}function loadDbType(){var app=AppsService.currentApp;self.dbType="mysql"==app.databaseName&&"mysql"||"pgsql"}function loadQueries(){DbQueriesService.getQueries(self.appName).then(function(){if(self.openParamsModal=!1,self["new"]=!$stateParams.queryId,self.editMode=self["new"],self["new"])self.query=DbQueriesService.getNewQuery();else{if(self.query=DbQueriesService.getQueryForEdit($stateParams.queryId),"undefined"==typeof self.query)return void $state.go("dbQueries.newQuery");!self.query.noSQL&&self.query.sQL&&(self.mode="sql")}self.currentST=String(self.query.workspaceID),SecurityService.appName=self.appName,loadRoles(),getWorkspaces(),populateDictionaryItems()})}function loadRoles(){SecurityService.getRoles().then(function(data){self.roles=data.data.data,self.query.allowSelectRoles&&rolesToObj()})}function rolesToObj(){self.allowSelectRolesObject={};var allowSelectRolesArray=self.query.allowSelectRoles.split(",");allowSelectRolesArray.forEach(function(role){self.allowSelectRolesObject[role]=!0})}function rolesToString(){var allowSelectRolesArray=[];_.forOwn(self.allowSelectRolesObject,function(permission,role){permission&&allowSelectRolesArray.push(role)}),self.query.allowSelectRoles=allowSelectRolesArray.join(",")}function saveQuery(){self.queryUrl="",self.queryHttp="",self.openParamsModal=!1,self.query.workspaceID=Number(self.currentST),rolesToString();var queryToSend=EscapeSpecialChars(self.query);DbQueriesService.saveQuery(queryToSend).then(reload)}function saveNoSql(){try{var json=_.isEmpty(self.query.noSQL)?"":JSON.parse(self.query.noSQL)}catch(error){return NotificationService.add("error","JSON is not properly formatted"),void(self.loading=!1)}return""===json?(self.mode="sql",saveQuery()):DbQueriesService.transformNoSQL(json).then(function(response){return"always"!==response.data.valid?(self.loading=!1,self.transformedSql=response.data.sql,openValidationModal(response).then(function(result){result&&(self.query.sQL=self.transformedSql,saveQuery())})):(self.query.sQL=self.transformedSql=response.data.sql,void saveQuery())})}function openValidationModal(response){var modalInstance=$modal.open({templateUrl:"common/modals/confirm_update/confirm_update.html",controller:"ConfirmModelUpdateController as ConfirmModelUpdate",backdrop:"static",keyboard:!1,resolve:{validationResponse:function(){return response.data},titles:function(){return{itemName:"query",detailsTitle:"The NoSQL is equivalent to the following SQL query:",resultProperty:"sql"}}}});return modalInstance.result}function reload(query){if(self.loading=!1,query){var params={queryId:query.__metadata.id};self.queryForm.params.$dirty&&(self.inputValues={}),self.queryForm.$setPristine(),$state.go("dbQueries.query",params)}}function getWorkspaces(){null==self.workspaces&&SecurityService.getWorkspace().then(workspaceSuccessHandler,errorHandler)}function workspaceSuccessHandler(data){self.workspaces=data.data.data,self["new"]&&self.workspaces.length>0&&(self.currentST=self.workspaces[0].__metadata.id)}function populateDictionaryItems(){DictionaryService.appName=self.appName,DictionaryService.tableName=CONSTS.backandUserObject,DictionaryService.get("read").then(function(data){var raw=data.data,keys=Object.keys(raw);self.dictionaryItems={headings:{tokens:keys[0],parameters:"Parameters"},data:{tokens:raw[keys[0]],parameters:[]}}})}function successQueryHandler(data){self.gridOptions.data=data.data;var columns=[];data.data.length>0&&(columns=Object.keys(data.data[0])),self.gridOptions.columnDefs=columns.map(function(column){return{minWidth:80,name:column}}),self.gridOptions.totalItems=data.data.length,self.queryUrl=DbQueriesService.getQueryUrl(self.query.name,self.inputValues,!0),self.queryHttp=stringifyHttp(DbQueriesService.getQueryHttp(self.query.name,self.inputValues)),self.inputParametersForm.$setPristine(),self.queryUrlCopied=!1,self.testLoading=!1}function stringifyHttp(http){var stringifiedHttp="return $http ("+angular.toJson(http,!0)+");";return stringifiedHttp=stringifiedHttp.replace(/"([\d\w\s]+)"\s*:/g,"$1:"),stringifiedHttp=stringifiedHttp.replace(/"/g,"'"),stringifiedHttp=stringifiedHttp.replace("'https://api.backand.com","Backand.getApiUrl() + '")}function errorHandler(error,message){NotificationService.add("error",message),self.testError=error.data,self.testLoading=!1}var self=this;self.namePattern=/^\w+$/,self.gridOptions={virtualizationThreshold:10},self.mode="nosql",self.dbType="sql",self.ace={editors:{},onLoad:function(_editor){self.ace.editors[_editor.container.id]=_editor,_editor.$blockScrolling=1/0}},self.copyUrlParams={getUrl:getQueryUrl,getInputForm:getInputParametersForm,getTestForm:getQueryForm},self.copyHttpParams={getUrl:getQueryHttp,getInputForm:getInputParametersForm,getTestForm:getQueryForm},init(),self.changeModeToSql=function(){self.originalSql=self.query.sQL,self.mode="sql"},self.onEditSql=function(){self.query.noSQL&&ConfirmationPopup.confirm("The NoSQL query will be deleted. Do you want to continue editing the SQL query?").then(function(confirm){confirm?(self.query.noSQL="",console.log("deleted nosql")):(console.log("sql read only"),self.query.sQL=self.originalSql)})},self.saveQuery=function(){return self.loading=!0,"sql"===self.mode?saveQuery():"nosql"===self.mode?saveNoSql():void 0},self.editQuery=function(){self.editMode=!0},self.cancel=function(){self.queryForm.$pristine?init():ConfirmationPopup.confirm("Changes will be lost. Are sure you want to cancel editing?").then(function(result){result?init():!1})},self.showHelp=function(){$window.open("http://docs.backand.com/en/latest/apidocs/queries/index.html","bkhelp")},self.deleteQuery=function(){ConfirmationPopup.confirm("Are you sure you want to delete the query?").then(function(result){result&&(DbQueriesService.deleteQuery(self.query).then(function(){NotificationService.add("success","The query was deleted")},function(error,message){NotificationService.add("error",message)}),$state.go("app.show"))})},self.toggleParametersModal=function(){self.openParamsModal=!self.openParamsModal},self.insertParamAtChar=function(elementId,param){setTimeout(function(){self.ace.editors[self.mode].insert("nosql"==self.mode?"\"'{{"+param+"}}'\"":"'{{"+param+"}}'")})},self.getParameters=function(){return self.query?_.without(_.unique(self.query.parameters.replace(/ /g,"").split(",")),""):void 0},self.allowTest=function(){return self.query&&self.query.__metadata&&self.queryForm.$pristine},self.testData=function(){self.testError=null,self.query.__metadata&&(self.testLoading=!0,DbQueriesService.runQuery(self.query.name,self.inputValues).then(successQueryHandler,errorHandler))}}angular.module("backand.dbQueries").controller("DbQueryController",["CONSTS","$state","$stateParams","DbQueriesService","ConfirmationPopup","NotificationService","DictionaryService","SecurityService","AppsService","EscapeSpecialChars","$modal","$window",DbQueryController])}(),function(){angular.module("common.directives",["flowChart"])}(),function(){"use strict";function baLanding(AuthLayoutService){return{scope:{baLanding:"@"},link:function(scope){AuthLayoutService.flags.landing="false"!==scope.baLanding}}}angular.module("common.directives").directive("baLanding",["AuthLayoutService",baLanding])}(),function(){"use strict";angular.module("theme.directives",[]).directive("toggleNavCollapsedMin",["$rootScope",function($rootScope){return{restrict:"A",link:function(scope,ele){var app=$("#app");ele.on("click",function(e){app.hasClass("nav-collapsed-min")?app.removeClass("nav-collapsed-min"):(app.addClass("nav-collapsed-min"),$rootScope.$broadcast("nav:reset")),e.preventDefault()})}}}]).directive("collapseNav",[function(){return{restrict:"A",link:function(scope,ele){var $a,$aRest,$app,$lists,$listsRest,$nav,$window,Timer,prevWidth,updateClass;$window=$(window),$lists=ele.find("ul").parent("li"),$lists.append(""),$a=$lists.children("a"),$listsRest=ele.children("li").not($lists),$aRest=$listsRest.children("a"),$app=$("#app"),$nav=$("#nav-container"),$a.on("click",function(event){var $parent,$this;return $app.hasClass("nav-collapsed-min")||$nav.hasClass("nav-horizontal")&&$window.width()>=768?!1:($this=$(this),$parent=$this.parent("li"),$lists.not($parent).removeClass("open").find("ul").slideUp(),$parent.toggleClass("open").find("ul").stop().slideToggle(),void event.preventDefault())}),$aRest.on("click",function(){$lists.removeClass("open").find("ul").slideUp()}),scope.$on("nav:reset",function(){$lists.removeClass("open").find("ul").slideUp()}),Timer=void 0,prevWidth=$window.width(),updateClass=function(){var currentWidth;return currentWidth=$window.width(),768>currentWidth&&$app.removeClass("nav-collapsed-min"),768>prevWidth&&currentWidth>=768&&$nav.hasClass("nav-horizontal")&&$lists.removeClass("open").find("ul").slideUp(),prevWidth=currentWidth},$window.resize(function(){var t;return clearTimeout(t),t=setTimeout(updateClass,300)})}}}]).directive("highlightActive",[function(){return{restrict:"A",controller:["$scope","$element","$attrs","$location",function($scope,$element,$attrs,$location){var highlightActive,links,path;links=$element.find("a"),path=function(){return $location.path()},highlightActive=function(links,path){path="#"+path,angular.forEach(links,function(link){var $li,$link,href;return $link=angular.element(link),$li=$link.parent("li"),href=$link.attr("href"),$li.hasClass("active")&&$li.removeClass("active"),0===path.indexOf(href)?$li.addClass("active"):void 0})},highlightActive(links,$location.path()),$scope.$watch(path,function(newVal,oldVal){return newVal!==oldVal?highlightActive(links,$location.path()):void 0})}]}}]).directive("toggleOffCanvas",[function(){return{restrict:"A",link:function(scope,ele){return ele.on("click",function(){$("#app").toggleClass("on-canvas")})}}}])}.call(this),function(){"use strict";angular.module("common.directives").directive("logList",["$rootScope","AppLogService",function($rootScope,AppLogService){return{restrict:"A",scope:{appName:"@",logLimit:"@"},replace:!0,templateUrl:"common/directives/log_list/log_list.html",link:function(scope){scope.logLimit=parseInt(scope.logLimit);var isAdmin=[{fieldName:"Admin",operator:"equals",value:"true"}];AppLogService.getAppLog(scope.appName,scope.logLimit,1,isAdmin).success(function(data){scope.appLogArray=AppLogService.createLogMsg(data.data)}).error(function(){})}}}])}(),function(){"use strict";angular.module("common.directives").directive("baMatch",["$rootScope",function(){return{require:"?ngModel",restrict:"A",scope:{match:"=baMatch"},link:function(scope,elem,attrs,ctrl){return ctrl?void scope.$watch(function(){var modelValue=angular.isUndefined(ctrl.$modelValue)?ctrl.$$invalidModelValue:ctrl.$modelValue;return ctrl.$pristine&&angular.isUndefined(modelValue)||scope.match===modelValue},function(currentValue){ctrl.$setValidity("match",currentValue)}):void(console&&console.warn("Match validation requires ngModel to be on the element"))}}}])}(),function(){function insertAtCaretDirective(){var listener=null;return{scope:{onUpdate:"&"},link:function(scope){listener&&listener(),listener=scope.$on("insert:placeAtCaret",function(evt,data){var elementToInsert=$("#"+data[0]);elementToInsert.insertAtCaret(data[1]),scope.onUpdate(data),elementToInsert.trigger("change")})}}}angular.module("common.directives").directive("insertAtCaret",insertAtCaretDirective)}(),function(){"use strict";angular.module("common.directives").directive("customValidator",function(){return{require:"ngModel",scope:{validator:"=customValidator"},link:function(scope,elem,attrs,ngModel){ngModel.$validators[scope.validator.name]=function(modelValue){return scope.validator.validate(modelValue)}}}})}(),function(){"use strict";function baTooltip(){return{restrict:"E",scope:{tooltipText:"@",tooltipPlacement:"@?"},controller:function($scope){$scope.tooltipPlacement=$scope.tooltipPlacement||"top"},template:'<i class="ti-info-alt" tooltip="{{ tooltipText | translate}}" tooltip-placement="{{tooltipPlacement}}" tooltip-append-to-body="true"></i>'}}angular.module("common.directives").directive("baTooltip",["$translate",baTooltip])}(),function(){"use strict";function baHelpLink(){return{restrict:"E",scope:{key:"@",withText:"@?",target:"@?"},controller:function($scope){$scope.target=$scope.target||"bkhelp",$scope.withText=$scope.withText||!0;var locations={securityGeneral:{page:"security/auth",url:"http://docs.backand.com/en/latest/apidocs/security/index.html#introduction"},securityAnonymousAccess:{page:"security/auth",section:"Anonymous Access",url:"http://docs.backand.com/en/latest/apidocs/security/index.html#anonymous-access"},securitySignup:{page:"security/auth",section:"Public App",url:"http://docs.backand.com/en/latest/apidocs/security/index.html#sign-up"},customPages:{page:"security/auth",section:"Custom Registration Page URL",url:"http://docs.backand.com/en/latest/getting_started/security_auth/index.html#custom-pages"},emailVerification:{page:"security/auth",section:"Sign-up Email Verification",url:"http://docs.backand.com/en/latest/getting_started/security_auth/index.html#sign-up-email-verification"},socialAndKeysGeneral:{page:"security/social_and_keys",url:"http://docs.backand.com/en/latest/getting_started/security_auth/index.html#social-configuration"},socialAndKeysMasterToken:{page:"security/social_and_keys",section:"Master Token",url:"http://docs.backand.com/en/latest/getting_started/security_auth/index.html#master-token"},socialAndKeysAPISignupToken:{page:"security/social_and_keys",section:"API Sign-up Token",url:"http://docs.backand.com/en/latest/getting_started/security_auth/index.html#api-signup-token"},socialAndKeysFacebook:{page:"security/social_and_keys",section:"Facebook",url:"http://docs.backand.com/en/latest/getting_started/security_auth/index.html#facebook-app-configuration"},socialAndKeysGoogle:{page:"security/social_and_keys",section:"Google",url:"http://docs.backand.com/en/latest/getting_started/security_auth/index.html#google-app-configuration"},refreshToken:{page:"security/social_and_keys",url:"http://docs.backand.com/en/latest/getting_started/sdk/index.html#managerefreshtoken"},socialAndKeysGithub:{page:"security/social_and_keys",section:"Github",url:"http://docs.backand.com/en/latest/getting_started/security_auth/index.html#github-app-configuration"},objectsModel:{page:"objects/model",url:"http://docs.backand.com/en/latest/apidocs/security/index.html#introduction"},preDefinedFilter:{page:"objects/security",url:"http://docs.backand.com/en/latest/getting_started/objects/index.html#pre-defined-filter"},objectSecurityTemplate:{page:"objects/security",url:"http://docs.backand.com/en/latest/apidocs/security/index.html#roles-security-templates"},registeredUsers:{page:"security/users",url:"http://docs.backand.com/en/latest/apidocs/security/index.html#link-your-apps-users-with-backands-registered-users"},adminUsers:{page:"security/team",url:"http://docs.backand.com/en/latest/getting_started/security_auth/index.html#team"},securityActions:{page:"security/actions",url:"http://docs.backand.com/en/latest/getting_started/security_auth/index.html#security-actions"},securityTemplates:{page:"security/actions",url:"http://docs.backand.com/en/latest/getting_started/security_auth/index.html#security-templates"},logConfiguration:{page:"log/config",url:"http://docs.backand.com/en/latest/getting_started/log/index.html#configuration"},dataHistory:{page:"log/config",url:"http://docs.backand.com/en/latest/getting_started/log/index.html#data-history"},appException:{page:"log/exception",url:"http://docs.backand.com/en/latest/getting_started/log/index.html#server-side-exceptions"},nosqlQuery:{url:"http://docs.backand.com/en/latest/apidocs/nosql_query_language/index.html",page:"queries"}};$scope.location=locations[$scope.key].url||"http://docs.backand.com","false"!=$scope.withText?($scope.readMore="- read more",$scope.iconClass="ba-icon-external-link"):($scope.readMore="",$scope.iconClass="ti-help-alt")},template:'<a href="{{location}}" target="{{target}}" style="text-decoration: none;">{{readMore}}&nbsp;<i class="{{iconClass}}"></i></a>'}}angular.module("common.directives").directive("baHelpLink",[baHelpLink])}(),function(){"use strict";function baNestedContainer($compile){return{scope:{container:"="},replace:!0,template:"",link:function(scope,element){scope.container&&(element.append(angular.isArray(scope.container)?'<ul><li ng-repeat="node in container" ba-nested-node node="node" parent="array"></li></ul>':angular.isObject(scope.container)?'<span ng-repeat="(key, node) in container">{{ key | newTerminology }}: <ba-nested-node node="node" parent="object"></ba-nested-node>{{$last ? "" : ", "}} </span>':"{{ container | newTerminology }}"),$compile(element.contents())(scope))}}}function baNestedNode($compile){return{scope:{node:"=",parent:"@"},template:"",link:function(scope,element){scope.node&&(element.append(angular.isArray(scope.node)?'<ba-nested-container container="node"></ba-nested-container>':angular.isObject(scope.node)?"object"===scope.parent?'<ul><li><ba-nested-container container="node"></ba-nested-container></li></ul>':'<ba-nested-container container="node"></ba-nested-container>':"<span>{{ node | newTerminology }}</span>"),$compile(element.contents())(scope))}}}angular.module("common.directives").directive("baNestedContainer",["$compile",baNestedContainer]).directive("baNestedNode",["$compile",baNestedNode])}(),function(){function SecurityMatrixDirective(ConfirmationPopup,$modal,$log,$filter){return{restrict:"E",scope:{securityTemplate:"=",override:"=",actions:"=?",onUpdate:"&",onRoleAdd:"&",onRoleRename:"&",onRoleRemove:"&"},templateUrl:"common/directives/security_matrix/security_matrix.html",controller:function($scope){$scope.actions=$scope.actions||["read","create","update","delete"]},link:function(scope){scope.$watch("securityTemplate",function(template,oldTemplate){null!=template&&null!=oldTemplate&&template!==oldTemplate&&scope.onUpdate({template:template})},!0),scope.modal={title:"",okButtonText:"",cancelButtonText:"Cancel",deleteButtonText:"Remove",roleName:""},scope.OpenRole=function(roleName,mode){function removeRole(){modalInstance.close();var currentRole=$filter("filter")(scope.securityTemplate,function(r){return r.title===scope.modal._id})[0];scope.securityTemplate.splice(scope.securityTemplate.indexOf(currentRole),1)}function renameRole(){modalInstance.close();var currentRole=$filter("filter")(scope.securityTemplate,function(r){return r.title===scope.modal._id})[0];currentRole.title=scope.modal.roleName}function addRole(){modalInstance.close();var newRole={title:scope.modal.roleName,permissions:_.reduce(scope.actions,!1)};scope.securityTemplate.push(newRole)}function errorHandler(){}switch(scope.modal.mode=mode,scope.modal.roleName=roleName,scope.modal._id=roleName,scope.modal.mode){case"new":scope.modal.okButtonText="Add",scope.modal.title="Add New Role";break;case"update":scope.modal.okButtonText="Rename",scope.modal.title="Rename Role"}var modalInstance=$modal.open({templateUrl:"common/directives/security_matrix/security_new_role.html",backdrop:"static",scope:scope});scope.modal.cancel=function(){modalInstance.close()},scope.modal.closeModal=function(){if("Developer"!=scope.modal.roleName)switch(scope.modal.mode){case"new":scope.onRoleAdd({role:scope.modal.roleName}).then(addRole,errorHandler);break;case"update":scope.onRoleRename({role:scope.modal._id,newRole:scope.modal.roleName}).then(renameRole,errorHandler)}},scope.modal.removeRole=function(){ConfirmationPopup.confirm("Are sure you want to remove this rule?","Remove").then(function(value){value&&scope.onRoleRemove({role:scope.modal._id}).then(removeRole,errorHandler)})}}}}}angular.module("common.directives").directive("securityMatrix",["ConfirmationPopup","$modal","$log","$filter",SecurityMatrixDirective])}(),angular.module("angled-dragndrop.services",[]).factory("angledDndSrv",[function(){var _draggable=null;return{setDraggable:function(obj){angular.isDefined(obj)&&(_draggable=obj)},getDraggable:function(){return angular.isDefined(_draggable)?_draggable:null},clean:function(){_draggable=null}}}]),angular.module("angled-dragndrop.directives",["angled-dragndrop.services"]).directive("angledDraggable",["angledDndSrv",function(angledDndSrv){return{restrict:"A",compile:function(){return{pre:function(scope,el,attrs){var _obj={id:null,content:"",associate:null,group:null},placeholder=!1;_obj.content=el.html(),angular.isDefined(attrs.id)&&(_obj.id=attrs.id),angular.isDefined(attrs.associate)&&(_obj.associate=attrs.associate),angular.isDefined(attrs.placeholder)&&(placeholder=scope.$eval(attrs.placeholder));var opts=angular.isDefined(attrs.angledDraggable)?scope.$eval(attrs.angledDraggable):{};angular.isDefined(attrs.group)&&(_obj.group=attrs.group,opts.stack="."+attrs.group);var evts={start:function(evt,ui){placeholder&&ui.helper.wrap('<div class="angled-draggable-placeholder"></div>'),scope.$apply(function(){angledDndSrv.setDraggable(_obj),scope.$emit("angled.draggable.started",{obj:_obj})})},drag:function(){scope.$apply(function(){scope.$emit("angled.draggable.dragging")})},stop:function(evt,ui){placeholder&&ui.helper.unwrap(),scope.$apply(function(){scope.$emit("angled.draggable.stopped")})}},options=angular.extend({},opts,evts);el.draggable(options)},post:function(){}}}}}]).directive("angledDroppable",["angledDndSrv",function(angledDndSrv){return{restrict:"A",compile:function(){return{pre:function(scope,el,attrs){var _obj={id:null,dropped:[]};angular.isDefined(attrs.id)&&(_obj.id=attrs.id);var opts=angular.isDefined(attrs.angledDroppable)?scope.$eval(attrs.angledDroppable):{},evts={drop:function(){scope.$apply(function(){var _dropped=angledDndSrv.getDraggable();angular.isDefined(_dropped)&&!angular.equals(_dropped,null)&&_obj.dropped.push(angular.copy()),angledDndSrv.clean(),scope.$emit("angled.droppable.dropped",{obj:_obj})})},over:function(){scope.$apply(function(){scope.$emit("angled.droppable.over",{id:_obj.id})})}},options=angular.extend({},opts,evts);el.droppable(options)},post:function(){}}}}}]),angular.module("angled-dragndrop",["angled-dragndrop.directives"]),angular.module("angled-filters",[]).filter("obj2string",function(){return function(input){var parse=function(_o){var t,a=[];for(var p in _o)_o.hasOwnProperty(p)&&(t=_o[p],a[a.length]=t&&"object"==typeof t?p+":{ "+arguments.callee(t).join(", ")+"}":"string"==typeof t?[p+': "'+t.toString()+'"']:[p+": "+t.toString()]);return a};return input="{"+parse(input).join(", ")+"}"}}),angular.module("angled-helper.services",[]).factory("angledHelperSrv",["$log",function($log){var _rsLength=10;return{randStr:function(length,alphanumeric){length=angular.isDefined(length)&&!(angular.equals(length,0)||angular.equals(length,null)||parseInt(length)<=0)?parseInt(length):_rsLength,alphanumeric=angular.isDefined(alphanumeric)&&!(angular.equals(alphanumeric,0)||angular.equals(alphanumeric,"false")||angular.equals(alphanumeric,"no")||angular.equals(alphanumeric,!1))?!0:!1;var _random="",_chars=["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],_numbers=["0","1","2","3","4","5","6","7","8","9"],_glyphs=[];_glyphs=alphanumeric?_chars.concat(_numbers):_chars;for(var _gLength=_glyphs.length,i=0;length>i;i++)_random+=_glyphs[Math.floor(Math.random()*_gLength)];return _random},dumpObj:function(obj,name){name=angular.isDefined(name)?name:"[obj]",angular.isDefined(obj)&&!angular.equals(obj,null)&&obj.length>0&&($log.info("Properties of object: "+name),angular.forEach(obj,function(val,key){this.info("Property: "+key+" Value: "+val)},$log))}}}]),angular.module("angled-windows.directives",["ngSanitize","ngAnimate","angled-dragndrop","angled-filters","angled-helper.services"]).directive("angledWindow",["$animate","angledHelperSrv",function($animate,helperSrv){return{restrict:"E",transclude:!0,replace:!0,templateUrl:"common/directives/angled/angled-window.html",scope:{id:"@id",title:"@title",grouping:"@grouping",status:"=status",closeFunction:"&closeFunction",dictionaryItems:"=",rolledUp:"=?",cssClass:"@?"},compile:function(){return{pre:function(scope,el){if(angular.isUndefined(scope.id))for(var loop=!0;loop;){var id=helperSrv.randomStr(10);0==angular.element("#"+id).length&&(el.attr("id",id),scope.id=id,loop=!1)}angular.isUndefined(scope.grouping)&&(el.attr("grouping","default"),scope.grouping="default"),scope.$evalAsync(function(){scope.id=el.attr("id"),scope.grouping=el.attr("grouping")}),scope.dragOpts={handle:"div.panel-heading",opacity:.75},scope.resizeOpts={handles:"se",alsoResize:"#windowBodyContent_"+scope.id},angular.isDefined(scope.cssClass)&&$animate.addClass(el,scope.cssClass),angular.equals(scope.rolledUp,!0)&&$animate.addClass(el,"rolled-up")},post:function(scope,el){scope.rollUp=function(){scope.rolledUp=!scope.rolledUp,angular.equals(scope.rolledUp,!0)?$animate.addClass(el,"rolled-up"):$animate.removeClass(el,"rolled-up")}}}}}}]),angular.module("angled-windows",["angled-windows.directives"]),function(){function VideoModalDirective($modal,$sce){return{restrict:"AE",scope:{url:"=",title:"="},link:function(scope,element){element.bind("click",function(){scope.openModal()}),scope.openModal=function(){scope.givenUrl=$sce.trustAsResourceUrl(scope.url);var modalInstance=$modal.open({templateUrl:"common/directives/video_modal/video_modal.html",size:"lg",scope:scope});scope.ok=function(){modalInstance.close()},scope.cancel=function(){modalInstance.dismiss("cancel")}}}}}angular.module("common.directives").directive("videoModal",["$modal","$sce",VideoModalDirective])}(),function(){"use strict";function bkndAnchor(){return{restrict:"E",transclude:!0,scope:{anchorParams:"=",inputId:"@",windowTitle:"@",prevNeeded:"=?"},controller:["$scope",function($scope){$scope.dictionaryItems=$scope.anchorParams.dictionaryItems}],templateUrl:"common/directives/anchor/anchor.html"}}angular.module("common.directives").directive("bkndAnchor",bkndAnchor)}(),function(){"use strict";function bkndCopyBox(){return{restrict:"E",scope:{content:"&",type:"@?",disable:"&"},bindToController:!0,controllerAs:"copy",controller:["bkndCopyBoxService",bkndCopyBoxController],templateUrl:"common/directives/copy_box/copy_box.html"}
}function bkndCopyBoxController(bkndCopyBoxService){var self=this;self.copied=bkndCopyBoxService.copied,self.getContent=function(){return self.contentToCopy=self.content(),self.contentToCopy},self.setContentCopied=function(){self.contentToCopy&&(self.copied.last=self)},self.isContentCopied=function(){return self.copied.last===self}}angular.module("common.directives").directive("bkndCopyBox",bkndCopyBox).service("bkndCopyBoxService",function(){this.copied={}})}(),function(){"use strict";function bkndCopyUrl(){return{restrict:"E",scope:{copyUrlParams:"=",type:"@"},bindToController:!0,controllerAs:"copyUrl",controller:function(){function formsExist(){return self.copyUrlParams.getInputForm()&&self.copyUrlParams.getTestForm()}function formsPristine(){return self.copyUrlParams.getInputForm().$pristine&&self.copyUrlParams.getTestForm().$pristine}var self=this;self.getUrl=function(){return formsExist()?(self.url=formsPristine()?self.copyUrlParams.getUrl():"",self.url):""},self.isUrlCopied=function(){return formsExist()?(self.urlCopied=self.urlCopied&&self.isUrlAvailable(),self.urlCopied):!1},self.isUrlAvailable=function(){return formsExist()?(self.urlAvailable=!_.isEmpty(self.url)&&formsPristine(),self.urlAvailable):!1}},templateUrl:"common/directives/copy_url/copy_url.html"}}angular.module("common.directives").directive("bkndCopyUrl",bkndCopyUrl)}(),function(){function baAceDiff($timeout){return{scope:{leftContent:"=",rightContent:"=",leftEditor:"=?",rightEditor:"=?",aceDiffOptions:"=?",differ:"=?",control:"=?"},templateUrl:"common/directives/ace-diff/ace-diff.html",link:function($scope,element){function initEditor(editor,editorSettings,contentModel){editor.on("change",function(){$timeout(function(){$scope[contentModel]=editor.getValue()})}),$scope.$watch(contentModel,function(newVal){newVal!==editor.getSession().getValue()&&editorSettings&&editor.getSession().setValue($scope[contentModel])}),$scope.aceDiffOptions.onLoad(editor)}$scope.toggleAceFullScreen=function(){$scope.aceFullScreen=!$scope.aceFullScreen,setTimeout(function(){$scope.leftEditor.resize(),$scope.rightEditor.resize()},50)},$scope.control&&($scope.control.gotoLine=function(editor){var lastCursorPosition=editor.getCursorPosition();lastCursorPosition.row+=1,$timeout(function(){editor.focus(),editor.gotoLine(lastCursorPosition.row,lastCursorPosition.column)},550)}),$scope.differ=new AceDiff($scope.aceDiffOptions),$scope.editors=$scope.differ.getEditors(),initEditor($scope.editors.left,$scope.aceDiffOptions.left,"leftContent"),initEditor($scope.editors.right,$scope.aceDiffOptions.right,"rightContent"),$scope.leftEditor=$scope.editors.left,$scope.rightEditor=$scope.editors.right,element.on("$destroy",function(){$scope.differ.destroy()})}}}angular.module("common.directives").directive("baAceDiff",["$timeout",baAceDiff])}(),function(){"use strict";function bkndFilterForm(){return{scope:{noRepeat:"@",query:"=",fields:"=",operators:"=",disableValue:"=",onSubmit:"&"},bindToController:!0,controllerAs:"filterForm",controller:filterFormController,templateUrl:"common/directives/filter_form/filter_form.html"}}function filterFormController(){var self=this;self.query=[{}],self.operatorsList=self.operators||{text:["equals","notEquals","startsWith","contains","notContains","empty","notEmpty"],Numeric:["equals","notEquals","greaterThan","greaterThanOrEqualsTo","lessThan","lessThanOrEqualsTo","empty","notEmpty"],DateTime:["equals","notEquals","greaterThan","greaterThanOrEqualsTo","lessThan","lessThanOrEqualsTo","empty","notEmpty"],select:["in"],Boolean:["is"]},self.showAddButton=function(){return self.fields&&self.fields.length>0&&(0===self.query.length||_.last(self.query).field)},self.addRow=function(){var predicate={};1==self.fields.length&&(predicate.field=self.fields[0],self.onFieldSelected(predicate)),self.query.push(predicate)},self.onFieldSelected=function(predicate){self.noRepeat&&_.remove(self.fields,predicate.field),predicate.operator=self.operatorsList[predicate.field.type][0]},self.removePredicate=function(predicate){predicate.field?(_.remove(self.query,predicate),0===self.query.length&&self.query.push({}),self.noRepeat&&(self.fields.push(predicate.field),self.fields.sort(function(a,b){return a.index-b.index}))):predicate===_.last(self.query)&&self.query.length>1&&_.pullAt(self.query,self.query.length-1),self.submit()},self.submit=function(){return self.onSubmit()}}angular.module("common.directives").directive("bkndFilterForm",[bkndFilterForm])}(),function(){"use strict";function singleSelectController(DataService,ObjectsService,$filter){var self=this,field=self.field||self.item;self.getSingleSelectLabel=function(row){if("object"!=typeof row)return row;var descriptive=field.relatedView.descriptiveColumn,descriptiveLabel=row.__metadata.id+": "+row[descriptive],fields=[];return _.forEach(row,function(value,key){"__metadata"===key||key===descriptive||_.isEmpty(value)||fields.push({key:key,value:value})}),{descriptiveLabel:descriptiveLabel,fields:fields}},self.getSingleAutocomplete=function(query){var results;return DataService.search(field.relatedView.object,query).then(function(result){return results=$filter("orderBy")(result.data.data,"__matadata.id")}).then(function(){return ObjectsService.getObject(field.relatedView.object,query,!0)}).then(function(object){return _.remove(results,{__metadata:{id:object.data.__metadata.id}}),results.unshift(object.data),results},function(){return results})}}angular.module("common.directives").directive("bkndSingleSelectTypeahead",function(){return{scope:{inputId:"@",item:"=",field:"="},bindToController:!0,replace:!0,templateUrl:"common/directives/single_select_typeahead/single_select_typeahead.html",controllerAs:"singleSelect",controller:["DataService","ObjectsService","$filter",singleSelectController]}})}(),function(){"use strict";function findInAceLink(scope){var forms=["findForm","replaceForm","findOptionsForm"];forms.forEach(function(form){_.forOwn(scope[form],function(value,key){_.startsWith(key,"$")||(scope[form][key].$pristine=!1,scope[form][key].$setPristine=angular.noop)})})}function findInAceController(){function resetFind(backwards){self.replaceNow=!0,self.searchOptions.backwards=backwards}function getTerm(){self.searchTerm||(self.searchTerm=self.editor.getSelectedText())}var self=this;self.searchOptions={},self.findNext=function(){return resetFind(),getTerm(),self.searchOptions.start=null,self.editor.find(self.searchTerm,self.searchOptions)},self.findOnChange=function(){return resetFind(),self.searchOptions.start=self.editor.getSelectionRange().start,self.editor.find(self.searchTerm,self.searchOptions)},self.findAndReplace=function(){self.editor.getReadOnly()||(self.replaceNow?self.editor.replace(self.replaceTerm):self.editor.find(self.searchTerm,self.searchOptions),self.replaceNow=!self.replaceNow)},self.findPrev=function(){return resetFind(!0),getTerm(),self.editor.find(self.searchTerm,self.searchOptions)}}angular.module("common.directives").directive("bkndFindInAce",function(){return{scope:{editor:"=",nestingForm:"="},replace:!0,templateUrl:"common/directives/find_in_ace/find_in_ace.html",bindToController:!0,controller:findInAceController,controllerAs:"findInAce",link:findInAceLink}})}(),function(){"use strict";function aceFeaturesController(){var self=this;self.getThemeClass=function(){return self.editor?_.last(self.editor.getTheme().split("/")):void 0}}angular.module("common.directives").directive("bkndAceFeatures",function(){return{scope:{editor:"=",nestingForm:"=?"},replace:!0,templateUrl:"common/directives/ace-features/ace-features.html",transclude:!0,bindToController:!0,controller:["$scope",aceFeaturesController],controllerAs:"aceFeatures"}})}();var removeClassSVG=function(obj,remove){var classes=obj.attr("class");if(!classes)return!1;var index=classes.search(remove);return-1==index?!1:(classes=classes.substring(0,index)+classes.substring(index+remove.length,classes.length),obj.attr("class",classes),!0)},hasClassSVG=function(obj,has){var classes=obj.attr("class");return classes?-1!=classes.search(has):!1};angular.module("mouseCapture",[]).factory("mouseCapture",["$rootScope",function($rootScope){var $element=document,mouseCaptureConfig=null,mouseMove=function(evt){mouseCaptureConfig&&mouseCaptureConfig.mouseMove&&(mouseCaptureConfig.mouseMove(evt),$rootScope.$digest())},mouseUp=function(evt){mouseCaptureConfig&&mouseCaptureConfig.mouseUp&&(mouseCaptureConfig.mouseUp(evt),$rootScope.$digest())};return{registerElement:function(element){$element=element},acquire:function(evt,config){this.release(),mouseCaptureConfig=config,$element.mousemove(mouseMove),$element.mouseup(mouseUp)},release:function(){mouseCaptureConfig&&(mouseCaptureConfig.released&&mouseCaptureConfig.released(),mouseCaptureConfig=null),$element.unbind("mousemove",mouseMove),$element.unbind("mouseup",mouseUp)}}}]).directive("mouseCapture",function(){return{restrict:"A",controller:["$scope","$element","$attrs","mouseCapture",function($scope,$element,$attrs,mouseCapture){mouseCapture.registerElement($element)}]}}),angular.module("dragging",["mouseCapture"]).factory("dragging",["$rootScope","mouseCapture",function($rootScope,mouseCapture){var threshold=5;return{startDrag:function(evt,config){var dragging=!1,x=evt.pageX,y=evt.pageY,mouseMove=function(evt){dragging?(config.dragging&&config.dragging(evt.pageX,evt.pageY,evt),x=evt.pageX,y=evt.pageY):(Math.abs(evt.pageX-x)>threshold||Math.abs(evt.pageY-y)>threshold)&&(dragging=!0,config.dragStarted&&config.dragStarted(x,y,evt),config.dragging&&config.dragging(evt.pageX,evt.pageY,evt))},released=function(){dragging?config.dragEnded&&config.dragEnded():config.clicked&&config.clicked()},mouseUp=function(evt){mouseCapture.release(),evt.stopPropagation(),evt.preventDefault()};mouseCapture.acquire(evt,{mouseMove:mouseMove,mouseUp:mouseUp,released:released}),evt.stopPropagation(),evt.preventDefault()}}}]);var flowchart={};!function(){flowchart.defaultNodeWidth=250,flowchart.nodeNameHeight=40,flowchart.connectorHeight=35,flowchart.connectorYOffset=10,flowchart.computeConnectorY=function(connectorIndex){return flowchart.nodeNameHeight+connectorIndex*flowchart.connectorHeight+flowchart.connectorYOffset},flowchart.computeConnectorPos=function(node,connectorIndex,inputConnector){return{x:node.x()+(inputConnector?0:node.width?node.width():flowchart.defaultNodeWidth),y:node.y()+flowchart.computeConnectorY(connectorIndex)}},flowchart.ConnectorViewModel=function(connectorDataModel,x,y,parentNode){this.data=connectorDataModel,this._parentNode=parentNode,this._x=x,this._y=y,this.name=function(){return this.data.name},this.x=function(){return this._x},this.y=function(){return this._y},this.parentNode=function(){return this._parentNode}};var createConnectorsViewModel=function(connectorDataModels,x,parentNode){var viewModels=[];if(connectorDataModels)for(var i=0;i<connectorDataModels.length;++i){var connectorViewModel=new flowchart.ConnectorViewModel(connectorDataModels[i],x,flowchart.computeConnectorY(i),parentNode);viewModels.push(connectorViewModel)}return viewModels};flowchart.NodeViewModel=function(nodeDataModel){this.data=nodeDataModel,(!this.data.width||this.data.width<0)&&(this.data.width=flowchart.defaultNodeWidth),this.inputConnectors=createConnectorsViewModel(this.data.inputConnectors,0,this),this.outputConnectors=createConnectorsViewModel(this.data.outputConnectors,this.data.width,this),this._selected=!1,this.name=function(){return this.data.name||""},this.x=function(){return this.data.x},this.y=function(){return this.data.y},this.width=function(){return this.data.width},this.height=function(){var numConnectors=Math.max(this.inputConnectors.length,this.outputConnectors.length);return flowchart.computeConnectorY(numConnectors)-flowchart.connectorYOffset},this.select=function(){this._selected=!0},this.deselect=function(){this._selected=!1},this.toggleSelected=function(){this._selected=!this._selected},this.selected=function(){return this._selected},this._addConnector=function(connectorDataModel,x,connectorsDataModel,connectorsViewModel){var connectorViewModel=new flowchart.ConnectorViewModel(connectorDataModel,x,flowchart.computeConnectorY(connectorsViewModel.length),this);connectorsDataModel.push(connectorDataModel),connectorsViewModel.push(connectorViewModel)},this.addInputConnector=function(connectorDataModel){this.data.inputConnectors||(this.data.inputConnectors=[]),this._addConnector(connectorDataModel,0,this.data.inputConnectors,this.inputConnectors)},this.addOutputConnector=function(connectorDataModel){this.data.outputConnectors||(this.data.outputConnectors=[]),this._addConnector(connectorDataModel,this.data.width,this.data.outputConnectors,this.outputConnectors)}};var createNodesViewModel=function(nodesDataModel){var nodesViewModel=[];if(nodesDataModel)for(var i=0;i<nodesDataModel.length;++i)nodesViewModel.push(new flowchart.NodeViewModel(nodesDataModel[i]));return nodesViewModel};flowchart.ConnectionViewModel=function(connectionDataModel,sourceConnector,destConnector){this.data=connectionDataModel,this.source=sourceConnector,this.dest=destConnector,this._selected=!1,this.name=function(){return this.data.name||""},this.sourceCoordX=function(){return this.source.parentNode().x()+this.source.x()},this.sourceCoordY=function(){return this.source.parentNode().y()+this.source.y()},this.sourceCoord=function(){return{x:this.sourceCoordX(),y:this.sourceCoordY()}},this.sourceTangentX=function(){return flowchart.computeConnectionSourceTangentX(this.sourceCoord(),this.destCoord())},this.sourceTangentY=function(){return flowchart.computeConnectionSourceTangentY(this.sourceCoord(),this.destCoord())},this.destCoordX=function(){return this.dest.parentNode().x()+this.dest.x()},this.destCoordY=function(){return this.dest.parentNode().y()+this.dest.y()},this.destCoord=function(){return{x:this.destCoordX(),y:this.destCoordY()}},this.destTangentX=function(){return flowchart.computeConnectionDestTangentX(this.sourceCoord(),this.destCoord())},this.destTangentY=function(){return flowchart.computeConnectionDestTangentY(this.sourceCoord(),this.destCoord())},this.middleX=function(scale){return"undefined"==typeof scale&&(scale=.5),this.sourceCoordX()*(1-scale)+this.destCoordX()*scale},this.middleY=function(scale){return"undefined"==typeof scale&&(scale=.5),this.sourceCoordY()*(1-scale)+this.destCoordY()*scale},this.select=function(){this._selected=!0},this.deselect=function(){this._selected=!1},this.toggleSelected=function(){this._selected=!this._selected},this.selected=function(){return this._selected}};var computeConnectionTangentOffset=function(pt1,pt2){return(pt2.x-pt1.x)/2};flowchart.computeConnectionSourceTangentX=function(pt1,pt2){return pt1.x+computeConnectionTangentOffset(pt1,pt2)},flowchart.computeConnectionSourceTangentY=function(pt1){return pt1.y},flowchart.computeConnectionSourceTangent=function(pt1,pt2){return{x:flowchart.computeConnectionSourceTangentX(pt1,pt2),y:flowchart.computeConnectionSourceTangentY(pt1,pt2)}},flowchart.computeConnectionDestTangentX=function(pt1,pt2){return pt2.x-computeConnectionTangentOffset(pt1,pt2)},flowchart.computeConnectionDestTangentY=function(pt1,pt2){return pt2.y},flowchart.computeConnectionDestTangent=function(pt1,pt2){return{x:flowchart.computeConnectionDestTangentX(pt1,pt2),y:flowchart.computeConnectionDestTangentY(pt1,pt2)}},flowchart.ChartViewModel=function(chartDataModel){this.findNode=function(nodeID){for(var i=0;i<this.nodes.length;++i){var node=this.nodes[i];if(node.data.id==nodeID)return node}throw new Error("Failed to find node "+nodeID)},this.findInputConnector=function(nodeID,connectorIndex){var node=this.findNode(nodeID);if(!node.inputConnectors||node.inputConnectors.length<=connectorIndex)throw new Error("Node "+nodeID+" has invalid input connectors.");return node.inputConnectors[connectorIndex]},this.findOutputConnector=function(nodeID,connectorIndex){var node=this.findNode(nodeID);if(!node.outputConnectors||node.outputConnectors.length<=connectorIndex)throw new Error("Node "+nodeID+" has invalid output connectors.");return node.outputConnectors[connectorIndex]},this._createConnectionViewModel=function(connectionDataModel){var sourceConnector=this.findOutputConnector(connectionDataModel.source.nodeID,connectionDataModel.source.connectorIndex),destConnector=this.findInputConnector(connectionDataModel.dest.nodeID,connectionDataModel.dest.connectorIndex);return new flowchart.ConnectionViewModel(connectionDataModel,sourceConnector,destConnector)},this._createConnectionsViewModel=function(connectionsDataModel){var connectionsViewModel=[];if(connectionsDataModel)for(var i=0;i<connectionsDataModel.length;++i)connectionsViewModel.push(this._createConnectionViewModel(connectionsDataModel[i]));return connectionsViewModel},this.data=chartDataModel,this.nodes=createNodesViewModel(this.data.nodes),this.connections=this._createConnectionsViewModel(this.data.connections),this.createNewConnection=function(startConnector,endConnector){var connectionsDataModel=this.data.connections;connectionsDataModel||(connectionsDataModel=this.data.connections=[]);var connectionsViewModel=this.connections;connectionsViewModel||(connectionsViewModel=this.connections=[]);var startNode=startConnector.parentNode(),startConnectorIndex=startNode.outputConnectors.indexOf(startConnector),startConnectorType="output";if(-1==startConnectorIndex&&(startConnectorIndex=startNode.inputConnectors.indexOf(startConnector),startConnectorType="input",-1==startConnectorIndex))throw new Error("Failed to find source connector within either inputConnectors or outputConnectors of source node.");var endNode=endConnector.parentNode(),endConnectorIndex=endNode.inputConnectors.indexOf(endConnector),endConnectorType="input";if(-1==endConnectorIndex&&(endConnectorIndex=endNode.outputConnectors.indexOf(endConnector),endConnectorType="output",-1==endConnectorIndex))throw new Error("Failed to find dest connector within inputConnectors or outputConnectors of dest node.");if(startConnectorType==endConnectorType)throw new Error("Failed to create connection. Only output to input connections are allowed.");if(startNode==endNode)throw new Error("Failed to create connection. Cannot link a node with itself.");var startNode={nodeID:startNode.data.id,connectorIndex:startConnectorIndex},endNode={nodeID:endNode.data.id,connectorIndex:endConnectorIndex},connectionDataModel={source:"output"==startConnectorType?startNode:endNode,dest:"output"==startConnectorType?endNode:startNode};connectionsDataModel.push(connectionDataModel);var outputConnector="output"==startConnectorType?startConnector:endConnector,inputConnector="output"==startConnectorType?endConnector:startConnector,connectionViewModel=new flowchart.ConnectionViewModel(connectionDataModel,outputConnector,inputConnector);connectionsViewModel.push(connectionViewModel)},this.addNode=function(nodeDataModel){this.data.nodes||(this.data.nodes=[]),this.data.nodes.push(nodeDataModel),this.nodes.push(new flowchart.NodeViewModel(nodeDataModel))},this.selectAll=function(){for(var nodes=this.nodes,i=0;i<nodes.length;++i){var node=nodes[i];node.select()}for(var connections=this.connections,i=0;i<connections.length;++i){var connection=connections[i];connection.select()}},this.deselectAll=function(){for(var nodes=this.nodes,i=0;i<nodes.length;++i){var node=nodes[i];node.deselect()}for(var connections=this.connections,i=0;i<connections.length;++i){var connection=connections[i];connection.deselect()}},this.updateSelectedNodesLocation=function(deltaX,deltaY){for(var selectedNodes=this.getSelectedNodes(),i=0;i<selectedNodes.length;++i){var node=selectedNodes[i];node.data.x+=deltaX,node.data.y+=deltaY}},this.handleNodeClicked=function(node,ctrlKey){ctrlKey?node.toggleSelected():(this.deselectAll(),node.select());var nodeIndex=this.nodes.indexOf(node);if(-1==nodeIndex)throw new Error("Failed to find node in view model!");this.nodes.splice(nodeIndex,1),this.nodes.push(node)},this.handleConnectionMouseDown=function(connection,ctrlKey){ctrlKey?connection.toggleSelected():(this.deselectAll(),connection.select())},this.deleteSelected=function(){for(var newNodeViewModels=[],newNodeDataModels=[],deletedNodeIds=[],nodeIndex=0;nodeIndex<this.nodes.length;++nodeIndex){var node=this.nodes[nodeIndex];node.selected()?deletedNodeIds.push(node.data.id):(newNodeViewModels.push(node),newNodeDataModels.push(node.data))}for(var newConnectionViewModels=[],newConnectionDataModels=[],connectionIndex=0;connectionIndex<this.connections.length;++connectionIndex){var connection=this.connections[connectionIndex];connection.selected()||-1!==deletedNodeIds.indexOf(connection.data.source.nodeID)||-1!==deletedNodeIds.indexOf(connection.data.dest.nodeID)||(newConnectionViewModels.push(connection),newConnectionDataModels.push(connection.data))}this.nodes=newNodeViewModels,this.data.nodes=newNodeDataModels,this.connections=newConnectionViewModels,this.data.connections=newConnectionDataModels},this.applySelectionRect=function(selectionRect){this.deselectAll();for(var i=0;i<this.nodes.length;++i){var node=this.nodes[i];node.x()>=selectionRect.x&&node.y()>=selectionRect.y&&node.x()+node.width()<=selectionRect.x+selectionRect.width&&node.y()+node.height()<=selectionRect.y+selectionRect.height&&node.select()}for(var i=0;i<this.connections.length;++i){var connection=this.connections[i];connection.source.parentNode().selected()&&connection.dest.parentNode().selected()&&connection.select()}},this.getSelectedNodes=function(){for(var selectedNodes=[],i=0;i<this.nodes.length;++i){var node=this.nodes[i];node.selected()&&selectedNodes.push(node)}return selectedNodes},this.getSelectedConnections=function(){for(var selectedConnections=[],i=0;i<this.connections.length;++i){var connection=this.connections[i];connection.selected()&&selectedConnections.push(connection)}return selectedConnections}}}(),angular.module("flowChart",["dragging"]).directive("flowChart",function(){return{restrict:"E",templateUrl:"common/directives/flowchart/flowchart_template.html",replace:!0,scope:{chart:"=chart",onIconClick:"&"},controller:"FlowChartController"}}).directive("chartJsonEdit",function(){return{restrict:"A",scope:{viewModel:"="},link:function(scope,elem){var updateJson=function(){if(scope.viewModel){var json=JSON.stringify(scope.viewModel.data,null,4);$(elem).val(json)}};updateJson(),scope.$watch("viewModel.data",updateJson,!0),$(elem).bind("input propertychange",function(){var json=$(elem).val(),dataModel=JSON.parse(json);scope.viewModel=new flowchart.ChartViewModel(dataModel),scope.$digest()})}}}).controller("FlowChartController",["$scope","dragging","$element",function($scope,dragging,$element){var controller=this;this.document=document,this.jQuery=function(element){return $(element)},$scope.draggingConnection=!1,$scope.connectorSize=10,$scope.dragSelecting=!1,$scope.mouseOverConnector=null,$scope.mouseOverConnection=null,$scope.mouseOverNode=null,this.connectionClass="connection",this.connectorClass="connector",this.nodeClass="node",$scope.onNodeClick=function(node){this.onIconClick({node:node})},this.searchUp=function(element,parentClass){return null==element||0==element.length?null:hasClassSVG(element,parentClass)?element:this.searchUp(element.parent(),parentClass)},this.hitTest=function(clientX,clientY){return this.document.elementFromPoint(clientX,clientY)},this.checkForHit=function(mouseOverElement,whichClass){var hoverElement=this.searchUp(this.jQuery(mouseOverElement),whichClass);return hoverElement?hoverElement.scope():null},this.translateCoordinates=function(x,y,evt){var svg_elem=$element.get(0),matrix=svg_elem.getScreenCTM(),point=svg_elem.createSVGPoint();return point.x=x-evt.view.pageXOffset,point.y=y-evt.view.pageYOffset,point.matrixTransform(matrix.inverse())},$scope.mouseDown=function(evt){$scope.chart.deselectAll(),dragging.startDrag(evt,{dragStarted:function(x,y){$scope.dragSelecting=!0;var startPoint=controller.translateCoordinates(x,y,evt);$scope.dragSelectionStartPoint=startPoint,$scope.dragSelectionRect={x:startPoint.x,y:startPoint.y,width:0,height:0}},dragging:function(x,y){var startPoint=$scope.dragSelectionStartPoint,curPoint=controller.translateCoordinates(x,y,evt);$scope.dragSelectionRect={x:curPoint.x>startPoint.x?startPoint.x:curPoint.x,y:curPoint.y>startPoint.y?startPoint.y:curPoint.y,width:curPoint.x>startPoint.x?curPoint.x-startPoint.x:startPoint.x-curPoint.x,height:curPoint.y>startPoint.y?curPoint.y-startPoint.y:startPoint.y-curPoint.y}},dragEnded:function(){$scope.dragSelecting=!1,$scope.chart.applySelectionRect($scope.dragSelectionRect),delete $scope.dragSelectionStartPoint,delete $scope.dragSelectionRect}})},$scope.mouseMove=function(evt){$scope.mouseOverConnection=null,$scope.mouseOverConnector=null,$scope.mouseOverNode=null;var mouseOverElement=controller.hitTest(evt.clientX,evt.clientY);if(null!=mouseOverElement){if(!$scope.draggingConnection){var scope=controller.checkForHit(mouseOverElement,controller.connectionClass);if($scope.mouseOverConnection=scope&&scope.connection?scope.connection:null,$scope.mouseOverConnection)return}var scope=controller.checkForHit(mouseOverElement,controller.connectorClass);if($scope.mouseOverConnector=scope&&scope.connector?scope.connector:null,!$scope.mouseOverConnector){var scope=controller.checkForHit(mouseOverElement,controller.nodeClass);$scope.mouseOverNode=scope&&scope.node?scope.node:null}}},$scope.nodeMouseDown=function(evt,node){var lastMouseCoords,chart=$scope.chart;dragging.startDrag(evt,{dragStarted:function(x,y){lastMouseCoords=controller.translateCoordinates(x,y,evt),node.selected()||(chart.deselectAll(),node.select())},dragging:function(x,y){var curCoords=controller.translateCoordinates(x,y,evt),deltaX=curCoords.x-lastMouseCoords.x,deltaY=curCoords.y-lastMouseCoords.y;chart.updateSelectedNodesLocation(deltaX,deltaY),lastMouseCoords=curCoords},clicked:function(){chart.handleNodeClicked(node,evt.ctrlKey)}})},$scope.connectionMouseDown=function(evt,connection){var chart=$scope.chart;chart.handleConnectionMouseDown(connection,evt.ctrlKey),evt.stopPropagation(),evt.preventDefault()},$scope.connectorMouseDown=function(evt,node,connector,connectorIndex,isInputConnector){dragging.startDrag(evt,{dragStarted:function(x,y){var curCoords=controller.translateCoordinates(x,y,evt);$scope.draggingConnection=!0,$scope.dragPoint1=flowchart.computeConnectorPos(node,connectorIndex,isInputConnector),$scope.dragPoint2={x:curCoords.x,y:curCoords.y},$scope.dragTangent1=flowchart.computeConnectionSourceTangent($scope.dragPoint1,$scope.dragPoint2),$scope.dragTangent2=flowchart.computeConnectionDestTangent($scope.dragPoint1,$scope.dragPoint2)},dragging:function(x,y,evt){var startCoords=controller.translateCoordinates(x,y,evt);$scope.dragPoint1=flowchart.computeConnectorPos(node,connectorIndex,isInputConnector),$scope.dragPoint2={x:startCoords.x,y:startCoords.y},$scope.dragTangent1=flowchart.computeConnectionSourceTangent($scope.dragPoint1,$scope.dragPoint2),$scope.dragTangent2=flowchart.computeConnectionDestTangent($scope.dragPoint1,$scope.dragPoint2)},dragEnded:function(){$scope.mouseOverConnector&&$scope.mouseOverConnector!==connector&&$scope.chart.createNewConnection(connector,$scope.mouseOverConnector),$scope.draggingConnection=!1,delete $scope.dragPoint1,delete $scope.dragTangent1,delete $scope.dragPoint2,delete $scope.dragTangent2}})}}]),function(){function FlowchartCtrl(){var self=this,deleteKeyCode=46,ctrlKeyCode=17,ctrlDown=!1,aKeyCode=65,escKeyCode=27,nextNodeID=10;self.updateChart=function(){self.chartViewModel.data!==self.chart&&(angular.copy(self.chartViewModel.data,self.chart),self.onUpdate())},self.keyDown=function(evt){evt.keyCode===ctrlKeyCode&&(ctrlDown=!0,evt.stopPropagation(),evt.preventDefault())},self.keyUp=function(evt){evt.keyCode===deleteKeyCode&&self.chartViewModel.deleteSelected(),evt.keyCode==aKeyCode&&ctrlDown&&self.chartViewModel.selectAll(),evt.keyCode==escKeyCode&&self.chartViewModel.deselectAll(),evt.keyCode===ctrlKeyCode&&(ctrlDown=!1,evt.stopPropagation(),evt.preventDefault())},self.addNewNode=function(){var nodeName=prompt("Enter a node name:","New node");if(nodeName){var newNodeDataModel={name:nodeName,id:nextNodeID++,x:0,y:0,inputConnectors:[{name:"X"},{name:"Y"},{name:"Z"}],outputConnectors:[{name:"1"},{name:"2"},{name:"3"}]};self.chartViewModel.addNode(newNodeDataModel)}},self.addNewInputConnector=function(){var connectorName=prompt("Enter a connector name:","New connector");if(connectorName)for(var selectedNodes=self.chartViewModel.getSelectedNodes(),i=0;i<selectedNodes.length;++i){var node=selectedNodes[i];node.addInputConnector({name:connectorName})}},self.addNewOutputConnector=function(){var connectorName=prompt("Enter a connector name:","New connector");if(connectorName)for(var selectedNodes=self.chartViewModel.getSelectedNodes(),i=0;i<selectedNodes.length;++i){var node=selectedNodes[i];node.addOutputConnector({name:connectorName})}},self.deleteSelected=function(){self.chartViewModel.deleteSelected()},self.chartViewModel=new flowchart.ChartViewModel(self.chart)}angular.module("common.directives").directive("bkndFlowChart",function(){return{restrict:"E",templateUrl:"common/directives/flowchart/flowchart.html",replace:!0,scope:{chart:"=chart",onUpdate:"&",showModelControls:"=",onIconClick:"&",selectedNode:"="},controller:FlowchartCtrl,controllerAs:"flowchartCtrl",bindToController:!0,link:function(scope){if(scope.flowchartCtrl.selectedNode){var node=scope.flowchartCtrl.chartViewModel.findNode(scope.flowchartCtrl.selectedNode);node&&scope.flowchartCtrl.chartViewModel.handleNodeClicked(node)}}}})}(),function(){"use strict";function httpInterceptor($q,SessionService,usSpinnerService,NotificationService,HttpBufferService,$injector,CONSTS){function avoidInterception(type,httpPackage){if("responseError"===type){if(httpPackage.config.config&&httpPackage.config.config.ignoreError)return!0;if("POST"===httpPackage.config.method&&_.startsWith(httpPackage.config.url,CONSTS.appUrl+"/admin/myAppConnection/")&&_.startsWith(httpPackage.data,"Invalid schema:"))return!0;if(_.startsWith(httpPackage.data,"Blob is not ready yet"))return!0}}return{request:function(config){return usSpinnerService.spin("spinner-1"),SessionService.currentUser&&SessionService.currentUser.access_token&&(config.headers.Authorization=SessionService.getAuthHeader()),config},requestError:function(rejection){return $q.reject(rejection)},response:function(response){return response},responseError:function(rejection){usSpinnerService.stop("loading");var state=$injector.get("$state");if(rejection.config.url!==CONSTS.appUrl+"/token"){if(401===rejection.status){if(rejection.data&&"invalid or expired token"===rejection.data.Message){if(SessionService.currentUser&&SessionService.currentUser.refresh_token){SessionService.clearToken();var deferred=$q.defer();HttpBufferService.append(rejection.config,deferred);var authService=$injector.get("AuthService");return authService.refreshToken(),deferred.promise}return NotificationService.add("warning","Login credentials have expired, please sign in again"),SessionService.setRequestedState(state.current.name,state.params),SessionService.clearCredentials(),state.transitionTo("sign_in"),$q.reject(rejection)}SessionService.clearCredentials(),state.transitionTo("sign_in")}}else SessionService.clearCredentials(),state.transitionTo("sign_in");return null==rejection.data?NotificationService.add("error","An error occurred while communicating with the server, please refresh the page in few seconds"):avoidInterception("responseError",rejection)||NotificationService.add("error",rejection.data.Message||rejection.data.error_description||rejection.data),$q.reject(rejection)}}}angular.module("common.interceptors.http",[]).factory("httpInterceptor",["$q","SessionService","usSpinnerService","NotificationService","HttpBufferService","$injector","CONSTS",httpInterceptor])}(),function(){"use strict";function uppercase(){return function(text){return text?text.toUpperCase():text}}angular.module("common.filters.uppercase",[]).filter("uppercase",uppercase)
}(),function(){"use strict";function newTerminology(){return function(text){return _.forIn(terminology,function(value,key){text=text.replace(new RegExp(key,"gi"),value)}),text}}var terminology={table:"object",column:"field"};angular.module("common.filters.newTerminology",[]).filter("newTerminology",newTerminology)}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/apps/index.tpl.html",'<div class="apps-jumbo" ng-show="index.showJumbo">\n  <i ng-click="index.closeJumbo()" class="ti-close apps-jumbo-close-icon"></i>\n  <div class="row apps-jumbo-title">\n    <h1>Welcome to Backand</h1>\n    <div class="apps-jumbo-headline">Start by creating your first app below.\n    You can also read our quick start resources</div>\n  </div>\n  <div class="row apps-jumbo-sections">\n    <div class="col-xs-4 col-sm-4">\n      <div class="apps-jumbo-section-wrapper" ui-sref="docs.getting-started-open">\n        <img src="assets/images/apps_page/icon-tutorial.png" alt=""/>\n        <div class="apps-jumbo-section-title">Getting started guide</div>\n      </div>\n    </div>\n    <div class="col-xs-4 col-sm-4">\n      <div class="apps-jumbo-section-wrapper" ui-sref="docs.mobile-open">\n        <img src="assets/images/apps_page/icon-seed.png" alt=""/>\n        <div class="apps-jumbo-section-title">Mobile starter with Ionic</div>\n      </div>\n    </div>\n    <div class="col-xs-4 col-sm-4">\n      <div class="apps-jumbo-section-wrapper" ng-click="index.goToLocation(\'http://docs.backand.com\')">\n        <img src="assets/images/apps_page/icon-api.png" alt=""/>\n        <div class="apps-jumbo-section-title">Documentation</div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class="page ng-scope">\n  <div class="panel-body" id="apps-page">\n    <div class="row">\n      <div us-spinner spinner-key="loading" spinner-start-active></div>\n      <div  class="col-lg-3 col-md-4 col-sm-6 app-panel" >\n        <div class="panel panel-default ui-ribbon-container ui-ribbon-primary">\n          <div class="ui-ribbon-wrapper">\n            <div class="ui-ribbon">New</div>\n          </div>\n          <div class="panel-heading">Add a new App</div>\n          <div class="panel-body app-panel-body">\n            <div class="row">\n              <div class="col-xs-10 col-xs-offset-1">\n                <form class="form-horizontal" name="form" role="form" ng-submit="index.addApp()">\n                  <fieldset>\n                    <div class="form-group">\n                        <div class="input-group">\n                          <input type="text" class="form-control" placeholder="App Name" style="text-transform: lowercase;"\n                                 ng-model = "index.appName" ng-model-options="{debounce: 500}"\n                                 ng-pattern="index.namePattern" test-hook="apps.new-app.name" name="appName" required >\n                            <div class="input-group-addon">.backand.net</div>\n                        </div>\n                      <div ng-show="form.appName.$error.pattern" test-hook="apps.new-app.error" class="input-error">no spaces or %$#@^&* allowed</div>\n                    </div>\n                    <div class="form-group">\n                      <input type="text" class="form-control" placeholder="app title"\n                             ng-model = "index.appTitle" test-hook="apps.new-app.title" ng-model-options="{debounce: 500}">\n                    </div>\n                    <div class="form-group" style="padding-top: 5px;">\n                      <button type="submit" test-hook="apps.new-app.create" ng-disabled="form.$invalid" class="btn btn-primary btn-w-md btn-block" ladda="index.loading" data-style="expand-right">Create New App</button>\n                    </div>\n                  </fieldset>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class="col-lg-3 col-md-4 col-sm-6 app-panel"\n           ng-repeat="app in index.apps track by app.__metadata.id"\n           test-hook="apps.app-panel">\n\n        <div class="panel panel-default ui-ribbon-container" ng-class="index.getRibboninfo(app).class">\n          <span ng-if="app.DatabaseStatus === 2" us-spinner="{radius:3, width:3, length: 3, top: \'9px\', left: \'92%\', color: \'white\'}"></span>\n          <div class="ui-ribbon-wrapper" test-hook="apps.app-panel.ribbon">\n            <div class="ui-ribbon" ng-if="app.DatabaseStatus === 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{ index.getRibboninfo(app).text }}</div>\n            <div class="ui-ribbon" ng-if="app.DatabaseStatus !== 2">{{ index.getRibboninfo(app).text }}</div>\n          </div>\n          <div class="panel-heading text-center">\n            <a href="" class="pull-left" ng-if="app.DatabaseStatus === 1"\n               ng-click="index.appSettings(app.Name)" class="pull-in">\n              <i class="ti-settings"></i>\n            </a>{{ ::app.Name }}\n          </div>\n          <div class="panel-body app-panel-body">\n            <div class="body-height">{{ ::app.Title }}</div>\n            <div class="app-panel-body-link">\n              <a href="" ng-click="index.goToLink(app)"\n                 ng-if="app.DatabaseStatus == 1"\n                 test-hook="apps.app-panel.link">\n                <i class="ti-star"></i>\n                {{index.getGoToLink(app).linkTitle}}\n              </a>\n              <div ng-if="app.DatabaseStatus !== 1">&nbsp;</div>\n            </div>\n            <button ng-click="index.appManage(app)"\n                    class="btn btn-default btn-w-md btn-block"\n                    data-style="expand-right"\n                    test-hook="apps.app-panel.manage-button">\n              {{index.getAppManageTitle(app)}}\n            </button>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/apps/settings.html",'<section class="page-form-ele page ng-scope">\n  <section class="panel panel-default">\n    <div class="panel-heading">\n      <strong> General Settings</strong>\n      <a href="javascript:;" title="Delete the App" class="btn btn-lg pull-right" style="margin-top: -10px;"\n         ng-click="settings.delete()"><i\n              class="glyphicon glyphicon-trash"></i></a>\n      <a href="javascript:;" title="Clear App\'s caching" class="btn btn-lg pull-right" style="margin-top: -10px;"\n         ng-click="settings.reset()"><i\n              class="glyphicon glyphicon-refresh"></i></a>\n    </div>\n    <div class="panel-body">\n      <form role="form" name="settingsForm" insert-at-caret novalidate ng-submit="settings.submitForm()">\n        <div class="form-group" ng-class="{\'has-error\': settingsForm.name.$invalid}">\n          <label for="name">App Name</label>\n          <input type="text" class="form-control" id="name" name="name" ng-model="settings.appName" required\n                 ng-disabled="false">\n        </div>\n        <div class="form-group" ng-class="{\'has-error\': settingsForm.title.$invalid}">\n          <label for="title">App Title</label>\n          <input type="text" class="form-control" id="title" name="title" ng-model="settings.appTitle" required>\n        </div>\n        <!--<div class="form-group" ng-class="{\'has-error\': settingsForm.title.$invalid}">-->\n          <!--<label for="title">Admin Notification Email</label>-->\n          <!--<input type="email" class="form-control" id="adminEmail" name="adminEmail" ng-model="settings.adminEmail">-->\n        <!--</div>-->\n        <div class="field-group">\n          <div class="group-inner">\n            <div class="form-group">\n              <label>Default Date Format</label>\n              <div>\n                <label class="ui-radio" ng-repeat="dates in settings.datesFormar">\n                  <input name="dateFormat" type="radio" ng-value="dates" ng-model="settings.dateFormat" ><span>{{dates}}</span>\n                </label>\n              </div>\n            </div>\n             <div class="form-group" ng-class="{\'has-error\': settingsForm.rows.$invalid}">\n              <label for="rows">Default Number of Items per API Request</label>\n              <input type="number" class="form-control" name="rows" id="rows" data-ng-model="settings.defaultPageSize"\n                     data-min=5\n                     data-max=1000 required>\n            </div>\n            <div class="form-group" ng-class="{\'has-error\': settingsForm.level.$invalid}">\n              <label for="level">Default Number of Levels when deep=true</label>\n              <input type="number" class="form-control" name="level" id="level"\n                     data-ng-model="settings.defaultLevelOfDept"\n                     data-min=1\n                     data-max=100 required>\n            </div>\n          </div>\n        </div>\n        <div class="field-group">\n          <div class="group-inner">\n            <div class="form-group">\n              <label>Global Configuration (Config)</label>\n              <bknd-ace-features editor="settings.ace.editor">\n                <div\n                        ui-ace="{onLoad : settings.ace.onLoad, theme:\'monokai\', mode: \'json\', rendererOptions: { fontSize: 15 } }"\n                        type="text"\n                        class="form-control no-show-hide-animation"\n                        id="config"\n                        ng-model="settings.config"\n                        rows="10">\n                </div>\n              </bknd-ace-features>\n            </div>\n          </div>\n        </div>\n        <div class="save-bar">\n         <button type="submit" ng-disabled="settingsForm.$invalid" class="btn btn-success btn-lg btn-w-lg"\n                 ladda="settings.loading" data-style="expand-right">Save</button>\n        </div>\n      </form>\n    </div>\n  </section>\n\n  <!--<section class="panel panel-default">-->\n    <!--<div class="panel-heading">-->\n      <!--<strong> Images Storage Configuration</strong>-->\n      <!--<a href="javascript:;" class="btn btn-lg " ><i class="ti-plus"></i></a>-->\n    <!--</div>-->\n    <!--<div class="panel-body">-->\n      <!--<div class="ui-tab-container ui-tab-vertical" style="height:200px; overflow:auto">-->\n        <!--<tabset class="ui-tab">-->\n          <!--<tab heading="S3 Storage">-->\n            <!--<form role="form" role="form" ng-submit="settings.sumbitForm()">-->\n              <!--<div class="form-group">-->\n                <!--<label for="name">Name</label>-->\n                <!--<input type="text" class="form-control" id="name" value="s3 example" required>-->\n              <!--</div>-->\n            <!--</form>-->\n          <!--</tab>-->\n        <!--</tabset>-->\n      <!--</div>-->\n    <!--</div>-->\n  <!--</section>-->\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/apps/show.tpl.html",'<div class="page">\n  <alert type="danger" close="show.setAlertStatus()" ng-show="show.alertMsg != \'\'"><div ng-bind-html="show.alertMsg"></div></alert>\n  <div class="panel panel-default dashboard">\n    <div class="panel-heading"><strong>Dashboard</strong></div>\n    <div class="panel-body">\n      <div class="row col-md-10 col-sm-offset-1">\n\n        <div class="list-unstyled row col-sm-offset-1">\n          <ul class="list-inline text-center stats" >\n              <li class="col-md-3">\n                <h1>{{show.statisticsArray[\'last24hours\'] | number:0}}</h1>\n                <p class="text-muted size-h5">Requests in the last 24h</p>\n              </li>\n              <li class="col-md-3">\n                  <h1>{{show.statisticsArray[\'diffLastDaytoYesterday\'] == null ? 0 : show.statisticsArray[\'diffLastDaytoYesterday\'] | number:0}}%</h1>\n                  <p class="text-muted size-h5">Change in the last 24h</p>\n              </li>\n              <li class="col-md-3">\n                  <h1>{{show.statisticsArray[\'last30days\'] | number:0}}</h1>\n                  <p class="text-muted size-h5">Requests in the last 30d</p>\n              </li>\n              <li class="col-md-3">\n                  <h1>{{show.statisticsArray[\'diffLast30DaysToPrev\'] == null ? 0 : show.statisticsArray[\'diffLast30DaysToPrev\'] | number:0 }}%</h1>\n                  <p class="text-muted size-h5">Change in the last 30d</p>\n              </li>\n              <!--<li class="col-md-2">-->\n                  <!--<h1>{{show.statisticsArray[\'sizeInMb\']==null ? 0:show.statisticsArray[\'sizeInMb\'] | number:0}}MB</h1>-->\n                  <!--<p class="text-muted size-h5">Database Size</p>-->\n              <!--</li>-->\n          </ul>\n        </div>\n\n        <div class="divider divider-solid"></div>\n\n        <div class="row">\n          <div class="col-md-5 col-sm-6">\n            <div log-list app-name="{{appName}}" log-limit="10"></div>\n          </div>\n\n          <div class="col-md-1 col-sm-0">\n            <div class="vertical-border" style="height:400px;"></div>\n          </div>\n\n          <div class="col-md-6 col-sm-6">\n            <div class="app-log">\n              <h4 class="">TOOLS AND KNOWLEDGE BASE</h4>\n\n              <section ui-sref="playground.show({name: show.appName})" class="data-panel">\n                <div class="panel-icon">\n                  <i class="icon-rest-api-icon text-huge"></i>\n                </div>\n                <div class="panel-data">\n                  <h4>REST API Playground</h4>\n                  <p>Test your app with Backand\'s REST APIs</p>\n                </div>\n              </section>\n\n                <section ui-sref="docs.api-desc({name: show.appName})" class="data-panel data-panel-success">\n                    <div class="panel-icon">\n                        <i class="icon-orm-icon text-huge"></i>\n                    </div>\n                    <div class="panel-data">\n                        <h4>Documentation</h4>\n                        <p>Review Backand\'s documentation</p>\n                    </div>\n                </section>\n\n                <section  class="data-panel" ui-sref="database.show({name: show.appName})">\n                    <div class="panel-icon">\n                        <i class="icon-databsase-icon text-huge"></i>\n                    </div>\n                    <div class="panel-data">\n                        <h4>Database</h4>\n                        <p>Manage your database connection</p>\n                    </div>\n                </section>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/api_playground/orm.html",'<section class="page-form-ele page ng-scope">\n    <div class="panel panel-default">\n        <div class="panel-heading"><strong> ORM playground{{play.urlPrefix}}</strong>\n            <div us-spinner spinner-key="loading" spinner-start-active></div>\n        </div>\n        <div class="panel-body">\n            <div class="row col-sm-10 col-sm-offset-1" ng-bind-html="play.urlPrefix()">\n                <!--<iframe id="restIfrmae" src="//www.modubiz.us:4019/misc/rest-api/index.html?useToken=true&orm=restangular#!/Database_Table_Data" style="height:578px;width:1028px;border: none"></iframe>-->\n            </div>\n        </div>\n    </div>\n</section>\n\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/api_playground/orm_config.html",'<section class="page-form-ele page ng-scope">\n    <div class="panel panel-default">\n        <div class="panel-heading">\n            <strong>ORM Configuration</strong>\n        </div>\n        <div class="panel-body">\n            <div class="row col-sm-10 col-sm-offset-1">\n            <h1>\n                <a id="user-content-how-do-i-add-this-to-my-project" class="anchor" href="#how-do-i-add-this-to-my-project" aria-hidden="true"><span class="octicon octicon-link"></span></a>How do I add RestangularBknd-orm to my project?\n            </h1>\n\n            <p>You can download this by:</p>\n\n            <ul class="task-list">\n                <li><p>Using bower and running <code>bower install restangularbknd-orm</code></p></li>\n                <li><p>Using npm and running <code>npm install restangularbknd-orm</code></p></li>\n                <li><p>Downloading it manually by clicking <a href="https://github.com/backand/restangularbknd-orm/blob/master/dist/restangularbknd-orm.debug.js" target="_blank">development unminified version</a> or <a href="https://github.com/backand/restangularbknd-orm/blob/master/dist/restangularbknd-orm.min.js">minified production version</a></p></li>\n            </ul>\n            <br/>\n            <p>The github sources: <a href="https://github.com/backand/restangularbknd-orm" target="_blank">https://github.com/backand/restangularbknd-orm</a></p>\n            <p>The Plunker demo of the example: <a href="http://plnkr.co/edit/Himh9XP2tNn07VJDFtF8?p=preview" target="_blank">http://plnkr.co/edit/Himh9XP2tNn07VJDFtF8?p=preview</a></p>\n\n            <h2>\n                <a id="user-content-dependencies" class="anchor" href="#dependencies" aria-hidden="true"><span class="octicon octicon-link"></span></a>Dependencies\n            </h2>\n\n            <p>restangularbknd-orm depends on AngularJS, Restangular and angular-cookies.js</p>\n\n            <h2>\n                <a id="user-content-configuration" class="anchor" href="#configuration" aria-hidden="true"><span class="octicon octicon-link"></span></a>Configuration\n            </h2>\n\n\n            <pre>\n// Add Restangular as a dependency to your app\nangular.module(\'your-app\', [\'restangularbknd-orm\']);\n// Inject restangularbknd-orm services into your authorization controller\nangular.module(\'your-app\').controller(\'Your Authorization Controller\', function($scope, AuthService, SessionService, RestangularBknd) {\n    // ...\n});\n// Inject Restangular into your controllers that require data\nangular.module(\'your-app\').controller(\'Your Controller\', function($scope, Restangular) {\n    // ...\n});\n</pre>\n\n\n            <h3>\n                <a id="user-content-authentication" class="anchor" href="#authentication" aria-hidden="true"><span class="octicon octicon-link"></span></a>Authentication\n            </h3>\n\n            <p>\n                Use the Authentication service in the controller that is responsible for sign-in and sign-out.\n                Call the sign-in with username, password and appname, and in the success callback set the credentials, which are basically the auth token, into the session and restangularbknd services.\n            </p>\n\n\n            <pre>\n.controller(\'authorizationCtrl\', [\'$scope\', \'AuthService\', \'SessionService\', \'RestangularBknd\', function ($scope, AuthService, SessionService, RestangularBknd) {\n    $scope.signIn = function () {\n        // send the username, password and appname to get an OAuth2 authentication token\n        /****** Authentication Service Usage ********/\n        AuthService.signIn($scope.username, $scope.password, $scope.appname)\n        /********************************************/\n        .success(function (data, status, headers, config) {\n            // handle success\n            SessionService.setCredentials(data);\n            RestangularBknd.setCredentials(SessionService.getAuthHeader());\n        })\n        .error(function (data, status, headers, config) {\n            // handle error\n        });\n    };\n}]);\n</pre>\n\n\n            <h3>\n                <a id="user-content-session" class="anchor" href="#session" aria-hidden="true"><span class="octicon octicon-link"></span></a>Session\n            </h3>\n\n            <p>\n                Use the session service in the controller that is responsible for sign-in and sign-out.\n                Set the credentials in the sign-in success callback and rRemove them to sign out.\n            </p>\n\n\n            <pre>\n.controller(\'authorizationCtrl\', [\'$scope\', \'AuthService\', \'SessionService\', \'RestangularBknd\', function ($scope, AuthService, SessionService, RestangularBknd) {\n    $scope.signIn = function () {\n        // send the username, password and appname to get an OAuth2 authentication token\n        AuthService.signIn($scope.username, $scope.password, $scope.appname)\n        .success(function (data, status, headers, config) {\n            // handle success\n            /****** Session Service Usage ********/\n            SessionService.setCredentials(data);\n            /*************************************/\n            RestangularBknd.setCredentials(SessionService.getAuthHeader());\n        })\n            .error(function (data, status, headers, config) {\n            // handle error\n        });\n    };\n    $scope.signOut = function () {\n        /****** Session Service Usage ********/\n        SessionService.clearCredentials();\n        /*************************************/\n        RestangularBknd.clearCredentials();\n    };\n}]);\n</pre>\n            <p>When the application starts, call them to set them into Restangular.</p>\n            <pre>\nmyApp.run(<span class="pl-st">function</span> (<span class="pl-vpf">RestangularBknd</span>, <span class="pl-vpf">SessionService</span>) {\n    RestangularBknd.config();\n    <span class="pl-c">/****** Session Service Usage ********/</span>\n    <span class="pl-s">var</span> authHeader <span class="pl-k">=</span> SessionService.getAuthHeader();\n    <span class="pl-c">/*************************************/</span>\n    RestangularBknd.setCredentials(authHeader);\n});</pre>\n\n\n            <h3>\n                <a id="user-content-restangular-backand-configuration" class="anchor" href="#restangular-backand-configuration" aria-hidden="true"><span class="octicon octicon-link"></span></a>Restangular Backand Configuration\n            </h3>\n\n            <p>\n                Configure the Restangular when the application starts\n                and set the credentials from the session (cookie) if there are any.\n            </p>\n\n\n            <pre>\nmyApp.run(function (RestangularBknd, SessionService) {\n    /****** RestangularBknd Service Usage ********/\n    RestangularBknd.config();\n    /*********************************************/\n    var authHeader = SessionService.getAuthHeader();\n    /****** RestangularBknd Service Usage ********/\n    RestangularBknd.setCredentials(authHeader);\n    /*********************************************/\n});</pre>\n\n\n            <p>Set the credentials after authentication.</p>\n\n\n            <pre>\n'+".controller('authorizationCtrl', ['$scope', 'AuthService', 'SessionService', 'RestangularBknd', function ($scope, AuthService, SessionService, RestangularBknd) {\n    $scope.signIn = function () {\n        // send the username, password and appname to get an OAuth2 authentication token\n        AuthService.signIn($scope.username, $scope.password, $scope.appname)\n        .success(function (data, status, headers, config) {\n            // handle success\n            SessionService.setCredentials(data);\n            /****** RestangularBknd Service Usage ********/\n            RestangularBknd.setCredentials(SessionService.getAuthHeader());\n            /*********************************************/\n        })\n            .error(function (data, status, headers, config) {\n            // handle error\n        });\n    };\n}]);\n</pre>\n            </div>\n        </div>\n    </div>\n</section>")}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/api_playground/orm_usage.html",'<section class="page-form-ele page ng-scope">\n    <div class="panel panel-default">\n        <div class="panel-heading"><strong>ORM Usage</strong></div>\n        <div class="panel-body">\n            <div class="row col-sm-10 col-sm-offset-1">\n            <h1>\n                <a id="user-content-short-description" class="anchor" href="#short-description" aria-hidden="true"><span class="octicon octicon-link"></span></a>Short Description\n            </h1>\n\n            <p>restangularbknd-orm has three services:</p>\n\n            <ul class="task-list">\n                <li><p>Auth (authentication)</p></li>\n                <li><p>Session</p></li>\n                <li><p>restangularbknd (Restangular Backand Configuration)</p></li>\n            </ul>\n\n            <p>\n                The Auth service handles the OAuth2 authentication with Backand. It uses a POST verb and sends a username, password and appname (application name) and receives an authentication token that is used for all further communication with Backand.<br/>\n                By using a cookie to persist the authentication token, the Session enables you to remain signed-in after the page is reloaded. The restangularbknd handles the Restangular Configuration by enabling you to use Restangular in your app.\n            </p>\n\n            <h2>\n                <a id="user-content-using-backand-orm-with-restangular" class="anchor" href="#using-backand-orm-with-restangular" aria-hidden="true"><span class="octicon octicon-link"></span></a>Using Backand ORM with Restangular\n            </h2>\n\n            <p>If you aren\'t familiar with Restangular, click <a href="https://github.com/mgonto/restangular" target="_blank">here</a> to learn more. </p>\n\n            <p>With the authentication and Restangular configurations settled you can perform all the CRUD operations:</p>\n\n            <h3>\n                <a id="user-content-list" class="anchor" href="#list" aria-hidden="true"><span class="octicon octicon-link"></span></a>List\n            </h3>\n\n            <p>Call Restangular getList with the following parameters to get a list:</p>\n\n            <ul class="task-list">\n                <li><p><strong>pageSize</strong> The number of returned items in each getList call, default 20.</p></li>\n                <li><p><strong>pageNumber</strong> The page number starting with 1, default 1.</p></li>\n                <li><p><strong>filter</strong> A stringified array where each item has the properties fieldName, operator and value. The operator options depend on the field type.</p></li>\n                <li><p><strong>sort</strong> A stringified array where each item has the properties fieldName and order. The order options are "asc" or "desc".</p></li>\n                <li><p><strong>search</strong> Free text search.</p></li>\n                <li><p><strong>deep</strong> When set to true, brings the related parent rows in the relatedTables property.</p></li>\n                <li>\n                    <strong>withSelectOptions</strong> When set to true, get a text value collection to load select options according to parent relations.\n                </li>\n            </ul>\n\n\n            <pre>var getListParameters = {\n    pageSize: 5,\n    pageNumber: 1,\n    filter: JSON.stringify([{ fieldName: "Name", operator: "contains", value: "j" }, { fieldName: "Amount", operator: "greaterThan", value: "6" }]),\n    sort: JSON.stringify([{ fieldName: "Name", order: "asc" }]),\n    search: "",\n    deep: false,\n    withSelectOptions: false \n}\nRestangular.all(\'Some table\').getList(getListParameters).then(function (list) {\n    // handle the list\n    }, function (response) {\n    // handle errors\n});\n</pre>\n\n\n            <h3>\n                <a id="user-content-one-item" class="anchor" href="#one-item" aria-hidden="true"><span class="octicon octicon-link"></span></a>One Item\n            </h3>\n\n            <p>Call Restangular with a specific id and with the following parameters to get a specific item:</p>\n\n            <ul class="task-list">\n                <li><p><strong>id</strong> The id is the primary kay value of a table row </p></li>\n                <li><p><strong>deep</strong> When set to true, brings the related parent and child rows</p></li>\n            </ul>\n\n            <pre>\nvar id = 3012;\nvar getParameters = {\n    deep: false\n}\nRestangular.one(\'Some table\', id).get(getParameters).then(function (item) {\n    // handle the item\n    }, function (response) {\n    // handle errors\n})</pre>\n\n            <h3>\n                <a id="user-content-create" class="anchor" href="#create" aria-hidden="true"><span class="octicon octicon-link"></span></a>Create\n            </h3>\n\n            <p>Call Restangular post with a new object to create, with the following parameters:</p>\n\n            <ul class="task-list">\n                <li>\n                    <strong>returnObject</strong> Set this to true when you have server side business rules that causes additional changes to the object. In that case this request will return the created object:\n                </li>\n            </ul>\n\n            <pre>\nvar objectToCreate = {\n    name: "John",\n    Amount: 15\n};\nvar postParameters = {\n    returnObject: true\n};\nRestangular.all(\'Some table\').post(objectToCreate, postParameters).then(function (item) {\n    // handle the item\n    }, function (response) {\n    // handle errors\n});</pre>\n\n            <h3>\n                <a id="user-content-update" class="anchor" href="#update" aria-hidden="true"><span class="octicon octicon-link"></span></a>Update\n            </h3>\n\n            <p>Call Restangular put to update an existing object with the following parameters:</p>\n\n            <ul class="task-list">\n                <li>\n                    <strong>returnObject</strong> Set this to true when you have server side business rules, causing additional changes to the object. In this case the request will return the created object:\n                </li>\n            </ul>\n\n            <pre>\nvar id = 3012;\nvar putParameters = {\n    returnObject: true\n};\n// get an existing item, you can use getList to get an array an well\nRestangular.one(\'Some table\', id).get().then(function (item) {\n    item.Amount = 17;\n    // save the changes\n    item.put(putParameters).then(function (item) {\n    // handle the item\n    }, function (response) {\n    // handle errors\n    });\n    }, function (response) {\n    // handle errors\n});</pre>\n\n            <h3>\n                <a id="user-content-delete" class="anchor" href="#delete" aria-hidden="true"><span class="octicon octicon-link"></span></a>Delete\n            </h3>\n\n            <p>Call Restangular remove to delete an item from a list:</p>\n\n            <pre>\nRestangular.all(\'Some table\').getList().then(function (list) {\n    // delete the last item in the list\n    list[list.length - 1].remove().then(function (response) {\n    // handle success\n    }, function (response) {\n    // handle errors\n    });\n    }, function (response) {\n    // handle errors\n});</pre>\n            </div>\n        </div>\n</div>\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/api_playground/show.html",'<section class="page-form-ele page ng-scope">\n    <div class="panel panel-default">\n        <div class="panel-heading"><strong> REST API playground</strong>\n            <div us-spinner spinner-key="loading" spinner-start-active></div>\n        </div>\n        <div class="panel-body">\n          <div class="row col-sm-12">\n            <section class="panel panel-box">\n            <h5 class="panel-item" style="text-align: left;">\n              With Backand\'s REST API Playground, you simply encapsulate \'CRUD\' functions within objects that represents your database model.<br/>\n              In essence, the objects you create to represent your data in Angular also manipulate that data on the backend.<br/><br/>\n\n              Just select any of the CRUD functionality with any of the advanced parameters to get the endpoints URL you need in Angular.<br/>\n\n              In every section click on \'Try it out!\' to see the JSON result and the endpoint URL.\n\n            </h5>\n            </section>\n          </div>\n          <div class="row col-sm-12" ng-bind-html="play.urlPrefix">\n              <!--<iframe id="restIfrmae" src="//www.modubiz.us:4019/misc/rest-api/index.html?useToken=true#!/Database_Table_Data" style="height:578px;width:1028px;border: none"></iframe>-->\n          </div>\n        </div>\n    </div>\n</section>\n\n')
}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/api_playground/todo.html",'<section class="page-form-ele page ng-scope">\n  <div class="panel panel-default">\n    <div class="panel-heading">\n      <strong test-hook="example.playground.title">Todo list example page</strong>\n  </div>\n\n  <div class="panel-body">\n    <br/>\n\n    <h3>Todo list example app - review the code, play with the live demo and install it locally</h3>\n    <br/>\n      <div class="row">\n        <div class="col-md-7">\n          <div>\n            <ul class="nav nav-tabs"\n                ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}">\n              <li ng-class="{active: todo.activeFile === codeFile}"\n                  ng-repeat="codeFile in todo.codeFiles">\n                <a ng-click="todo.getFile(codeFile)" href="">\n                  {{codeFile.name}}\n                </a>\n              </li>\n            </ul>\n          </div>\n          </div>\n        </div>\n        <div class="row">\n          <div class="col-md-7">\n\n          <div ui-ace=todo.getAceObj()\n               readonly\n               class="form-control ace-example"\n               id="tableTemplate"\n               ng-model="todo.todoHTML"\n               required\n               ng-pattern="codeRegex"\n               style="resize: vertical; ">\n          </div>\n        </div>\n        <div class="row col-md-5">\n\n          <div ng-hide="todo.iframeReady()" class="iframe-substitute" test-hook="example.playground.iframe-substitute">\n            <div >\n              <div class="iframe-substitute-message">Please wait a few minutes while the application is being created.</div><br/><br/>\n              <div us-spinner spinner-key="loading-iframe" us-spinner="{length:10, radius: 10}" style="position: relative;"></div><br/><br/>\n              <div class="iframe-substitute-submessage">You can come back to this page by selecting "Todo Example" under "Docs & API" in the navigation bar.</div>\n            </div>\n          </div>\n\n          <iframe ng-if="todo.iframeReady()"\n                  id="todoIframe" src="//s3.amazonaws.com/todosample.backand.net/index.html"\n                  style="border-width: 1px; border-color: #dddddd; height: 400px; width: 100%;"\n                  seamless="true">\n          </iframe>\n          <br/><br/>\n          <b>1. Download the code:</b> (for more troubleshooting review our <a href="https://github.com/backand/angular-yeoman-todos" target="_blank">github</a>)\n          <pre>\n  git clone https://github.com/backand/angular-yeoman-todos.git\n  cd angular-yeoman-todos</pre>\n          <br/>\n          <b>2. Install dependencies</b>\n          <pre>\n  npm install\n  bower install\n  grunt serve</pre>\n          <p><b>3. Your application is available now at <a href="http://localhost:9000" target="_blank">http://localhost:9000</a></b></p>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/auth/auth.html",'<div ng-include="Auth.template"></div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/auth/auth_landing.html",'<div class="main-container body-wide auth-landing">\n  <div id="content" class="content-container auth-body">\n\n    <div class="page-signin">\n     <a id="page-logo" href="https://www.backand.com" class="ng-binding">\n            <img src="assets/images/logo-white.png"></a>\n\n      <div class="signin-header">\n        <section class="logo text-center">\n            <h1>Create Your Back& Account , it\'s FREE!</h1>\n        </section>\n      </div>\n\n      <div class="signin-body first-signup-block">\n        <div class="container">\n          <div class="form-container signup-container">\n\n            <img class="dragon" src="/assets/images/auth_pages/dragon-signup.png">\n\n            <div class="row">\n              <div class="col-sm-5">\n                <div class="signup-options">\n                  Sign in With\n                  <span class="social-signin-spinner" us-spinner spinner-key="socialSignin"></span>\n                </div>\n                <form class="signup-social">\n\n                  <a class="btn btn-block btn-social"\n                     ng-repeat="social in Auth.socials"\n                     ng-class="\'btn-\' + social.css"\n                     ng-click="Auth.socialLogin(social)" ng-disabled="Auth.flags.authenticating">\n                    <i class="fa" ng-class="\'fa-\' + social.css"></i> {{social.label}}\n                  </a>\n                </form>\n              </div>\n\n              <div class="col-sm-7">\n                <div ng-include="\'views/auth/sign_up_landing.html\'" ng-controller="SignUpController as signup"></div>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class="features-section worry-free">\n        <div class="inner">\n        <div class="title-wrapper">\n            <h2 class="section-section-title">A Worry-Free Sophisticated Backend </h2>\n            <p>We take care of all the server-side heavy-lifting, so you can focus on your application. Backand eliminates the need to deal with hosting, setting up and maintaining servers, auto-scaling and backup and much more.</p>\n          </div>\n          \n\n          <div class="feature-row">\n            <div class="left-col text-col">\n              <div class="feature-title">\n                Server-Side Logic\n\n              </div>\n              <p>\n                Create sophisticated server-side actions in a snap. Triggers and on-demand actions can launch JavaScript code, send emails or execute transactional SQL scripts.\n              </p>\n            </div>\n            <div class="right-col img-col">\n              <img src="/assets/images/auth_pages/server-side-logic.jpg">\n            </div>\n          </div>\n\n           <div class="feature-row">\n            <div class="right-col text-col">\n              <div class="feature-title">\n                Security & User Management\n\n\n              </div>\n              <p>\n               Backand provides a rich set of out-of-the-box security and user management features, including social signup, email verification, role-based security, active directory integration and more.<br>\n                You can easily create role-based and individual user level permissions.\n              </p>\n            </div>\n            <div class="left-col img-col">\n              <img src="/assets/images/auth_pages/security.jpg">\n            </div>\n          </div>\n\n           <div class="feature-row third-party">\n            <div class="left-col text-col">\n              <div class="feature-title">\n               Integration to 3rd-party services\n\n              </div>\n              <p>\n                Want to charge using Paypal or send email through MailChimp? No problem. Backand is pre-integrated with popular 3rd-party systems and provides webhooks so you can integrate your own.\n              </p>\n            </div>\n            <div class="right-col img-col">\n              <ul class="circle-icons">\n                <li class="mandril"></li>\n                <li class="paypal"></li>\n                <li class="stripe"></li>\n              </ul>\n            </div>\n          </div>\n\n\n\n          </div><!--inner-->\n      </div>\n      <!-- /.features-secion worry-free -->\n      <div class="features-section database">\n        <div class="inner">\n          <div class="title-wrapper">\n            <h2 class="section-section-title">All Things Database Made Easy Breezy</h2>\n            \n          </div>\n          \n\n          <div class="feature-row">\n            <div class="left-col text-col">\n              <div class="feature-title">\n               REST API for the Database\n\n              </div>\n              <p>\n               Backand automatically generates a REST API for any database, including MySQL, PostgreSQL, MS SQL Server and Oracle. You can easily create a new database or connect an existing one. Work with JSON models, complex as you like, and let Backand add or edit the data for you.\n\n              </p>\n\n                <div class="feature-title second-item">\n              Advanced Data Models\n\n\n              </div>\n              <p>\n              Backand lets you create sophisticated data models with a single click, including parent-child relationships, many-to-many and other models. You can create or change the database schema using a simple JSON file.\n\n              </p>\n            </div>\n            <div class="right-col img-col">\n              <img src="/assets/images/auth_pages/api.png">\n            </div>\n          </div>\n\n        </div>  \n\n      </div> <!--features section database-->\n\n      <div class="features-section signup">\n        <div class="inner">\n          <div class="title-wrapper">\n            <h2 class="section-section-title">Get Your Free-Forever Account Now!</h2>\n          </div>\n          <div class="signin-body second-signup-block">\n        <div class="container">\n          <div class="form-container signup-container">\n\n         \n\n            <div class="row">\n              <div class="col-sm-5">\n                <div class="signup-options">\n                  <h3>Sign in With</h3>\n                  <span class="social-signin-spinner" us-spinner spinner-key="socialSignin"></span>\n                </div>\n                <form class="signup-social">\n\n                  <a class="btn btn-block btn-social"\n                     ng-repeat="social in Auth.socials"\n                     ng-class="\'btn-\' + social.css"\n                     ng-click="Auth.socialLogin(social)" ng-disabled="Auth.flags.authenticating">\n                    <i class="fa" ng-class="\'fa-\' + social.css"></i> {{social.label}}\n                  </a>\n                </form>\n              </div>\n\n              <div class="col-sm-7">\n                <div ng-include="\'views/auth/sign_up_landing.html\'" ng-controller="SignUpController as signup"></div>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n        </div><!--innner->\n\n      </div><!--features section signup-->\n      \n\n    </div>\n  </div>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/auth/auth_regular.html",'<div class="main-container body-wide">\n  <div id="content" class="content-container auth-body">\n\n    <div class="page-signin">\n\n      <div class="signin-header">\n        <section class="logo text-center">\n          <a href="https://www.backand.com" class="ng-binding">\n            <img src="assets/images/logo-white.png"></a>\n\n        </section>\n      </div>\n\n      <div class="signin-body">\n        <div class="container">\n          <div class="form-container signup-container">\n\n            <img class="dragon" src="/assets/images/auth_pages/dragon-signup.png">\n\n            <div class="row">\n              <div class="col-sm-5">\n                <div class="signup-options">\n                  Sign in With\n                  <span class="social-signin-spinner" us-spinner spinner-key="socialSignin"></span>\n                </div>\n                <form class="signup-social">\n\n                  <a class="btn btn-block btn-social"\n                     ng-repeat="social in Auth.socials"\n                     ng-class="\'btn-\' + social.css"\n                     ng-click="Auth.socialLogin(social)" ng-disabled="Auth.flags.authenticating">\n                    <i class="fa" ng-class="\'fa-\' + social.css"></i> {{social.label}}\n                  </a>\n                </form>\n              </div>\n\n              <div class="col-sm-7">\n                <div ui-view>\n                </div>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/auth/change_password.html",'<div class="modal-header">\n  <h3 class="modal-title">Change Password</h3>\n</div>\n\n<form novalidate name="ChangePasswordForm">\n\n  <div class="modal-body clearfix">\n\n    <div class="form-group col-lg-12 col-md-12 col-sm-12">\n      <label>Old Password</label>\n      <input type="password"\n             name="oldPassword"\n             class="form-control"\n             ng-model="ChangePassword.userData.oldPassword"\n             ng-model-options="{debounce:{default:400}}"\n             ng-minlength="6"\n             ng-maxlength="20"\n             required\n             autofocus>\n    </div>\n\n    <div class="form-group col-lg-12 col-md-12 col-sm-12">\n      <label>New Password</label>\n      <input type="password"\n             name="newPassword"\n             class="form-control"\n             ng-model="ChangePassword.userData.newPassword"\n             ng-model-options="{debounce:{default:400}}"\n             ng-minlength="6"\n             ng-maxlength="20"\n             required\n             autofocus>\n      <div class="text-danger" ng-show="ChangePasswordForm.newPassword.$error.minlength">\n        Password must be at least 6 characters\n      </div>\n      <div class="text-danger" ng-show="ChangePasswordForm.newPassword.$error.email">\n        This is not a valid password\n      </div>\n    </div>\n\n    <div class="form-group col-lg-12 col-md-12 col-sm-12">\n      <label>Confirm Password</label>\n      <input type="password"\n             name="confirm_password"\n             class="form-control"\n             ng-model="ChangePassword.confirmPassword"\n             ng-model-options="{debounce:{default:400}}"\n             ba-match="ChangePassword.userData.newPassword"\n             required>\n      <div class="text-danger" ng-show="ChangePasswordForm.confirm_password.$error.match">\n        Please re-enter the same password as above\n      </div>\n    </div>\n  </div>\n\n  <div class="modal-footer">\n    <button class="btn btn-primary" type="submit" ng-click="ChangePassword.changePassword()" ng-disabled="ChangePasswordForm.$invalid">Change Password</button>\n    <button class="btn btn-default" ng-click="ChangePassword.cancelChangePassword()">Cancel</button>\n  </div>\n</form>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/auth/forgot_modal.html",'<div class="modal-content" >\n  <div class="modal-header">\n    <h3 class="modal-title">Forgot password</h3>\n  </div>\n  <div class="modal-body">\n    <ng-form name="forgotDialog" novalidate role="form">\n      <div class="form-group input-group-lg"><label\n        class="control-label">Username:</label>\n        <input type="email"\n               class="form-control"\n               name="uEmail"\n               ng-model="forgot.email"\n               ng-model-options="{debounce: 500}"\n               placeholder = "Enter your Email"\n               required>\n      </div>\n      <div class="text-danger" ng-show="forgotDialog.uEmail.$error.email">This is not a valid email</div>\n    </ng-form>\n  </div>\n  <div class="modal-footer">\n    <button class="btn btn-primary" ladda="forgot.loading" data-style="expand-right" ng-click="forgot.ok()" ng-disabled="forgotDialog.$invalid">OK</button>\n    <button class="btn btn-default" ng-click="forgot.cancel()">Cancel</button>\n  </div>\n</div>\n\n\n\n\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/auth/reset_password.html",'<div class="main-container body-wide body-auth">\n  <div id="content" class="content-container">\n    <div class="page-signin">\n      <div class="signin-header">\n        <section class="logo text-center">\n          <h1>Reset Password</h1>\n        </section>\n      </div>\n\n      <div class="signin-body">\n        <div class="container">\n          <div class="form-container">\n\n            <form class="form-horizontal" name="form" ng-submit="change.submit()">\n              <fieldset>\n                <div class="form-group">\n                  <div class="input-group">\n                                <span class="input-group-addon">\n                                    <span class="ti-lock"></span>\n                                </span>\n                    <input type="password"\n                           class="form-control input-lg"\n                           placeholder="Password"\n                           name="Upassword"\n                           ng-model="change.password"\n                           ng-model-options="{debounce: 500}"\n                           ng-minlength="6"\n                           ng-maxlength="20"\n                           required>\n                  </div>\n                  <div class="text-danger" ng-show="form.Upassword.$error.minlength">\n                    Password must be at least 6 characters\n                  </div>\n                  <div class="text-danger" ng-show="form.Upassword.$error.email">This is not a valid password.</div>\n                </div>\n\n\n                <div class="form-group">\n                  <div class="input-group">\n                                <span class="input-group-addon">\n                                    <span class="ti-lock"></span>\n                                </span>\n                    <input type="password"\n                           class="form-control input-lg"\n                           placeholder="Re-type Password"\n                           name="confirm_password"\n                           ba-match="change.password"\n                           ng-model="change.repassword"\n                           ng-model-options="{debounce: 500}"\n                           required>\n                  </div>\n\n                  <div class="text-danger" ng-show="form.confirm_password.$error.match">Please re-enter the same\n                    password as above\n                  </div>\n                </div>\n                <div class="divider divider-xl"></div>\n                <div class="form-group">\n                  <button type="submit" ng-disabled="form.$invalid"\n                          class="btn btn-primary btn-lg btn-block text-center"\n                          ladda="change.loading" data-style="expand-right">\n                    RESET\n                  </button>\n                </div>\n              </fieldset>\n            </form>\n            <div class="divider"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/auth/sign_in.html",'<div class="signup-options signup-options-email">\n  Sign in using your email address\n</div>\n\n<div class="signup-email">\n<div ng-show="signin.error" class="alert alert-danger auth-alert">\n  <img src="assets/images/auth_pages/warning.png">{{signin.error}}</div>\n  <form class="form-horizontal" name="form" ng-submit="signin.signIn()" novalidate>\n    <fieldset>\n      <div class="form-group">\n        <div class="input-group input-group-first">\n                <span class="input-group-addon">\n                  <span class="ti-email"></span>\n                </span>\n          <input type="email"\n                 class="form-control input-lg"\n                 name="uEmail"\n                 placeholder="Email (Username)"\n                 test-hook="signin.username"\n                 ng-model="signin.userName"\n                 ng-model-options="{updateOn: \'blur\'}"\n                 ng-focus="emailInput.focus = true"\n                 ng-blur="emailInput.focus = false"\n                 required>\n        </div>\n        <div class="text-danger" ng-show="form.uEmail.$error.email && emailInput.focus === false">\n          This is not a valid email.\n        </div>\n\n      </div>\n      <div class="form-group">\n        <div class="input-group">\n                <span class="input-group-addon">\n                  <span class="ti-lock"></span>\n                </span>\n          <input type="password"\n                 class="form-control input-lg"\n                 placeholder="Password"\n                 test-hook="signin.password"\n                 name="uPassword"\n                 ng-model="signin.userPassword"\n                 ng-model-options="{debounce: 500}"\n                 required>\n        </div>\n        <div class="text-danger" ng-show="form.uPassword.$error.email">\n          This is not a valid Password.\n        </div>\n      </div>\n      <br/>\n\n      <div class="text-right text-danger">\n        <a ng-click="signin.flags.authenticating ? null : signin.open()" href="">Forgot your password?</a>\n      </div>\n      <div class="divider divider-xl"></div>\n      <div class="form-group">\n        <button type="submit"\n                class="auth-button btn btn-lg"\n                test-hook="signin.login"\n                ng-disabled="signin.flags.authenticating"\n                ladda="signin.loading" data-style="expand-right">\n          Sign in\n        </button>\n      </div>\n    </fieldset>\n  </form>\n  <div class="divider"></div>\n  <section class="additional-info">\n    <p class="text-center">\n      <span>Don\'t have an account? </span>\n      <strong><a ui-sref="sign_up" ui-sref-opts="{reload:true}">Sign up</a></strong>\n    </p>\n  </section>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/auth/sign_in.tpl.html",'<div class="main-container body-wide body-auth">\n  <div id="content" class="content-container">\n\n    <div class="page-signin" ng-class="{\'dumbBoxOverlay\': sign.modalOn}" >\n\n      <div class="signin-header">\n        <section class="logo text-center">\n          <h1><a href="https://www.backand.com" class="ng-binding">\n            <img src="assets/images/logo-white.png"></a>\n          </h1>\n        </section>\n      </div>\n\n      <div class="signin-body">\n        <div class="container">\n          <div class="form-container">\n\n            <form class="form-horizontal" name="form" ng-submit="sign.signIn()" >\n              <fieldset>\n                <div class="form-group">\n                  <div class="input-group input-group-first">\n                <span class="input-group-addon">\n                  <span class="ti-email"></span>\n                </span>\n                    <input type="email"\n                           class="form-control input-lg"\n                           name = "uEmail"\n                           placeholder="Email (Username)"\n                           test-hook="signin.username"\n                           ng-model="sign.userName"\n                           ng-model-options="{updateOn: \'blur\'}"\n                           ng-focus="emailInput.focus = true"\n                           ng-blur="emailInput.focus = false"\n                           required>\n                  </div>\n                  <div class="text-danger" ng-show="form.uEmail.$error.email && emailInput.focus === false">\n                    This is not a valid email.\n                  </div>\n\n                </div>\n                <div class="form-group">\n                  <div class="input-group">\n                <span class="input-group-addon">\n                  <span class="ti-lock"></span>\n                </span>\n                    <input type="password"\n                           class="form-control input-lg"\n                           placeholder="Password"\n                           test-hook="signin.password"\n                           name = "uPassword"\n                           ng-model = "sign.userPassword"\n                           ng-model-options="{debounce: 500}"\n                           required>\n                  </div>\n                  <div class="text-danger" ng-show="form.uPassword.$error.email">\n                    This is not a valid Password.\n                  </div>\n                </div>\n                <br/>\n                <div class="text-right additional-info">\n                  <a ng-click="sign.open()" href="">Forgot your password?</a>\n                </div>\n                <div class="divider divider-xl"></div>\n                <div class="form-group">\n                  <button type="submit"\n                          class="blue-button btn btn-lg"\n                          test-hook="signin.login"\n                          ladda="sign.loading" data-style="expand-right">\n                    Log in\n                  </button>\n                </div>\n              </fieldset>\n            </form>\n            <div ng-show="sign.error" class="alert alert-danger">{{sign.error}}</div>\n            <div class="divider"></div>\n            <section class="additional-info">\n              <p class="text-center">\n                <span>Don\'t have an account? </span>\n                <strong><a ui-sref="sign_up">Sign up</a></strong>\n              </p>\n            </section>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/auth/sign_up.html",'<div class="signup-options signup-options-email">\n  Sign up using your email address\n</div>\n\n<div class="signup-email">\n  <form class="form-horizontal text-center ng-pristine ng-valid"\n        name="form"\n        ng-submit="signup.signUp()">\n    <fieldset>\n      <div class="form-group">\n        <div class="input-group input-group-first">\n                                <span class="input-group-addon">\n                                    <span class="ti-user"></span>\n                                </span>\n          <input type="text"\n                 class="form-control input-lg"\n                 placeholder="Full Name"\n                 name="uFullFirst"\n                 test-hook="signup.name"\n                 ng-model="signup.fullName"\n                 ng-model-options="{debounce: 300}"\n                 required>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <div class="input-group">\n                                <span class="input-group-addon">\n                                    <span class="ti-email"></span>\n                                </span>\n          <input type="email"\n                 class="form-control input-lg"\n                 placeholder="Email (Username)"\n                 name="uEmail"\n                 test-hook="signup.email"\n                 ng-model="signup.email"\n                 ng-model-options="{updateOn: \'blur\'}"\n                 ng-focus="emailInput.focus = true"\n                 ng-blur="emailInput.focus = false"\n                 required>\n\n        </div>\n        <div class="text-danger" ng-show="form.uEmail.$error.email && emailInput.focus === false">\n          This is not a valid email\n        </div>\n      </div>\n\n\n      <div class="form-group">\n        <div class="input-group">\n                                <span class="input-group-addon">\n                                    <span class="ti-lock"></span>\n                                </span>\n          <input type="password"\n                 class="form-control input-lg"\n                 placeholder="Password"\n                 name="Upassword"\n                 test-hook="signup.password"\n                 ng-model="signup.password"\n                 ng-model-options="{debounce: 300}"\n                 ng-minlength="6"\n                 ng-maxlength="20"\n                 required>\n        </div>\n        <div class="text-danger" ng-show="form.Upassword.$error.minlength">\n          Password must be at least 6 characters\n        </div>\n        <div class="text-danger" ng-show="form.Upassword.$error.email">\n          This is not a valid password\n        </div>\n      </div>\n\n\n      <div class="form-group">\n        <div class="input-group">\n                                <span class="input-group-addon">\n                                    <span class="ti-lock"></span>\n                                </span>\n          <input type="password"\n                 class="form-control input-lg"\n                 placeholder="Re-type Password"\n                 name="confirm_password"\n                 test-hook="signup.password-confirm"\n                 ba-match="signup.password"\n                 ng-model="signup.repassword"\n                 ng-model-options="{debounce: 300}"\n                 required>\n        </div>\n\n        <div class="text-danger" ng-show="form.confirm_password.$error.match">\n          Please re-enter the same password as above\n        </div>\n      </div>\n\n      <div class="divider divider-lg"></div>\n      <div class="form-group">\n\n        <p class="additional-info text-vsmall">\n          By clicking Sign up, you agree to Backand&apos;s\n          <a href="https://www.backand.com/terms-of-use" target="_blank">Terms of Service</a> and\n          <a href="https://www.backand.com/privacy-policy" target="_blank">Privacy Policy</a>\n        </p>\n\n        <div class="divider"></div>\n        <button type="submit"\n                ng-disabled="form.$invalid || signup.flags.authenticating"\n                test-hook="signup.signup"\n                class="auth-button btn btn-lg"\n                ladda="signup.loading" data-style="expand-right">Sign up\n        </button>\n      </div>\n      <div ng-show="signup.error" class="alert alert-danger">{{signup.error}}</div>\n    </fieldset>\n  </form>\n\n  <div class="divider"></div>\n  <section class="additional-info">\n    <p class="text-center">\n      <span>Already signed up?</span>\n      <strong><a ui-sref="sign_in">Log in now</a></strong>\n    </p>\n  </section>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/auth/sign_up_landing.html",'<div class="signup-options signup-options-email">\n  <h3>Sign up using your email address</h3>\n</div>\n\n<div class="signup-email">\n  <form class="form-horizontal text-center ng-pristine ng-valid"\n        name="form"\n        ng-submit="signup.signUp()">\n    <fieldset>\n      <div class="form-group">\n        <div class="input-group input-group-first">\n                                <span class="input-group-addon">\n                                    <span class="ti-user"></span>\n                                </span>\n          <input type="text"\n                 class="form-control input-lg"\n                 placeholder="Full Name"\n                 name="uFullFirst"\n                 test-hook="signup.name"\n                 ng-model="signup.fullName"\n                 ng-model-options="{debounce: 300}"\n                 required>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <div class="input-group">\n                                <span class="input-group-addon">\n                                    <span class="ti-email"></span>\n                                </span>\n          <input type="email"\n                 class="form-control input-lg"\n                 placeholder="Email (Username)"\n                 name="uEmail"\n                 test-hook="signup.email"\n                 ng-model="signup.email"\n                 ng-model-options="{updateOn: \'blur\'}"\n                 ng-focus="emailInput.focus = true"\n                 ng-blur="emailInput.focus = false"\n                 required>\n\n        </div>\n        <div class="text-danger" ng-show="form.uEmail.$error.email && emailInput.focus === false">\n          This is not a valid email\n        </div>\n      </div>\n\n\n      <div class="form-group">\n        <div class="input-group">\n                                <span class="input-group-addon">\n                                    <span class="ti-lock"></span>\n                                </span>\n          <input type="password"\n                 class="form-control input-lg"\n                 placeholder="Password"\n                 name="Upassword"\n                 test-hook="signup.password"\n                 ng-model="signup.password"\n                 ng-model-options="{debounce: 300}"\n                 ng-minlength="6"\n                 ng-maxlength="20"\n                 required>\n        </div>\n        <div class="text-danger" ng-show="form.Upassword.$error.minlength">\n          Password must be at least 6 characters\n        </div>\n        <div class="text-danger" ng-show="form.Upassword.$error.email">\n          This is not a valid password\n        </div>\n      </div>\n\n\n      <div class="form-group">\n        <div class="input-group">\n                                <span class="input-group-addon">\n                                    <span class="ti-lock"></span>\n                                </span>\n          <input type="password"\n                 class="form-control input-lg"\n                 placeholder="Re-type Password"\n                 name="confirm_password"\n                 test-hook="signup.password-confirm"\n                 ba-match="signup.password"\n                 ng-model="signup.repassword"\n                 ng-model-options="{debounce: 300}"\n                 required>\n        </div>\n\n        <div class="text-danger" ng-show="form.confirm_password.$error.match">\n          Please re-enter the same password as above\n        </div>\n      </div>\n\n      <div class="divider divider-lg"></div>\n      <div class="form-group">\n\n        <p class="additional-info text-vsmall">\n          By clicking Sign up, you agree to Backand&apos;s\n          <a href="https://www.backand.com/terms-of-use" target="_blank">Terms of Service</a> and\n          <a href="https://www.backand.com/privacy-policy" target="_blank">Privacy Policy</a>\n        </p>\n\n        <div class="divider"></div>\n        <button type="submit"\n                ng-disabled="form.$invalid || signup.flags.authenticating"\n                test-hook="signup.signup"\n                class="auth-button btn btn-lg"\n                ladda="signup.loading" data-style="expand-right">Get Free-Forever Account\n        </button>\n      </div>\n      <div ng-show="signup.error" class="alert alert-danger">{{signup.error}}</div>\n    </fieldset>\n  </form>\n\n  <div class="divider"></div>\n  <section class="additional-info">\n    <p class="text-center">\n      <span>Already signed up?</span>\n      <strong><a ui-sref="sign_in" ui-sref-opts="{reload:true}">Log in now</a></strong>\n    </p>\n  </section>\n</div>\n')
}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/backoffice/code.html",'<section class="page-form-ele page ng-scope">\n    <div class="panel panel-default">\n        <div class="panel-heading"><strong>Code Example</strong></div>\n        <div class="panel-body">\n            <div class="row col-sm-10 col-sm-offset-1">\n                <iframe src="https://www.backand.com/demo/index.html#/overview" style="height:4200px;width:790px;border: none"></iframe>\n            </div>\n        </div>\n    </div>\n</section>\n\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/backoffice/customize.html",'<section class="page-form-ele page ng-scope">\n    <div class="panel panel-default">\n        <div class="panel-heading"><strong> Back Office Customization</strong></div>\n        <div class="panel-body">\n            <div class="row col-sm-10 col-sm-offset-1">\n                <h1>Customization</h1>\n                <p>\n                    To get started with customization you can simply clone the angularbknd repository and install the dependencies:\n                    <br/><br />\n                    Clone the angularbknd repository using <a href="http://git-scm.com/" target="_blank">git</a>:\n                            <b>\n                    <pre>git clone https://github.com/backand/angularbknd\ncd angularbknd</pre></b>\n                </p>\n                <div style="padding-left: 12px; margin-top: -10px;"><span class="label label-info" style="float: right;font-size:13px;"><a class="" href="https://github.com/backand/angularbknd#prerequisites" target="_blank" style="color: #fff; ">Troubleshooting</a></span></div>\n                </p><br/>\n                <p><b>You can stop here and work with our CDN files.</b> If you would like to have the full installation locally please continue...</p>\n\n                <h2>Dependencies</h2>\n                <p>\n                    <a href="http://nodejs.org/download/" target="_blank">node.js</a> - As Backand uses a number of node.js tools to initialize and test angularbknd,<br/>\n                    you must have node.js and its package manager (<a href="https://www.npmjs.org/" target="_blank">npm</a>) installed.\n                </p>\n                <p>\n                    <a href="http://bower.io/" target="_blank">bower</a> - A client-side code package manager that is needed to get all the included JS code.\n                </p>\n                <p>\n                    We have preconfigured <b>npm</b> to automatically run <b>bower</b> so you can simply do\n                            <b>\n                <pre>npm install</pre></b>\n                </p>\n                <div style="padding-left: 12px; margin-top: -10px;"><span class="label label-info" style="float: right;font-size:13px;"><a class="" href="https://github.com/backand/angularbknd#install-dependencies" target="_blank" style="color: #fff; ">Troubleshooting</a></span></div>\n                <br />\n                </p>\n                <h1>Run the Application</h1>\n                <p>\n                    We have preconfigured the project with a Backand REST API on a simple development web server.  For Windows users use your local IIS server.<br/>\n                    The simplest way to start is:\n                <b><pre>npm start</pre></b>\n                </p>\n            </div>\n        </div>\n    </div>\n</section>\n\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/backoffice/template.html",'\n<section class="page-form-ele page ng-scope">\n  <div class="panel panel-default">\n    <div class="panel-heading"><strong>select back office template</strong></div>\n    <div class="panel-body">\n      <div class="row col-sm-10 col-sm-offset-1">\n        <div class=\'col-sm-5\' ng-repeat="template in backT.templates">\n          <div class="thumbnail themer" ng-class="{\'template-border\' : template.Id === template.templateId }">\n            <h4>{{template.label}}</h4>\n            <img ng-src="{{template.imgSrc}}">\n            <div>\n              <div class="divider divider-sm pull-in"></div>\n              <p>\n                <button ng-click="backT.updateTemplate(template.Id)" class="btn btn-primary" ng-disabled="template.Id === backT.templateId" role="button">Select</button>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/database/edit.html",'<section class="page-form-ele page ng-scope">\n\n  <section class="panel panel-default">\n    <div class="panel-heading">\n      <strong test-hook="database-edit.title"> {{dbedit.appName}} - database configuration</strong>\n\n      <div us-spinner spinner-key="loading" spinner-start-active></div>\n    </div>\n    <div class="panel-body">\n      <div class="row" ng-if="dbedit.databaseStatus === 0">\n        <div class="col-xs-10">\n          <div class="db-panel-body-explanation">\n            <h3>Let\'s start by setting up the app\'s database</h3>\n            <h4>\n              <p>Create hosted MySQL database using JSON model\n              Or connect to an existing cloud database (Bring Your Own Database)</p>\n            </h4>\n          </div>\n        </div>\n      </div>\n\n      <br/>\n\n\n      <tabset justified="true" class="ui-tab ui-tab-horizontal ui-tab-container">\n        <tab heading="New Hosted Database"\n             ng-if="dbedit.databaseStatus === 0"\n             ng-click="dbedit.dataName = \'newMysql\'">\n            <div ng-include="\'views/database/new_data/new_source.html\'"></div>\n        </tab>\n        <tab heading="Connect to Existing Database"\n             ng-if="dbedit.databaseStatus != null"\n             ng-click="dbedit.dataName = \'mysql\'">\n          <ng-include src="\'views/database/exs_data/exs_source.html\'"></ng-include>\n        </tab>\n      </tabset>\n    </div>\n\n  </section>\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/database/show.html",'<section class="page-form-ele page ng-scope">\n  <section class="panel panel-default">\n    <div class="panel-heading">\n      <strong> Database Information</strong>\n      <div us-spinner spinner-key="loading" spinner-start-active></div>\n    </div>\n    <div class="panel-body data" id="database-info-panel">\n      <div class="row">\n        <div class="list-unstyled row"><br/></div>\n        <div class="row">\n            <div class="left-col">\n\n\n\n              <form class="form-horizontal ng-pristine ng-valid" role="form" ng-submit="dbshow.sumbitForm()">\n\n                  <div class="form-group">\n                      <label for="server" class="col-sm-3 control-label">Database Type:</label>\n                      <div class="col-sm-9">\n                          <div class="form-control-static" id="dbtype" placeholder="" >{{dbshow.data.databaseName}}</div>\n                      </div>\n                  </div>\n\n                  <div class="form-group">\n                  <label for="server" class="col-sm-3 control-label">Endpoint:</label>\n                  <div class="col-sm-9">\n                    <div class="form-control-static" id="server" placeholder="" >{{dbshow.data.server}}</div>\n                  </div>\n                </div>\n\n                <div class="form-group">\n                  <label for="database" class="col-sm-3 control-label">Database name:</label>\n                  <div class="col-sm-9">\n                    <div  class="form-control-static" id="database" placeholder="" >{{dbshow.data.database}}</div>\n                  </div>\n                </div>\n\n                <div class="form-group">\n                  <label for="UserName" class="col-sm-3 control-label">Username:</label>\n                  <div class="col-sm-9">\n                    <div class="form-control-static" id="UserName" placeholder="" >{{dbshow.data.username}}</div>\n                  </div>\n                </div>\n                <div class="form-group">\n                  <label  class="col-sm-3 control-label">Password:</label>\n                  <div class="col-sm-9">\n                    <div ng-show="dbshow.data.password" type="text" class="form-control-static">{{dbshow.data.password}}</div>\n                    <div class="form-control-static"><a ng-hide="dbshow.data.password" href="" ng-click="dbshow.getPassword()">Get password</a></div></div>\n                </div>\n\n                <div ng-switch on="dbshow.data.databaseName">\n                  <div class="form-group" ng-switch-when=\'mysql\'>\n                  <label for="usessh" class="col-sm-3 control-label">Use SSH:</label>\n                    <div class="col-sm-9">\n                        <div class="form-control-static" id="usessh">{{dbshow.data.usingSsh}}</div>\n                    </div>\n                  </div>\n\n                  <div class="form-group" ng-switch-when=\'postgresql\'>\n                      <label for="usessl" class="col-sm-3 control-label">Use SSL:</label>\n                      <div class="col-sm-9">\n                        <div class="form-control-static" id="usessl" >{{dbshow.data.usingSsl}}</div>\n                      </div>\n                  </div>\n                </div>\n\n\n                <div ng-if="dbedit.data.usingSsh === true">\n\n                  <div class="divider divider-dashed divider-lg pull-in"></div>\n\n                  <div class="form-group" >\n                    <label  class="col-sm-3 control-label">SSH Remote Host</label>\n\n                    <div class="col-sm-9">\n                      <div class="form-control" > {{dbshow.data.sshRemoteHost}}</div>\n                    </div>\n                  </div>\n\n                  <div class="form-group" >\n                    <label  class="col-sm-3 control-label">SSH User Name</label>\n\n                    <div class="col-sm-9">\n                      <div class="form-control" > {{dbshow.data.sshUser}}</div>\n                    </div>\n                  </div>\n\n                  <div class="form-group" >\n                    <label  class="col-sm-3 control-label">SSH Port</label>\n\n                    <div class="col-sm-9">\n                      <div class="form-control" > {{dbshow.data.sshPort}}</div>\n                    </div>\n                  </div>\n\n                    <label for="sshPassword" class="col-sm-3 control-label">SSH Password</label>\n                    <div class="col-sm-9">\n                      <input type="text" class="form-control" ng-model="dbedit.data.sshPassword" ng-disabled="dbedit.data.sshPassword"\n                             id="sshPassword" placeholder="" required>\n                    </div>\n\n                    <label for="sshPrivateKey" class="col-sm-3 control-label">SSH Private Key</label>\n                    <div class="col-sm-9">\n                      <input type="password" class="form-control" ng-model="dbedit.data.sshPrivateKey" ng-disabled="dbedit.data.sshPrivateKey"\n                             id="sshPrivateKey" placeholder="" required>\n                    </div>\n                </div>\n\n                <div class="form-group">\n                <div class="col-sm-offset-2 col-sm-10">\n                    <br/>\n                <button class="btn btn-success btn-lg btn-w-lg" ng-if="dbshow.displayButton()" ng-click="dbshow.edit()">Edit Database Connection</button>\n                </div>\n                </div>\n              </form>\n\n\n            </div>\n\n            <div class="right-col" ng-if="!dbshow.isLocal">\n             <h4><i class="ti-comment-alt"></i>  <strong> Database Admin</strong></h4>\n                    <p>To make changes to your database\'s schema (such as adding tables or columns), use one of the following tools:<br/>\n                    <ul>\n                        <li><a href="//www.mysql.com/products/workbench" target="_blank">Workbench</a></li>\n                        <li><a href="//www.phpmyadmin.net/home_page/index.php" target="_blank">phpMyAdmin</a></li>\n                        <li><a href="//www.sequelpro.com/" target="_blank">Sequel Pro</a></li>\n                        <li><a href="//www.heidisql.com/" target="_blank">HeidiSQL</a></li>\n                    </ul>\n                    <br/>In order to sync your database schema changes into Backand, go to <b>Objects</b> and click <b>Sync with Database</b>.\n                    <!--<br/><br/>>> To populate data into your database use our <a href="http://{{dbshow.appName}}.backand.net" target="_blank">Back Office</a>-->\n                    <!--<br/>Go to <a ng-click="dbshow.sync(0)" href="">Database Table</a> and click <button type="button" class="btn btn-w-md btn-gap-v btn-round btn-primary" ng-click="dbshow.sync(1)">Sync Tables</button>-->\n                    <!--after you update your schema to sync your changes into Backand.-->\n                    </p>\n          </div>\n          <div class="right-col" ng-if="dbshow.isLocal">\n            <h4><i class="ti-comment-alt"></i>  <strong> Database Admin</strong></h4>\n            <p>\n            To make changes to your database\'s schema (such as adding tables or columns) use only the JSON Model under the Objects menu.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</section>\n\n\n\n\n\n\n\n\n\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/database/todo_example.html",'<section class="page-form-ele page ng-scope">\n\n  <section class="panel panel-default">\n    <div class="panel-heading">\n      <strong test-hook="example.database.title"> Todo list App Example</strong>\n\n      <div us-spinner spinner-key="loading" spinner-start-active></div>\n    </div>\n    <div class="panel-body">\n      <div class="panel-body-explanation">\n        <h4>The to-do list example app is almost ready, just click "Build" to complete the process.<br/> After the app is ready you can review the code, download it and play with the live demo.</h4>\n      </div>\n      <hr/>\n      <br/>\n\n      <div class="row" style="padding: 3%">\n        <div class="col-md-6">\n\n\n          <div class="row">\n            <a class="icon-box col-xs-5 col-sm-4 col-md-3">\n              <div class="icon-container active">\n                <img src="assets/images/mysql.png" style="vertical-align: inherit;"/>\n              </div>\n            </a>\n\n            <h3 class="col-xs-7" style="padding-top: 35px; padding-left: 30px;">Todo List<br/>Sample App</h3>\n          </div>\n\n          <br/>\n\n          <div class="panel-body-description">\n            <p>The todo list sample app include a dedicated MySQL database just for you</p>\n          </div>\n          <br/>\n\n          <div class="form-group">\n            <button type="submit" ng-disabled="form.$invalid" class="btn btn-success btn-lg btn-w-lg"\n                    ladda="dbtodo.loading" data-style="expand-right"\n                    ng-click="dbtodo.create()"\n              test-hook="example.database.connect">Build\n            </button>\n            <br/>\n          </div>\n\n        </div>\n\n        <div class="col-md-6">\n          <div class="ace-title">Todo list database model</div>\n          <div\n            ui-ace="{onLoad : ace.onLoad, theme:\'monokai\', mode: \'json\', firstLineNumber: 1, rendererOptions: { fontSize: 15 } }"\n            class="form-control ace-rule"\n            readonly\n            name="tableTemplate"\n            id="tableTemplate"\n            ng-model="dbtodo.generatorCode"\n            required\n            ng-pattern="codeRegex"\n            style="resize: vertical; ">\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/db_queries/query.html",'<section class="page-form-ele page database-query-section">\n  <section class="panel panel-default">\n    <div class="panel-heading">\n      <strong style="text-transform:none"> Query - {{DbQuery.query.name}}</strong>\n      <span ng-show="!DbQuery.new">\n        <a href="javascript:;"\n           class="btn btn-lg pull-right"\n           style="margin-top: -10px;"\n           ng-click="DbQuery.deleteQuery()">\n          <i class="ti-trash"></i></a>\n        <!--<button class="btn btn-sm btn-primary pull-right" style="margin-top: -5px;" ng-click="DbQuery.duplicateQuery()">Duplicate</button>-->\n      </span>\n\n    </div>\n    <div class="panel-body database-query-panel">\n      <div class="row">\n        <div class="left-col">\n\n          <form role="form" ng-submit="DbQuery.saveQuery()" name="DbQuery.queryForm" novalidate>\n            <fieldset ng-disabled="!DbQuery.editMode">\n              <div class="form-group">\n                <label for="name">Query Name</label>\n                <input type="text" class="form-control" id="name" name="name" ng-model="DbQuery.query.name" required\n                       ng-pattern="DbQuery.namePattern" placeholder="name your query">\n\n                <div ng-show="DbQuery.queryForm.name.$error.pattern" class="input-error">no spaces or %$#@^&* allowed\n                </div>\n              </div>\n              <div class="form-group">\n                <label for="params">Input Parameters</label>\n                <input type="text"\n                       class="form-control"\n                       id="params"\n                       name="params"\n                       ng-model="DbQuery.query.parameters"\n                       placeholder="input1, input2,....">\n              </div>\n            </fieldset>\n\n              <div class="ui-tab-container ui-tab-horizontal">\n                <div justified="false" class="ui-tab">\n                  <ul class="nav nav-tabs" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}">\n\n                    <div class="pull-right db-query-anchor" ng-show="DbQuery.editMode">\n                      <span class="ti-anchor" style="cursor: pointer;font-size:20px;"\n                            ng-click="DbQuery.toggleParametersModal()"></span>\n                    </div>\n                    <div class="pull-right db-query-anchor" ng-show="DbQuery.mode === \'nosql\'">\n                      <ba-help-link key="nosqlQuery" with-text="false"></ba-help-link>\n                    </div>\n\n                  <li ng-class="{active: DbQuery.mode === \'nosql\'}">\n                    <a ng-click="DbQuery.mode = \'nosql\'" class="ng-binding">NoSQL</a>\n                  </li>\n                  <li ng-class="{active: DbQuery.mode === \'sql\'}">\n                    <a ng-click="DbQuery.changeModeToSql()" class="ng-binding">SQL</a>\n                  </li>\n                </ul>\n\n                <div class="tab-content">\n\n                  <bknd-ace-features editor="DbQuery.ace.editors[DbQuery.mode]" nesting-form="DbQuery.queryForm">\n                    <div ng-show="DbQuery.mode === \'nosql\'"\n                         ui-ace="{onLoad : DbQuery.ace.onLoad, theme:\'monokai\', mode: \'json\', rendererOptions: { fontSize: 15 } }"\n                         type="text"\n                         class="form-control no-show-hide-animation"\n                         id="nosql"\n                         ng-model="DbQuery.query.noSQL"\n                         rows="10"\n                         ng-readonly="!DbQuery.editMode">\n                    </div>\n\n                    <div ng-show="DbQuery.mode === \'sql\'"\n                         ui-ace="{onLoad : DbQuery.ace.onLoad, theme:\'dawn\', mode: DbQuery.dbType}"\n                         type="text"\n                         class="form-control no-show-hide-animation"\n                         id="sql"\n                         ng-model="DbQuery.query.sQL"\n                         rows="10"\n                         ng-readonly="!DbQuery.editMode" ng-change="DbQuery.onEditSql()">\n                    </div>\n                  </bknd-ace-features>\n\n                </div>\n              </div>\n            </div>\n\n            <fieldset ng-disabled="!DbQuery.editMode">\n\n              <div class="form-group" ng-if="DbQuery.editMode">\n                <div class="row security-header">\n                  <div class="col-lg-4">\n                    <label class="strong">Security Template</label>\n                    <select class="form-control"\n                            ng-options="workspace.__metadata.id as workspace.workspaceName for workspace in DbQuery.workspaces"\n                            ng-model="DbQuery.currentST"\n                            required\n                            ng-disabled="DbQuery.precedent">\n                    </select>\n                  </div>\n                  <div class="col-lg-4">\n                    <div class="override-template"><label> override</label>\n                      <label class="ui-switch ui-switch-success ui-switch-sm" for="override-checkbox">\n                        <input id="override-checkbox" type="checkbox" ng-model="DbQuery.precedent"/><i></i>\n                      </label>\n                    </div>\n                  </div>\n                </div>\n                <div ng-if="DbQuery.precedent">\n                  <label>Read Permissions</label>\n                  <ul class="list-style-none">\n                    <li ng-repeat="role in DbQuery.roles">\n                      <input type="checkbox"\n                             ng-model="DbQuery.allowSelectRolesObject[role.Name]"\n                             id="permissions-checkbox-{{role.Name}}"\n                             ng-disabled="!DbQuery.precedent">\n                      </input>\n                      <label for="permissions-checkbox-{{role.Name}}">\n                        {{ role.Name }}\n                      </label>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n\n              <div class="save-bar" ng-show="DbQuery.editMode">\n                <button type="submit"\n                        ng-disabled="DbQuery.queryForm.$invalid || (DbQuery.query.noSQL === \'\' && DbQuery.query.sQL === \'\')"\n                        class="btn btn-success btn-lg btn-w-lg" ladda="DbQuery.loading"\n                        data-style="expand-right">Save\n                </button>\n                <button type="button"\n                        ng-show="DbQuery.editMode"\n                        class="btn btn-default btn-lg btn-w-lg"\n                        data-style="expand-right"\n                        ng-click="DbQuery.cancel()">Cancel\n                </button>\n                <button class="btn btn-info btn-lg btn-w-lg pull-right" type="button"\n                        ng-click="DbQuery.showHelp()">Help</button>\n              </div>\n            </fieldset>\n\n            <div class="save-bar" ng-show="!DbQuery.editMode">\n              <br/>\n              <button type="button"\n                      class="btn btn-success btn-lg btn-w-lg"\n                      data-style="expand-right" ladda="DbQuery.loading"\n                      ng-click="DbQuery.editQuery()">Edit\n              </button>\n            </div>\n          </form>\n\n        </div>\n        <div class="right-col" ng-include="\'views/db_queries/query_test.html\'"></div>\n      </div>\n    </div>\n  </section>\n</section>\n\n<div ng-cloak>\n  <angled-window ng-if="DbQuery.openParamsModal"\n                 id="select-params"\n                 title="Query Parameters"\n                 grouping="w"\n                 close-function="DbQuery.toggleParametersModal()"\n                 style="left: 650px; top: 70px;">\n    <div ng-include="\'views/db_queries/select_parameters.html\'"></div>\n  </angled-window>\n</div>\n\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/db_queries/query_result.html",'<label ng-hide="DbQuery.gridOptions.totalItems == undefined && !DbQuery.testError">Test Results</label>\n\n<div ng-show="DbQuery.testError" class="input-error">{{ DbQuery.testError }}</div>\n\n<div id="grid-container" ng-hide="DbQuery.testError">\n\n  <div ui-grid="DbQuery.gridOptions"\n       class="querygrid" ui-grid-resize-columns\n       ng-show="DbQuery.gridOptions.totalItems > 0">\n  </div>\n\n  <div ng-show="DbQuery.gridOptions.totalItems == 0">\n    <h3>No records found</h3>\n  </div>\n\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/db_queries/query_test.html",'  <h3>Test query parameters</h3>\n  <br/>\n  <form role="form" name="DbQuery.inputParametersForm" novalidate>\n    <div class="form-group" ng-repeat="inputParam in DbQuery.getParameters()">\n      <label for="inputParam">{{inputParam}}</label>\n      <input type="text"\n             id="inputParam"\n             class="form-control"\n             ng-model="DbQuery.inputValues[inputParam]"\n             required>\n    </div>\n\n    <label>HTTP Request URL:</label>\n    <bknd-copy-url copy-url-params="DbQuery.copyUrlParams"></bknd-copy-url>\n    <br/>\n    <label>Request $http:</label>\n    <bknd-copy-url type="textarea" copy-url-params="DbQuery.copyHttpParams"></bknd-copy-url>\n    <br/>\n\n    <button type="button"\n            class="btn btn-success btn-lg btn-w-lg"\n            data-style="expand-right" ladda="DbQuery.testLoading"\n            ng-disabled="!(DbQuery.allowTest() && !DbQuery.inputParametersForm.$invalid)"\n            ng-click="DbQuery.testData()">Test Query\n    </button>\n    <div ng-if="!DbQuery.allowTest()">** Must save first to enable Test Query</div>\n  </form>\n  <br/><br/>\n  <ng-include src="\'views/db_queries/query_result.html\'"></ng-include>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/db_queries/select_parameters.html",'<strong ng-bind="modal.dictionaryItems.headings.tokens"></strong>\n<ul class="list-unstyled">\n  <li ng-repeat="token in DbQuery.dictionaryItems.data.tokens"\n      ng-click="DbQuery.insertParamAtChar(DbQuery.mode ,token.token)"\n      ng-bind="token.label"\n      style="cursor:pointer;">\n  </li>\n</ul>\n\n<hr/>\n<strong>Parameters</strong>\n<ul class="list-unstyled">\n  <li ng-repeat="parameter in DbQuery.getParameters()"\n      ng-click="DbQuery.insertParamAtChar(DbQuery.mode, parameter)"\n      ng-bind="parameter"\n      style="cursor:pointer;">\n  </li>\n</ul>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/docs/api_desc.html",'<style>\n    .api-desc p {\n        text-align: justify;\n    }\n</style>\n<section class="page-form-ele page ng-scope api-desc ba-docs">\n    <div class="panel panel-default">\n        <div class="panel-heading"><strong>API Documentation</strong></div>\n        <div class="panel-body">\n            <div class="row col-sm-10 col-sm-offset-1">\n                <h1>Documentation Topics</h1>\n              <ul>\n                <h4><li><a href="" ng-click="desc.scrollTo(\'SecurityConcept\')">Security Concept</a></li></h4>\n                <h4><li><a href="" ng-click="desc.scrollTo(\'CustomActions\')">Custom Actions</a></li></h4>\n                <h4><li><a href="" ng-click="desc.scrollTo(\'APIDescription\')">API Description</a></li></h4>\n              </ul>\n                <h1>What is Backand</h1>\n                <p>\n                    Backand\'s goal is to free up the front end development of web applications by providing a rich, robust, and scalable back end with minimal impact on the development process. The key feature offered by Backand is the <a target="_blank" href="http://en.wikipedia.org/wiki/Object-relational_mapping">ORM</a>, but most application back ends require more than just object management. Backand provides you with most of what your application needs automatically, offering features like tracking data changes, logging, role-based security, back-office connectivity, and much more. You can even create your own server side actions with JavaScript, running custom server side queries and easily integrating with third party services.\n                </p>\n                <h3>Backand ORM</h3>\n                <p>\n                    Backand <a target="_blank" href="http://en.wikipedia.org/wiki/Object-relational_mapping">ORM</a> automatically provides you with a REST API to perform <a target="_blank" href="http://en.wikipedia.org/wiki/Create,_read,_update_and_delete">CRUD</a> operations against your database. You can connect an existing database you already have, or create a new database with the Backand dashboard. When you create a database at Backand it is automatically populated in Amazon\'s AWS Relational Database Service (<a target="_blank" href="http://aws.amazon.com/rds/">AWS RDS</a>), providing an isolated database server that you can scale automatically, or even use in other applications entirely independent of Backand. Even though Backand focuses on software services as opposed to platform services, when you register a database with Backand it is truly <b>your</b> database.\n                </p>\n                <h3>\n                    SQL and NoSQL - The Best of Both Worlds\n                </h3>\n                <p>\n                    Through the flexibility of Backand\'s API, you have the ability to work with your data at whatever level you desire. You can perform basic <a target="_blank" href="http://en.wikipedia.org/wiki/Create,_read,_update_and_delete">CRUD</a> operations in a couple ways. In one way you can mimic a SQL database by simply returning a shallow representation of the object, with foreign key references remaining as simple IDs in the response data. However, you can also perform deep queries that resolve all of the underlying data objects into a single set of response data, giving you the level of object detail that you often see with NoSQL databases. With a simple parameter change, you can switch between the two patterns at will!\n                </p>\n                <h1 id="SecurityConcept">Security Concept</h1>\n                <h3>Authentication</h3>\n                <p>\n                    The default authentication setup for Backand applications relies on <a target="_blank" href="http://oauth.net/2/">OAuth2</a> to provide tokenize authentication. By logging in with your username (your email address), your password, and your app name, you receive an authentication token that is valid for 24 hours. This token is required for all communication with Backand, and as such we highly recommend that you use Backand\'s angular infrastructure to help you save the access token. Using the <a target="_blank" href="https://docs.angularjs.org/api/ngCookies">ngCookies</a>  wrapper, you can adjust the default request header to include your current access token, greatly easing the process of securing your API communications. Backand also offers <a href="" ng-click="desc.scrollTo(\'anonymous\')">Anonymous Access</a>, which allows you to access your application without the need to authenticate via username and password.\n                </p>\n                <h3>Sign Up</h3>\n                <p>\n                    Registering with Backand, and creating an application, automatically sets you as a user with an "Admin" role in your new project (see <a href="" ng-click="desc.scrollTo(\'roles\')">Roles</a> for more info). By default your application is marked private, which means that only users that you have personally invited can sign up for your app. This can be changed in the dashboard by setting your application to Public in the Security & Auth --> Configuration menu. Setting your application to public allows any user to register for - and use - your application. These users are assigned a default role, which needs to be configured when you enable public usage of your app (see <a href="" ng-click="desc.scrollTo(\'roles\')">Roles</a> for more details). For security reasons you cannot change the role of a user through API calls - this can only be accomplished either by having an admin change the appropriate settings on the Security & Auth -> Users page, or by creating a custom server-side action that performs this task.\n                    For a private application the registration steps are as follow:\n                    <ul>\n                        <li>First, set your application\'s registration page on the Security & Auth --> Configuration page.</li>\n                        <li>Once you have a registration page, enter the emails to invite on the Security & Auth --> Users page. Once you have entered the emails you wish to invite, click the "Invite User(s)" button. This will send an email to each new user with a link to the registration page that you created.</li>\n                        <b>The following steps are the same for both Public and Private apps:</b>\n                        <li>The user enters his/her email, name and password on your registration page</li>\n                        <li>After the user submits their registration, Backand sends a verification email to authenticate the user\'s identity</li>\n                        <li>After the user clicks on the link in the verification email, Backand completes the registration process and redirects to the "Custom Verified Email Page" URL for your application. Configure this on the Security & Auth --> Configuration page</li>\n                    </ul>\n                    <a href="" ng-click="desc.scrollTo(\'api-sign-up\')">Here</a> is the api of the Sign Up\n\n                </p>\n                <h3>Remove user from the app</h3>\n                <p>\n                    There are two ways to remove a user from the application. You can permanently remove a user from the application by deleting a user from the Users grid in your application\'s admin section. This requires the user to register again if they wish to continue using your app. Alternatively, you can un-check the "approved" checkbox in the user\'s row on the  Security & Auth --> Users page. This allows you to reinstate the user simply by re-checking the "approved" column.\n                </p>\n                <h3 id="anonymous">Anonymous Access</h3>\n                <p>\n                    If you wish to enable anonymous access to your application, you need to perform a couple steps. First, you need to turn on the Anonymous Access option in you application\'s settings. Once that\'s done, you are given the option to create an AnonymousToken value. By passing this value in a request header (e.g. AnonymousToken=&lt;your token here&gt;) you can perform api actions for your application. finally, you need to set the default role of an anonymous user within your application\'s settings (see <a href="" ng-click="desc.scrollTo(\'roles\')">Roles</a> for more info).\n                </p>\n                <h3>Link your app\'s users with Backand\'s users</h3>\n                <p>\n                    We offer full capability to link your application\'s users with Backand users. However, to ensure that you can restrict access to your application without impacting the Backand user\'s experiece, we recommend that you create another table for your app\'s users with a unique email address column. This allows you to build rules specific to your app, but still link to Backand\'s users without affecting their overall experience.\n                </p>\n                <h3 id="roles">Roles & Security Templates</h3>\n                <p>\n                    Each user has a role. When you created your app, you were automatically assigned with an "Admin" role. The "Admin" role is a special role that allows you to make configuration changes in your app with Backand\'s administration tools. Non-admin roles, which should be used to secure your application, are used to define the permissions for each of the <a target="_blank" href="http://en.wikipedia.org/wiki/Create,_read,_update_and_delete">CRUD</a> actions for your objects and queries. Each Object and Query in your application is associated with a Security Template. In the security template, you assign different permissions for the possible CRUD actions to each user role, allowing you to control your user\'s access to the system\'s create, read, update and delete actions for your objects. Template configuration is found on the Security & Auth --> Security Template page.\n                </p>\n                <p>\n                    While Security Templates provide reusable permissions platforms that can be spread across a number of roles, you can also override security template settings and provide specific permissions for each individual role. This allows you to have more granular control over the CRUD actions that can be performed by the users in your system. When a user with insufficient security access tries to perform an action for which they do not have permission, a 403 (Forbidden) error response is returned.\n                </p>\n                <h1 id="CustomActions">Custom Actions</h1>\n                <p>\n\n                    In Backand\'s system, you can create server-side activity called Actions. These actions can be used for the purpose of security, integration, performance, notification and data integrity, among others, providing you with more flexibility in your app\'s design. There are two types of Actions that can be created. The first are initiated via a direct web request. These are known as "On Demand" actions. Additionally, you can create automated actions that take place based upon a data interaction event. These automated actions can occur whenever you create, update, or delete an item in your system. On Demand actions are associated with a specific object, and can be found on the Object --> {name} page in the Actions tab. The automated Create, Update and Delete actions are associated with a specific object that is compatible with a specific row in a table, while On Demand actions make association with a specific role optional.\n                </p>\n                    There are 3 kinds of actions that can be created for either action type:\n                    <ul>\n                        <li>Server side JavaScript code actions</li>\n                        <li>Transactional database script actions</li>\n                        <li>Send Email actions</li>\n                    </ul>\n                    All 3 types of actions use the following common parameters:\n                    <ul>\n                        <li>A Where condition - a SQL where clause that determines if the action will be performed.</li>\n                        <li>Input Parameters, added to the query string of the request that triggers the action, that will serve as variable values that you can supply to your action\'s code. These parameters will serve as tokens in the action definition and will be replaced with the actual values when the code executes.</li>\n                    </ul>\n                    <h4>Server Side Javascript code</h4>\n                    You can run standard JavaScript on the server. It runs on the <a target="_blank" href="http://en.wikipedia.org/wiki/V8_(JavaScript_engine)">V8 engine</a>. To execute the JavaScript action, put your code into the following function:\n                    <pre><code class="html hljs">\nfunction backandCallback(userInput, dbRow, parameters, userProfile) {\n    // write your code here\n    return {};\n}\n</code></pre>\n                    The function parameters are:\n                    <ul>\n                        <li><b>userInput:</b> This parameter is only provided for Create and Update actions, and is the object that was sent to the action. It is null for Delete actions, as well as for On Demand actions.</li>\n                        <li><b>dbRow:</b> This parameter is populated in After Create, Update, and Delete automated actions, and if you supply an optional ID to an On Demand action. The dbRow parameter will contain the row\'s entry in the database prior to any changes made.</li>\n                        <li><b>parameters:</b> This parameter represents the variables sent in the query string for the action.</li>\n                        <li><b>userProfile:</b> This parameter stores the current username, the user\'s role, app name and the access token used by the user to perform the action. It is of the format <code>{"username": "string", "role": "string", "app": "string", "token": "string"}</code>.</li>\n                    </ul>\n                    In addition to the above parameters, you can also make use of the following global objects:\n                    <ul>\n                        <li>$http - a service for AJAX calls</li>\n                        <li><code>$http({method:"GET",url:CONSTS.apiUrl + "/1/objects/objectexample" , headers: {"Authorization":userProfile.token}});</code></li>\n                        <li>CONSTS - CONSTS.apiUrl for Backands API URL</li>\n                        <li><code>console.log(message, object)</code> and <code>console.error(message, object)</code>, to debug your code</li>\n                    </ul>\n                <p>\n                    Automated actions will have a response that matches the format expected by the triggering call (such as the return value of a CREATE call). On Demand actions, though, will return whatever is returned by the custom server code, which can be any properly-formatted JSON.\n                    <h5><b>Error Handling</b></h5>\n                    If your code results in an error (for example, if you write the following: <code>throw new Error("An error occurred!")</code>), the request will return HTTP status 417, and the response body will contain the associated error message.\n                </p>\n                    <h4>Transactional database script</h4>\n                <p>\n                    Transactional database scripts are SQL scripts that run within the same transaction context as the triggering action, provided the event occurs in the object event "During the data save before the object is committed". This means that if the Create, Update or Delete request fails then your script will be rolled back like any other transaction.\n                </p>\n                    <h4>Send Email</h4>\n                <p>\n                    Send Email actions, in addition to common parameters, allow you to also supply the usual email fields: To, Cc, Bcc, From, Subject and Message. In addition, you can provide an object ID to obtain a deep object to use in the action.\n                </p>\n\n\n                    <h1>Queries</h1>\n                    <p>\n                        You can create and call your own custom queries in your application. You can use parameters as tokens that will be replaced with the actual parameter values, similar to how Custom Actions work. You can create your own filters, sorting, and paging, as well as use aggregation to summarize information.\n                    </p>\n                    <h1 id="APIDescription">API Description</h1>\n                    <h3>Security & Authentication</h3>\n                <p>\n                    Backand provides role-based security that allows you to determine specific permissions for each group of users. Backand uses <a target="_blank" href="http://oauth.net/2/">OAuth2</a> authentication to identify users. Backand\'s implementation of OAuth2 authentication requires you to send the username, password, and appname (application name). In response, you receive an authentication token that must be supplied for all further communication with Backand.\n                </p>\n                <p>\n\n                    You can either provide this token with each request, or use a cookie to persist the authentication token (recommended). Providing this token is required to use Backand\'s REST API. We have prepared a Backand Provider that will help you the authentication activities. Start by including the Backand SDK script files in your app:\n                    </p>\n\n                    <pre><code class="html hljs">\n      &lt;!-- We use client cookies to save the REST API token --&gt;\n      &lt;script src="//code.angularjs.org/1.3.0/angular-cookies.min.js"&gt;&lt;/script&gt;\n      &lt;!-- Backand SDK for Angular --&gt;\n      &lt;script src="//cdn.backand.net/backand/dist/1.6.1/backand.min.js"&gt;&lt;/script&gt;\n    </code></pre>\n                    <p>\n                        You will also need to add the Backand and angular-cookies dependencies to your angular app definition:\n                    </p>\n                    <pre><code class="javascript">\n      //app.js\n      angular.module(\'YOUR-APP-NAME\', [\'backand\', \'ngCookies\'])\n    </code></pre>\n                    <p>\n                        Once this is complete, you are ready to sign in to Backand, for other users to sign up to your app read about it <a  href="" ng-click="desc.scrollTo(\'api-sign-up\')">here</a>. There is also an option for anonymous access, read about it <a href="" ng-click="desc.scrollTo(\'anonymous\')">here</a>.\n\n                    </p>\n                    <br />\n                    <h4 id="sign_in">\n                        Sign In\n                    </h4>\n                    <br />\n                    <p>Use the Backand provider with the following parameters to get an OAuth2 access token:</p>\n\n                    <ul class="task-list">\n                        <li><p><strong>username</strong> - Backand\'s username.</p></li>\n                        <li><p><strong>password</strong> - Backand\'s .password</p></li>\n                        <li><p><strong>appName</strong> - The application name.</p></li>\n                    </ul>\n\n\n                    <pre><code>\n      // SignInCtrl.js\n      function SignInCtrl(Backand, $cookieStore) {\n        $scope.signIn = function() {\n          Backand.signin($scope.username, $scope.password, $scope.appName)\n          .then(\n            function (token) {\n              //save the token in the cookie\n              $cookieStore.put(Backand.configuration.tokenName, token);\n            },\n            function (data, status, headers, config) {\n              //handle error\n            }\n          );\n        }\n      }\n      // Use an Angular HTTP Interceptor to add the authentication token to each HTTP request\n      function httpInterceptor($q, $log, $cookieStore) {\n        return {\n          request: function(config) {\n            config.headers[\'Authorization\'] = $cookieStore.get(\'backand_token\');\n            return config;\n          }\n        };\n      }\n    </code></pre>\n                    <br />\n                    <h4 id="api-sign-up">\n                        Sign Up\n                    </h4>\n                    <p>\n                        With the <code>/user/signup</code> api you can enable other users to sign up to your app. The sign up process consists of the following steps:\n                        <ul style="list-style-type:decimal">\n                            <li>\n                                From your app\'s registration page, call the\n                                <code>/user/signup</code> action\n                            </li>\n                            <li>\n                                The email sent contains a verification link. When the user clicks the included link, Backand verifies the user\'s email address and completes the sign-up process by redirecting the user to a pre-defined success page (typically the application\'s sign-in page).\n                            </li>\n                        </ul>\n                        The sign up api uses the SignUpToken in the request header. You can find this token in the Security & Auth Configuration menu\n                        <br />\n                        (*) Configuration of the sign up process is located in the App left side menu: Security & Auth --> Configuration\n                    </p>\n                    <br />\n                The parameters for the sign-up call are:\n                    <ul class="task-list">\n                        <li><p><strong>SignUpToken</strong> - A security token to prevent malicious attacks. this should be added to the header</p></li>\n                        <li><p><strong>user</strong> - A JSON object representing the user\'s first name, last name, email, and password.</p></li>\n                    </ul>\n                    <pre>\n{\n  "firstName": "string",\n  "lastName": "string",\n  "email": "string",\n  "password": "string",\n  "confirmPassword": "string"\n}\n</pre>\n\n<pre>\n  self.signUp = function (user, signUpToken) {\n      return $http({\n          method: \'POST\',\n          url : Backand.configuration.apiUrl + \'/1/user/signup,\n          headers: {\n            \'SignUpToken\': signUpToken\n          },\n          data: user\n      })\n  };\n</pre>\n\n\n                    <h4 id="anonymous_access">\n                        Anonymous Access\n                    </h4>\n                    <p>\n                        If you want to allow anonymous users to access the application (i.e. without username and password), you can use the AnonymousToken parameter:\n                    </p>\n                    <pre><code>\n\n      // Use an Angular HTTP Interceptor to add the anonymous token to each HTTP request\n      function httpInterceptor($q, $log) {\n        return {\n          request: function(config) {\n            config.headers[\'AnonymousToken\'] = anonymousToken;\n            return config;\n          }\n        };\n      }\n    </code></pre>\n                    <br />\n\n                    <h3>\n                        REST API CRUD Operations\n                    </h3>\n                    <p>Once authentication is completed, you can perform all relevant CRUD operations in your application:</p>\n                    <br />\n                    <h4>\n                        List of Objects\n                    </h4>\n                    <br />\n                    <p>Call <code>/objects/{name}</code> with the following parameters to get a list of items:</p>\n\n                    <ul class="task-list">\n                        <li><p><strong>pageSize</strong> - The number of returned items in each getList call (default 20).</p></li>\n                        <li><p><strong>pageNumber</strong> - The page number starting with 1 (1-based, default 1).</p></li>\n                        <li><p><strong>filter</strong> - An array of JSON objects where each item has the properties fieldName, operator and value. The operator options depend on the field type.</p></li>\n                        <li><p><strong>sort</strong> - An array of JSON objects where each item has the properties fieldName and order. The order options are "asc" or "desc".</p></li>\n                        <li><p><strong>search</strong> - Free text filter search.</p></li>\n                        <li><p><strong>deep</strong> - When set to true, brings the related parent items in the relatedTables property.</p></li>\n                        <!--<li><p></p><strong>withSelectOptions</strong> - When set to true, get a text value collection to load select options according to parent relations.</li>-->\n                    </ul>\n\n\n<pre>\n  self.getList = function (name, pageSize, pageNumber, filter, sort) {\n      return $http({\n          method: \'GET\',\n          url: Backand.configuration.apiUrl + \'/1/objects/\' + name,\n          params: {\n            pageSize: pageSize,\n            pageNumber: pageNumber,\n            sort: sort,\n            filter: filter\n          }\n      });\n  };\n</pre>\n                    <br />\n                    <h4>\n                        One Object\n                    </h4>\n                    <br />\n                    <p>Call <code>/objects/{name}/{id}</code> with a specific item id and with the following parameters to get a specific item:</p>\n\n                    <ul class="task-list">\n                        <li><p><strong>id</strong> - The item\'s id, which is the primary key value for the item\'s database table </p></li>\n                        <li><p><strong>deep</strong> - When set to true, brings the related parent items in the relatedTables property</p></li>\n                    </ul>\n\n<pre>\n  self.getOne = function (name, id, deep) {\n      return $http({\n          method: \'GET\',\n          url: Backand.configuration.apiUrl + \'/1/objects/\' + name + \'/\' + id\n          params: {\n            deep: deep\n          }\n      });\n  };\n</pre>\n                    <br />\n                    <h4>\n                        Create\n                    </h4>\n                    <br />\n                    <p>POST to <code>/objects/{name}</code> with a new object to create (stored in the data portion of the AJAX call) using the following parameters:</p>\n\n                    <ul class="task-list">\n                        <li>\n                            <strong>returnObject</strong> - Set this to true when you have server side business rules that causes additional changes to the object. This will force the server to return the object after all business rules have taken effect. If false, it will return the object prior to any business rules running\n                        </li>\n                    </ul>\n\n<pre>\n  self.create = function (name, data, returnObject) {\n      return $http({\n          method: \'POST\',\n          url : Backand.configuration.apiUrl + \'/1/objects/\' + name,\n          data: data,\n          params: {\n            returnObject: returnObject\n          }\n      })\n  };\n</pre>\n                    <br />\n                    <h4>\n                        Update\n                    </h4>\n                    <br />\n                    <p>PUT to <code>/objects/{name}/{id}</code> to update an existing object (with changes provided in the data portion of the AJAX call). You must also supply the following parameters:</p>\n\n                    <ul class="task-list">\n                        <li>\n                            <strong>id</strong> - The item\'s id, which is the primary key value for the item\'s database table\n                            <strong>returnObject</strong> - Set this to true when you have server side business rules that causes additional changes to the object. This will force the server to return the object after all business rules have taken effect. If false, it will return the object prior to any business rules running.\n                        </li>\n                    </ul>\n\n<pre>\n  self.update = function (name, id, data, returnObject) {\n      return $http({\n          method: \'PUT\',\n          url : Backand.configuration.apiUrl + \'/1/objects/\' + name + \'/\' + id,\n          data: data,\n          params: {\n            returnObject: returnObject\n          }\n      })\n  };\n</pre>\n                    <br />\n                    <h4>\n                        Delete\n                    </h4>\n                    <br />\n                    <p>DELETE to <code>/objects/{name}/{id}</code> to remove an item:</p>\n                    <ul class="task-list">\n                        <li>\n                            <strong>id</strong> - The item\'s id, which is the primary key value for the item\'s database table.\n                        </li>\n                    </ul>\n<pre>\n  self.delete = function (name, id) {\n      return $http({\n          method: \'DELETE\',\n          url : Backand.configuration.apiUrl + \'/1/objects/\' + name + \'/\' + id\n      })\n  };\n</pre>\n                    <h3>\n                        Custom Actions\n                    </h3>\n                    <p>\n                        Custom actions can be called by sending a GET request to <code>/objects/action/{objectName}/{id}</code> The custom action is associated with an object list in order to simplify security configuration. It can also be associated with a specific object id, which is used as an input to the action, but this is optional. You can also define additional parameters in the request, which are passed through to the function. The action returns a custom JSON response.\n                    </p>\n                    <ul class="task-list">\n                        <li><p><strong>actionName</strong> - The custom action name.</p></li>\n                        <li><p><strong>parameters</strong> - A JSON object with all predefined parameters for the action.</p></li>\n                    </ul>\n                    <pre>\nself.callAction = function (objectName, id, actionName, parameters) {\n      return $http({\n          method: \'GET\',\n          url: Backand.configuration.apiUrl + \'/1/objects/action/\' + objectName + \'/\' + id\n          params: {\n             parameters: parameters\n          }\n      });\n  };\n</pre>\n                <b>Note:</b> You can find a configuration and testing environment for each of the custom actions in the right side menu for your application on an object\'s Actions tab.\n                    <br />\n                    <h3>\n                        Queries\n                    </h3>\n                    <p>\n                        You can run custom pre-configured queries by sending a GET request to <code>/query/data/{queryName}</code> The query syntax must follow the SQL rules of the underlying database that your application is using. You can include predefined parameters in your request that are then used by your query.\n                    </p>\n                    <ul class="task-list">\n                        <li><p><strong>parameters</strong> - A JSON object with all predefined query parameters provided.</p></li>\n                    </ul>\n                    <pre>\nself.query = function (queryName, parameters) {\n      return $http({\n          method: \'GET\',\n          url: Backand.configuration.apiUrl + \'/1/query/data/\' + queryName\n          params: {\n             parameters: parameters\n          }\n      });\n  };\n</pre>\n                <b>Note:</b> You can find a configuration and testing environment for custom queries in the Application dashboard\'s right side menu, under "Queries".\n                    <br />\n                    <h3>Experience more</h3>\n                    <p>To dive deeper into Backand\'s functionality, clone our Angular demo application on <a href="https://github.com/backand/angular-yeoman-todos" target="_blank">github</a></p>\n</div>\n        </div>\n</div>\n</section>\n')
}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/docs/get_started_open.html",'<section class="page-form-ele page ng-scope ba-docs">\n  <div class="panel panel-default">\n    <div class="panel-heading">\n      <strong test-hook="docs.quickstart.title">Quickstart Guide</strong>\n      <h2>4 easy steps to include Backand in your Angular or ionic project:</h2>\n\n    </div>\n    <div class="panel-body docs">\n\n\n\n      <div class="quickstart-body">\n\n        <div class="quickstart-connecting-db" ng-show="docs.isNew()">\n          <h3>\n            We\'re creating your database and will notify you when it\'s ready.<br/>\n            In the meantime, you can review below how to integrate your new app with Angular...\n          </h3>\n          <div us-spinner spinner-key="connecting-app-to-db"></div>\n          <br/>\n          <br/>\n        </div>\n\n\n        <br/>\n        <ol>\n\n          <li>\n            <h3>Add the Backand scripts</h3>\n            <p>Include the above code in your index.html file. Make it above the project\'s code</p>\n            <pre><code class="html hljs">\n  &lt;!-- Backand SDK for Angular --&gt;\n  &lt;script src=&quot;//cdn.backand.net/backand/dist/1.8.0/backand.min.js&quot;&gt;&lt;/script&gt;\n            </code></pre>\n            <br />\n          </li>\n\n          <li>\n            <h3>Script Dependencies</h3>\n            <p>Add \'backand\' to the module dependencies of your angular app</p>\n            <pre><code class="javascript">\n  //app.js\n  angular.module(\'YOUR-APP-NAME\', [\'backand\'])\n            </code></pre>\n            <br />\n          </li>\n\n          <li>\n            <h3>Configure secure calls to Backand\'s REST API</h3>\n            <p>Backand uses OAuth2 authentication, which requires that you include the\n              authentication token in every HTTP call\n            </p>\n            <pre><code>\n  //Update Angular configuration section\n  myApp.config(function (BackandProvider) {\n      BackandProvider.setAppName(\'{{docs.currentApp.Name || \'Your-App-Name\'}}\');\n      BackandProvider.setSignUpToken(\'{{docs.keys.signup || \'Your-SignUp-Token\'}}\');\n      BackandProvider.setAnonymousToken(\'{{docs.keys.anonymous || \'Your-Anonymous-Token\'}}\');\n  })\n            </code></pre>\n            <!--setAppName - set the app name to be used by the SDK<br/>-->\n            <!--setAnonymousToken - allow anonymous access if needed<br/>-->\n            <!--setSignUpToken - allow any user to register to the app-->\n            <br />\n          </li>\n          <br/>\n\n          <!--<li>-->\n            <!--<h3>Connect your Backand app</h3>-->\n            <!--<p>-->\n              <!--We can inject the Backand service into any controller - simply call Backand.signin(...)-->\n              <!--in your controller to gain access.<br />-->\n              <!--In this example, we sign into Backand in the SignInCtrl controller\'s signIn method.-->\n              <!--When we are successfully signed in, we save the authentication token into a cookie.-->\n            <!--</p>-->\n            <!--<pre><code>-->\n  <!--// SignInCtrl.js-->\n  <!--function SignInCtrl(Backand, $cookieStore) {-->\n    <!--$scope.signIn = function() {-->\n      <!--Backand.signin($scope.username, $scope.password)-->\n      <!--.then(-->\n        <!--function (response) {-->\n          <!--//Do good for the world-->\n\n        <!--},-->\n        <!--function (data, status, headers, config) {-->\n          <!--//handle error-->\n        <!--}-->\n      <!--);-->\n    <!--}-->\n  <!--}-->\n            <!--</code></pre>-->\n          <!--</li>-->\n\n          <li>\n            <h3>Read data from your database</h3>\n              <p>\n                  You can access Backand\'s API endpoints using $http requests from your Angular project.<br />\n                  In the following example, we create a function called getList that uses the DataService API endpoint to fetch data from your database, which is returned in JSON format.\n              </p>\n              <pre><code>\n  //dataService.js\n  function dataService($http, Backand) {\n    var vm = this;\n    //get the object name and optional parameters\n    vm.getList = function(name, sort, filter) {\n      return $http({\n        method: \'GET\',\n        url: Backand.getApiUrl() + \'/1/objects/\' + name,\n        params: {\n          pageSize: 20,\n          pageNumber: 1,\n          filter: filter || \'\',\n          sort: sort || \'\'\n        }\n      });\n    }\n  }\n    </code></pre>\n            <p>Using $http you can call to any of the CRUD URLs, trigger server side actions, and manage users.\n                  All API calls and expected parameters can be reviewed and tested in Backand\'s API Playground.</p>\n          </li>\n\n        <div style="margin-left: 15px;">\n        <h3>Done. It\'s that simple</h3>\n        <p>In the above example, we easily used Backand service, and wrote functionality that can\n          retrieve data from your database.<br/>\n          Using the above code, you can simply modify the URL endpoints to hit all of the relevant API functionality\n          available from your application\'s playground - simply copy the URL, adjust the parameters per step 4, and you are set!</p>\n\n        <p><b>In your Angular application, you are the rock star - Backand is here to help you rise and shine.\n          Have fun!</b></p>\n        </div>\n      </ol>\n\n      </div>\n      <br/>\n        <div class="quickstart-sidebar">\n\n        <div class="quickstart-sidebox" id="kickstart-sidebox">\n          <div class="quickstart-kickstart">\n            <img src="../assets/images/docs_pages/kickstart-icon.png" />\n            <div class="quickstart-sidebox-title">Don\'t have an Angular project?</div><br/>\n            <div class="quickstart-sidebox-text">We\'ve got a <b>kickstart project</b> to get you on your way!</div><br/>\n            <button class="btn btn-lg btn-success quickstart-sidebox-button" ng-click="docs.goToKickstart()">Get Started</button>\n          </div>\n        </div>\n\n\n        <div class="quickstart-sidebox" id="video-sidebox">\n          <div class="quickstart-kickstart">\n            <img src="../assets/images/docs_pages/icon-video.png" />\n            <div class="quickstart-sidebox-title">Watch our Video Tutorial</div><br/>\n            <button class="btn btn-lg btn-success quickstart-sidebox-button"\n                    video-modal url="\'https://www.youtube.com/embed/-35LHkNiorc?rel=0&autoplay=1\'"\n                    title="\'AngularJS Quickstart\'">Play Video</button>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/docs/ionic_starter.html",'<section class="page-form-ele page ng-scope ba-docs">\n  <div class="panel panel-default">\n    <div class="panel-heading">\n      <strong test-hook="docs.quickstart.title">Ionic starter for mobile</strong>\n      <h2>4 easy steps to start mobile ionic project:</h2>\n\n    </div>\n    <div class="panel-body docs">\n\n      <div class="quickstart-body">\n\n        <div class="quickstart-connecting-db" ng-show="docs.isNew()">\n          <h3>\n            We\'re creating your database and will notify you when it\'s ready.<br/>\n            In the meantime, you can review below how to integrate your new app with Angular...\n          </h3>\n          <div us-spinner spinner-key="connecting-app-to-db"></div>\n          <br/>\n          <br/>\n        </div>\n        <br/>\n        <ol>\n\n          <li>\n            <h3>Install Ionic framework</h3>\n            <p>First, install <a href="http://nodejs.org/" target="_blank">Node.js</a>. Then, install the latest\n              Cordova and Ionic <a href="https://npmjs.org/package/ionic" target="_blank">command-line\n                tools</a>.Follow the <a\n                      href="http://cordova.apache.org/docs/en/5.1.1/guide/platforms/android/index.html" target="_blank">Android</a>\n              and <a href="http://cordova.apache.org/docs/en/5.1.1/guide/platforms/ios/index.html" target="_blank">iOS</a> platform\n              guides to install required platform dependencies</p>\n            <pre><code class="bash hljs">\n  $ npm install -g cordova ionic\n            </code></pre>\n            <p>Check <a href="http://ionicframework.com/getting-started/" target="_blank">Ionic Getting Started</a> for more information and troubleshooting</p>\n            <br />\n          </li>\n\n          <li>\n            <h3>Start the Project</h3>\n            <p>Create an Ionic project with Backand inside, includes all Backand dependencies and generic controller</p>\n            <pre><code class="bash hljs">\n  ionic start {{docs.currentApp.Name || \'myApp\'}} https://github.com/backand/backand-ionic-starter\n  cd {{docs.currentApp.Name || \'myApp\'}}\n            </code></pre>\n            <p ng-if="!docs.currentApp.Name">myApp should be your Backand\'s app name</p>\n            <br />\n          </li>\n\n          <li>\n            <h3>Configure Backand\'s REST API</h3>\n            <p>Backand requires that you include secure tokens for anonymous and sign-up REST API calls\n            </p>\n            <pre><code>\n  //Update Angular config section in /www/js/app.js\n\n  .config(function (BackandProvider, $stateProvider, $urlRouterProvider, $httpProvider) {\n      BackandProvider.setAppName(\'{{docs.currentApp.Name || \'Your-App-Name\'}}\');\n      BackandProvider.setSignUpToken(\'{{docs.keys.signup || \'Your-SignUp-Token\'}}\');\n      BackandProvider.setAnonymousToken(\'{{docs.keys.anonymous || \'Your-Anonymous-Token\'}}\');\n  })\n            </code></pre>\n          </li>\n          <br/>\n\n          <li>\n            <h3>CRUD your data</h3>\n              <p>\n                  You can access Backand\'s REST API endpoints using $http requests from your Ionic Angular\n                project.<br />\n                  You can duplicate the generic service \'ItemsModel\' to manage any object.\n              </p>\n              <pre><code>\n  //Manage items object in /www/js/services.js\n\n  .service(\'ItemsModel\', function ($http, Backand) {\n      var service = this,\n      baseUrl = \'/1/objects/\',\n      objectName = \'items/\';\n\n      ...\n  })\n    </code></pre>\n          </li>\n          <div style="margin-left: 15px;">\n            <h3>Done. It\'s that simple</h3>\n            <p>Using the above starter code, you can simply build great mobile app using Ionic and Backand.<br/>\n              Continue now in configuring your model, setup security and add server side code...</p>\n            Have fun!</b></p>\n          </div>\n        </ol>\n      </div>\n      <br/>\n        <div class="quickstart-sidebar">\n\n        <div class="quickstart-sidebox" id="kickstart-sidebox">\n          <div class="quickstart-kickstart">\n            <img src="../assets/images/docs_pages/kickstart-icon.png" />\n            <div class="quickstart-sidebox-title">Already have an Ionic project?</div>\n            <br/>\n            <div class="quickstart-sidebox-text">Learn how to include <b>Backand</b> in your project:</div>\n            <br/>\n            <button class="btn btn-lg btn-success quickstart-sidebox-button" ng-click="docs.goToQuickstart()">Get Started</button>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/docs/kickstart.html",'<section class="page-form-ele page ng-scope ba-docs">\n    <div class="panel panel-default">\n        <div class="panel-heading"><strong>backand-angular-kickstart</strong>\n            <h2>Follow these steps to install angular-kickstart with Backand inside</h2>\n        </div>\n        <div class="panel-body docs">\n\n\n\n\n            <div class="quickstart-body">\n                <div class="quickstart-connecting-db" ng-show="docs.isNew()">\n                    <h3>\n            We\'re creating your database and will notify you when it\'s ready.<br/>\n            In the meantime, you can review below how to setup new app with angular-kickstart...\n          </h3>\n                    <div us-spinner spinner-key="connecting-app-to-db"></div>\n                    <br/>\n                    <br/>\n                </div>\n\n\n                <section class="panel panel-box" ng-if="!docs.currentApp.Name">\n                    <div class="panel-item bg-info">\n                        <h3 style="text-align:center;">Speed up your AngularJS development with super simple back-end and a complete and scalable\n              gulpjs based build system that scaffolds the project for you.</h3>\n                    </div>\n                </section>\n\n                <br/>\n                <h2>Installation</h2>\n                <h5>Install <b>node.js</b>. Then <b>sass</b>, <b>gulp</b> and <b>bower</b> if you haven\'t yet.</h5>\n\n                <pre><code class="hljs">\n    $ gem install sass\n    $ npm install -g gulp bower\n    </code></pre>\n                <br/>\n                <h5>Clone the backand-angular-kickstart or download the\n          <a href="https://github.com/backand/angular-kickstart/archive/master.zip" target="_blank">\n            master release</a>.</h5>\n                <pre><code class="hljs">\n    $ git clone https://github.com/backand/angular-kickstart.git\n    $ cd angular-kickstart\n    </code></pre>\n                <br/>\n                <h5>Install bower and npm dependencies, and run the application in development mode.</h5>\n                <pre><code class="hljs">\n    $ npm install\n    $ bower install\n    $ gulp serve\n    </code></pre>\n                <br/>\n                <h2>Run & Deploy</h2>\n                <h5>You are now ready to go, your application is available at <code>http://127.0.0.1:3000</code>.</h5>\n                <br/>\n                <h5><b>Every file you add, edit or delete into the /client folder will be handled by the build system.</b></h5>\n                <h5>When you are ready to build a production release there is a task for that:</h5>\n                <pre><code class="hljs">\n    $ gulp serve:dist\n   </code></pre>\n                <br/>\n                <h5>This task will lint your code, optimize css js and images files, run unit tests.\n          After the task has successfully finished, you can find an optimized version of your project inside the <code>/build/dist folder</code>.</h5>\n                <br/>\n                <h5>To read more about the features, directory structure, build system and more, visit\n          <a href="https://github.com/backand/angular-kickstart/" target="_blank">github page</a>.</h5>\n            </div>\n            <br/>\n            <div class="quickstart-sidebar">\n\n                <div class="quickstart-sidebox" id="kickstart-sidebox">\n                    <div class="quickstart-kickstart">\n                        <img src="../assets/images/docs_pages/kickstart-icon.png" />\n                        <div class="quickstart-sidebox-title">Already have an Angular project?</div>\n                        <br/>\n                        <div class="quickstart-sidebox-text">Learn how to include <b>Backand</b> in your project:</div>\n                        <br/>\n                        <button class="btn btn-lg btn-success quickstart-sidebox-button" ng-click="docs.goToQuickstart()">Get Started</button>\n                    </div>\n                </div>\n\n\n                <div class="quickstart-sidebox" id="video-sidebox">\n                    <div class="quickstart-kickstart">\n                        <img src="../assets/images/docs_pages/icon-video.png" />\n                        <div class="quickstart-sidebox-title">Watch our Video Tutorial</div>\n                        <br/>\n                        <button class="btn btn-lg btn-success quickstart-sidebox-button" video-modal url="\'https://www.youtube.com/embed/-35LHkNiorc?rel=0&autoplay=1\'" title="\'AngularJS Quickstart\'">Play Video</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/docs/orm_help.html",'<section class="ba-docs" style="width: 650px;">\n  <div class="panel panel-default">\n    <div class="panel-heading"><strong>Model Definition with JSON</strong></div>\n    <div class="panel-body">\n      <h4><u>Example</u></h4>\n<pre><code>\n[\n  {\n    "name": "tasks",\n    "fields": {\n      "created_by": {\n        "object": "users"\n      },\n      "description": {\n        "type": "string"\n      },\n      "completed": {\n        "type": "boolean"\n      }\n    }\n  },\n  {\n    "name": "users",\n    "fields": {\n      "todo": {\n        "collection": "tasks",\n        "via": "created_by"\n      },\n      "email": {\n        "type": "string"\n      },\n      "firstName": {\n        "type": "string"\n      },\n      "lastName": {\n        "type": "string"\n      }\n    }\n  }\n]\n</code></pre>\n      <h4><u>Clarifications</u></h4>\n      <h5>\n        - In addition to the fields supplied by the user, Backand defines an \'id\' field, of type integer, which will be used as a primary key for the table.<br/>\n      </h5>\n      <h5>\n        - Renaming fields can only be done from the Fields tab in the application dashboard. Renaming a field or an object in a model will delete the data associated with that field or object.\n      </h5>\n      <br/>\n      <h4><u>Definitions</u></h4>\n        <h5>\n          The model represent a database schema that is defined as a JSON array of one or more object (Table) definitions:\n        </h5>\n<pre><code>&lt;model&gt; = [  &lt;object&gt;, &lt;object&gt;, ... ]</code></pre>\n        <h5>\n          An object definition is a JSON object with a name entry and a fields entry:\n        </h5>\n<pre><code>&lt;object&gt; = { "name":  &lt;string&gt;, "fields" : &lt;fields&gt; }</code></pre>\n        <h5>\n          The fields definition is a JSON list of field attributes:\n        </h5>\n<pre><code>&lt;fields&gt; =  { "field1" : &lt;field&gt;, "field2": &lt;field&gt;, ... }</code></pre>\n        <h5>\n          A field is defined by its type and a set of optional properties. The field definition is a JSON object:\n        </h5>\n<pre><code>&lt;field&gt; = { "type": &lt;type&gt;, &lt;optional properties&gt;}</code></pre>\n        <h5>\n          A field may have one of the following types:<br/>\n          <ul>\n            <li>string - string column up to 255 characters</li>\n            <li>text - text column up to 21,844 characters</li>\n            <li>float</li>\n            <li>datetime</li>\n            <li>boolean</li>\n          </ul>\n        </h5>\n        <h5>\n            We can optionally defined a field as required (`NOT NULL`) or not:\n        </h5>\n<pre><code>"required": &lt;boolean value&gt;</code></pre>\n        <h5>\n            Where a boolean value is true or false.\n        </h5>\n        <h5>\n            And set its default value:\n        </h5>\n<pre><code>"defaultValue": &lt;value&gt;</code></pre>\n        <h5>\n          Where `&lt;value&gt;` is of the type of the field.\n        </h5>\n        <br/>\n        <h4><u>One-to-Many Relationship</u></h4>\n        <h5>\n          One-to-many relationship between objects are specified using relationship fields. A relationship field will generate the appropriate foreign-key relationship fields in the corresponding relation objects - <a href="http://docs.backand.com/en/latest/getting_started/objects/index.html#one-to-many-relationship" target="_blank">read more</a>.<br/><br/>\n        </h5>\n        <h5>\n            In the example shown above, consider a model describing users\' todo list. It has two objects, users and\n            tasks. Each user can have several tasks (todo), but a task has a single user associated with (created_by). Thus, the users-tasks relationship is a one to many relationship between users and tasks:\n          <br/><br/>\n          The \'users\' object will have a \'todo\' relationship field, which establishes the \'one\' side of the relationship by creating a collection of tasks objects for each user:\n        </h5>\n<pre><code>"todo": {"collection": "tasks","via": "created_by"}</code></pre>\n        <h5>\n          The \'tasks\' object will have \'created_by\' a relationship field, which establishes the \'many\' side of the relationship by linking each task back to an individual user instance of type \'users\':\n        </h5>\n<pre><code>"created_by": {"object": "users"}</code></pre>\n        <br/>\n        <h4><u>Many-to-Many Relationship</u></h4>\n        <h5>\n            Many-to-Many relationships between objects are added by adding a new object that has a one-to-many relationship with each object participating in the many-to-many relation - <a href="http://docs.backand.com/en/latest/getting_started/objects/index.html#many-to-many-relationship" target="_blank">read more</a>.<br/>\n        </h5>\n        <h5>\n            As an example, consider a different model describing tasks collaboration. It has two objects, users and\n            tasks. Each user can own several tasks, and each task can have several users associated with. Thus, the users-tasks relationship is many to many relationship between users and tasks.<br/>\n        </h5>\n        <h5>\n            To implement the many-to-many relationship we just need to add a new object - "users-tasks" - with\n            one-to-many relationships to both users and tasks objects.<br/>\n        </h5>\n        <h4><u>Example</u></h4>\n <pre><code>\n[\n  {\n    "name": "tasks",\n    "fields": {\n      "users": {\n        "collection": "users-tasks",\n        "via": "task"\n      },\n      "description": {\n        "type": "string"\n      },\n      "completed": {\n        "type": "boolean"\n      }\n    }\n  },\n  {\n    "name": "users-tasks",\n    "fields": {\n      "task": {\n        "object": "tasks"\n      },\n      "user": {\n        "object": "users"\n      }\n    }\n  },\n  {\n    "name": "users",\n    "fields": {\n      "tasks": {\n        "collection": "users-tasks",\n        "via": "user"\n      },\n      "email": {\n        "type": "string"\n      },\n      "firstName": {\n        "type": "string"\n      },\n      "lastName": {\n        "type": "string"\n      }\n    }\n  }\n]\n</code></pre>\n    </div>\n  </div>\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/log/activity.html",'<section class="page-form-ele page ng-scope">\n  <section class="panel panel-default">\n    <div class="panel-heading">\n      <strong> {{log.title}} </strong>\n      <ba-help-link key="{{log.helpKey}}" with-text="false"></ba-help-link>\n      <div us-spinner spinner-key="loading" spinner-start-active></div>\n    </div>\n    <div class="panel-body">\n      <fieldset class="collapsible-fieldset"\n                ng-class="{\'fieldset-open\': log.showFilter, \'fieldset-closed\': !log.showFilter}">\n\n        <legend ng-click="log.toggleShowFilter()">\n          <a href="">\n            Filter Exceptions</a>\n        </legend>\n\n        <div ng-show="log.showFilter">\n\n          <bknd-filter-form query="log.filterQuery"\n                            fields="log.filterOptions.fields"\n                            operators="log.filterOptions.operators"\n                            no-repeat="true"\n                            disable-value="log.disableValue"\n                            on-submit="log.filterData()">\n          </bknd-filter-form>\n\n        </div>\n      </fieldset>\n\n      <!-- Data Grid -->\n      <div id="logGrid" ui-grid="log.gridOptions" ui-grid-resize-columns class="grid" ng-show="log.gridOptions.totalItems > 0"></div>\n      <div ng-show="log.gridOptions.totalItems == 0">\n        <h3>No {{log.title}}</h3>\n      </div>\n      <div ng-show="log.gridOptions.totalItems > 0" class="row">\n        <div class="col-md-5">\n          <pagination total-items="log.gridOptions.totalItems" ng-model="log.paginationOptions.pageNumber" max-size="5" class="pagination-sm" boundary-links="true" rotate="false" items-per-page="log.paginationOptions.pageSize" previous-text="&lsaquo;" next-text="&rsaquo;"></pagination>\n        </div>\n        <div class="col-md-2" style="margin-top:20px;">\n          Page size:\n          <select class="ui-select" ng-model="log.paginationOptions.pageSize" >\n            <option ng-repeat="size in log.paginationOptions.pageSizes">{{size}}</option>\n          </select>\n        </div>\n        <div class="col-md-5" style="margin-top:20px;">\n          <span class="pull-right">Showing {{log.paginationOptions.pageSize * (log.paginationOptions.pageNumber-1) +1}} to {{log.pageMax(log.paginationOptions.pageSize, log.paginationOptions.pageNumber, log.gridOptions.totalItems)}} of {{log.gridOptions.totalItems}} rows</span>\n        </div>\n      </div>\n    </div>\n  </section>\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/log/log.html",'<section class="page-form-ele page ng-scope">\n  <section class="panel panel-default">\n    <div class="panel-heading">\n      <strong> {{log.title}} </strong>\n      <ba-help-link key="{{log.helpKey}}" with-text="false"></ba-help-link>\n      <div us-spinner spinner-key="loading" spinner-start-active></div>\n    </div>\n    <div class="panel-body">\n      <fieldset class="collapsible-fieldset"\n                ng-class="{\'fieldset-open\': log.showFilter, \'fieldset-closed\': !log.showFilter}">\n\n        <legend ng-click="log.toggleShowFilter()">\n          <a href="">\n            Filter Log</a>\n        </legend>\n\n        <div ng-show="log.showFilter">\n\n          <bknd-filter-form query="log.filterQuery"\n                            fields="log.filterOptions.fields"\n                            operators="log.filterOptions.operators"\n                            no-repeat="true"\n                            disable-value="log.disableValue"\n                            on-submit="log.filterData()">\n          </bknd-filter-form>\n\n        </div>\n      </fieldset>\n\n      <!-- Data Grid -->\n\n      <div id="logGrid" ui-grid="log.gridOptions" class="grid" ng-show="log.gridOptions.totalItems > 0"></div>\n      <div ng-show="log.gridOptions.totalItems == 0">\n        <h3>No {{log.title}}</h3>\n      </div>\n      <div ng-show="log.gridOptions.totalItems > 0" class="row">\n        <div class="col-md-5">\n          <pagination total-items="log.gridOptions.totalItems" ng-model="log.paginationOptions.pageNumber" max-size="5" class="pagination-sm" boundary-links="true" rotate="false" items-per-page="log.paginationOptions.pageSize" previous-text="&lsaquo;" next-text="&rsaquo;"></pagination>\n        </div>\n        <div class="col-md-2" style="margin-top:20px;">\n          Page size:\n          <select class="ui-select" ng-model="log.paginationOptions.pageSize" >\n            <option ng-repeat="size in log.paginationOptions.pageSizes">{{ ::size}}</option>\n          </select>\n        </div>\n        <div class="col-md-5" style="margin-top:20px;">\n          <span class="pull-right">Showing {{ log.paginationOptions.pageSize * (log.paginationOptions.pageNumber-1) +1}} to {{log.pageMax(log.paginationOptions.pageSize, log.paginationOptions.pageNumber, log.gridOptions.totalItems)}} of {{log.gridOptions.totalItems}} rows</span>\n        </div>\n      </div>\n    </div>\n  </section>\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/shared/header.html",'<header class="top-header clearfix"\n        ng-controller="HeaderController as header"\n        ng-click="header.showUserDropdown = false">\n\n  <!-- Logo -->\n  <div class="logo bg-dark">\n    <a ui-sref="apps.index">\n      <span>Backand</span>\n    </a>\n  </div>\n\n  <!-- needs to be put after logo to make it work -->\n  <div class="menu-button" toggle-off-canvas>\n    <span class="icon-bar"></span>\n    <span class="icon-bar"></span>\n    <span class="icon-bar"></span>\n  </div>\n\n  <div class="top-nav">\n    <ul class="nav-left list-unstyled" ng-hide="header.hideAppList()">\n      <li>\n        <a ui-sref="apps.index"><i class="ti-layers-alt" style="font-size: 25px;"></i></a>\n      </li>\n      <li class="search-box">\n        <div class="input-group">\n          <span class="input-group-addon">App: &nbsp;</span>\n          <div class="ui-select" style="font-weight: bold;">\n            <select ng-model="header.currentAppName"\n                    ng-change="header.goToApp()"\n                    ng-options="app.Name as app.Name for app in header.apps.list | orderBy:\'Name\'">\n            </select>\n          </div>\n          <div us-spinner spinner-key="loading-app" us-spinner="{length:10, radius: 10}" style="position: relative;left: 150px;top: -18px;"></div>\n        </div>\n      </li>\n    </ul>\n\n    <ul class="nav-right pull-right list-unstyled">\n      <li class="dropdown text-normal nav-profile">\n          <a ng-click="header.showUserDropdown = !header.showUserDropdown; $event.stopPropagation();"\n             href="" class="dropdown-toggle header-item" data-toggle="dropdown">\n              <span>\n                  <i class="ti-user"></i>\n                  <span class="bknd-username">{{::header.getCurrentUser().username}}</span>\n              </span>\n          </a>\n          <ul ng-show="header.showUserDropdown" class="dropdown-menu with-arrow hovering-menu pull-right">\n              <li class="bknd-username"><a>{{::header.getCurrentUser().username}}</a></li>\n              <li>\n                  <a href="" ng-click="header.changePassword()">\n                      <i class="ti-lock"></i>\n                      <span>Change Password</span>\n                  </a>\n              </li>\n              <li>\n                <a href="" ng-click="header.logout()">\n                  <i class="ti-export"></i>\n                  <span>Log Out</span>\n                </a>\n              </li>\n          </ul>\n      </li>\n      <li>\n        <a href="" ng-click="header.openVideoModal()" class="header-item header-video-btn">\n          <img class="header-video-img" src="assets/images/docs_pages/video-tutorials-button.png" />\n          <span class="header-video-title">Video Tutorials</span>\n        </a>\n      </li>\n    </ul>\n  </div>\n</header>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/shared/main_view.html",'<div class="app" id="app" ng-class="{\'nav-collapsed-min\' : main.hideNav()}">\n  <section ng-include=" \'views/shared/header.html\' "\n           id="header"\n           class="header-container ng-scope header-fixed bg-white">\n  </section>\n\n  <div class="main-container">\n\n    <aside ng-include="nav.showAppNav()"\n           ng-hide="main.hideNav()"\n           id="nav-container"\n           class="nav-container nav-fixed nav-vertical bg-dark"\n           ng-controller="NavCtrl as nav">\n    </aside>\n    <div id="content" class="content-container" autoscroll="true">\n      <section ui-view class="view-container"></section>\n\n    </div>\n  </div>\n</div>\n')
}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/shared/nav.html",'<div class="nav-wrapper">\n  <ul id="nav1" class="nav"\n      data-slim-scroll\n      data-collapse-nav>\n    <li ui-sref-active="active">\n      <a ui-sref="apps.index"> <i class="ti-layers-alt"></i><span>My Apps</span> </a>\n    </li>\n\n    <li ui-sref-active="active">\n      <a ui-sref="docs.getting-started-open"> <i class="ti-star"></i><span>Getting Started</span></a>\n    </li>\n\n    <li ui-sref-active="active">\n      <a ui-sref="docs.mobile-open"> <i class="ti-star"></i><span>Ionic Mobile Starter</span></a>\n    </li>\n\n    <li ui-sref-active="active">\n      <a ui-sref="docs.kickstart-open"> <i class="ti-star"></i><span>Kickstart Tutorial</span></a>\n    </li>\n\n    <li ui-sref-active="active">\n      <a href="http://docs.backand.com" target="_blank"> <i class="ti-star"></i><span>Documentation</span></a>\n    </li>\n\n    <!--<li>-->\n      <!--<a href="http://blog.backand.com/documentation/" target="_blank"><i class="ti-layout-media-overlay"></i><span>Documentation</span></a>-->\n    <!--</li>-->\n\n    <!--<li>-->\n      <!--<a href="http://blog.backand.com/questions/" target="_blank"><i class="ti-support"></i><span>Support</span></a>-->\n    <!--</li>-->\n  </ul>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/shared/nav_app.html",'<div class="nav-wrapper">\n  <ul id="nav2" class="nav" slim-scroll collapse-nav>\n\n  <li ng-class="{active: nav.state == \'app.show\', disabled: nav.DatabaseStatus != 1}" >\n    <a ng-click="nav.goTo(\'app.show\')" href="" ng-class="{disabled: nav.DatabaseStatus != 1}">\n      <i class="ba-icon-dashboard"></i>\n      <span>Dashboard</span>\n    </a>\n  </li>\n\n\n  <li ng-class="{active: nav.state == \'playground.orm\'}">\n    <a href="">\n      <i class="ba-icon-docs-and-api"></i>\n      <span>Docs & API</span>\n      <i class="ti-angle-double-right pull-right" style="font-size: 10px; margin-top: 7px; padding-left: 20px;"></i>\n    </a>\n    <ul>\n      <li ng-class="{active: nav.state == \'docs.get-started\'}">\n        <a ng-click="nav.goToAlways(\'docs.get-started\')" href="">\n          <i class="ba-icon-angularjs-quickstart"></i>\n          <span>AngularJS Quickstart</span>\n        </a>\n      </li>\n      <li ng-class="{active: nav.state == \'docs.mobile\'}">\n        <a ng-click="nav.goToAlways(\'docs.mobile\')" href="">\n          <i class="ba-icon-angularjs-quickstart"></i>\n          <span>Ionic Mobile Starter</span>\n        </a>\n      </li>\n      <li ng-class="{active: nav.state == \'docs.kickstart\'}">\n        <a ng-click="nav.goToAlways(\'docs.kickstart\')" href="">\n          <i class="ba-icon-kickstart-tutorial"></i>\n          <span>Kickstart Tutorial</span>\n        </a>\n      </li>\n      <li ng-class="{active: nav.state == \'docs.api-desc\', disabled: nav.DatabaseStatus != 1}">\n        <a ng-class="{disabled: nav.DatabaseStatus != 1}" ng-click="nav.goToLocation(\'http://docs.backand.com\')" href="">\n          <i class="ba-icon-documentation"></i>\n          <span>Documentation</span>\n        </a>\n      </li>\n      <li ng-class="{active: nav.state == \'playground.show\', disabled: nav.DatabaseStatus != 1}">\n        <a ng-class="{disabled: nav.DatabaseStatus != 1}" ng-click="nav.goTo(\'playground.show\')" href="">\n          <i class="ba-icon-rest-api-playground"></i>\n          <span>REST API Playground</span>\n        </a>\n      </li>\n\n      <!--<li ng-class="{active: nav.state == \'playground.orm\', disabled: nav.DatabaseStatus != 1}">-->\n      <!--<a ng-class="{disabled: nav.DatabaseStatus != 1}" ng-click="nav.goTo(\'playground.orm\')" href="">-->\n      <!--<i class="icon-orm-icon"></i>-->\n      <!--<span>ORM Playground</span>-->\n      <!--</a>-->\n      <!--</li>-->\n      <!--<li ng-class="{active: nav.state == \'playground.orm-usage\'}">-->\n      <!--<a ng-class="{disabled: nav.DatabaseStatus != 1}" ng-click="nav.goToAlways(\'playground.orm-usage\')" href="">-->\n      <!--<i class="ti-shortcode"></i>-->\n      <!--<span>ORM Usage</span>-->\n      <!--</a>-->\n      <!--</li>-->\n      <!--<li ng-class="{active: nav.state == \'playground.orm-config\'}">-->\n      <!--<a ng-class="{disabled: nav.DatabaseStatus != 1}" ng-click="nav.goToAlways(\'playground.orm-config\')" href="">-->\n      <!--<i class="ti-github"></i>-->\n      <!--<span>ORM Configuration</span>-->\n      <!--</a>-->\n      <!--</li>-->\n      <li ng-class="{active: nav.state == \'playground.todo\'}" ng-show="nav.isExampleApp()">\n        <a ng-class="{disabled: nav.DatabaseStatus != 1}" ng-click="nav.goToAlways(\'playground.todo\')" href="">\n          <i class="ba-icon-todo-example"></i>\n          <span>Todo Example</span>\n        </a>\n      </li>\n    </ul>\n  </li>\n  <li ng-class="{active: nav.isTablesActive(), disabled: nav.DatabaseStatus != 1}">\n    <a ng-class="{disabled: nav.DatabaseStatus != 1}"\n       ng-click="nav.tables.length == 0 && nav.app.connectionSource !== \'local\' ? nav.goTo(\'tables.notables\') : {}"\n       href="">\n      <i class="ba-icon-objects"></i>\n      <span>Objects</span>\n        <ba-tooltip tooltip-text="List of your objects which are the source of information about your data.\n        Generally, each object maps to a single database table.\n        Each object\'s page contains fields settings, server side actions, security, data-entry and REST API. "\n                    tooltip-placement="right"></ba-tooltip>\n      <i class="ti-angle-double-right pull-right"\n         style="font-size: 10px; margin-top: 7px; padding-left: 20px;"></i>\n    </a>\n    <ul class="scrollbar ex4" id="ex4">\n      <li ng-if="nav.app.connectionSource === \'local\'">\n        <a ui-sref="json_model">\n          <i class="ba-icon-model"></i>\n          <span>Model</span>\n        </a>\n      </li>\n\n      <li ng-class="{active: false }" ng-repeat="table in nav.tables">\n        <a ng-class="{disabled: false}"  ng-click="nav.showTable(table)" href="">\n          <i class="ba-icon-todo"></i>\n          <span>{{table.name}}</span>\n        </a>\n      </li>\n    </ul>\n  </li>\n\n  <li ng-class="{active: nav.state == \'dbQueries\', disabled: nav.DatabaseStatus != 1}" >\n    <a ng-class="{disabled: nav.DatabaseStatus == 1}" ng-click="nav.loadDbQueries()" href="">\n      <i class="ba-icon-quries"></i>\n      <span>Queries</span>\n      <ba-tooltip tooltip-text="Create your own custom queries objects" tooltip-placement="right" class=""></ba-tooltip>\n\n      <i class="ti-angle-double-right pull-right" style="font-size: 10px; margin-top: 7px; padding-left: 20px;" ng-if="nav.DatabaseStatus == 1"></i>\n    </a>\n    <ul>\n      <li ng-class="{active: false }" ng-if="nav.DatabaseStatus == 1">\n        <a ng-class="{disabled: nav.DatabaseStatus != 1}" ng-click="nav.newDbQuery()" href="">\n          <i class="ba-icon-new-query"></i>\n          <span>New Query</span>\n        </a>\n      </li>\n    </ul>\n    <ul class="scrollbar ex4">\n      <li ng-class="{active: nav.state == \'dbQueries.query\'}" ng-repeat="query in nav.queries">\n        <a ng-class="{disabled: nav.DatabaseStatus != 1}"  ng-click="nav.showDbQuery(query)" href="">\n          <i class="ti-write"></i>\n          <span>{{query.name}}</span>\n        </a>\n      </li>\n    </ul>\n  </li>\n\n  <li ng-class="{active: nav.state == \'security.users\', disabled: nav.DatabaseStatus != 1}">\n    <a ng-class="{disabled: nav.DatabaseStatus != 1}"  href="">\n      <i class="ba-icon-security-and-auth"></i>\n      <span>Security & Auth</span>\n      <ba-tooltip tooltip-text="General security configuration, users and roles" tooltip-placement="right" class=""></ba-tooltip>\n      <i class="ti-angle-double-right pull-right" style="font-size: 10px; margin-top: 7px; padding-left: 20px;"></i>\n    </a>\n    <ul>\n      <li ng-class="{active: nav.state == \'security.auth\', disabled: nav.DatabaseStatus != 1}">\n        <a ng-class="{disabled: nav.DatabaseStatus != 1}"  ng-click="nav.goTo(\'security.auth\')" href="">\n          <i class="ba-icon-configuration"></i>\n          <span>Configuration</span>\n          <ba-tooltip tooltip-text="Setting your application to be public or private" tooltip-placement="right" class=""></ba-tooltip>\n        </a>\n      </li>\n      <li ng-class="{active: nav.state == \'security.keys\', disabled: nav.DatabaseStatus != 1}">\n        <a ng-class="{disabled: nav.DatabaseStatus != 1}"  ng-click="nav.goTo(\'security.keys\')" href="">\n          <i class="ba-icon-keys"></i>\n          <span>Social & Keys</span>\n          <ba-tooltip tooltip-text="configure social sign-up and get API keys" tooltip-placement="right" class=""></ba-tooltip>\n        </a>\n      </li>\n      <li ng-class="{active: nav.state == \'security.users\', disabled: nav.DatabaseStatus != 1}">\n        <a ng-class="{disabled: nav.DatabaseStatus != 1}"  ng-click="nav.goTo(\'security.users\')" href="">\n          <i class="ba-icon-registered-users"></i>\n          <span>Registered Users</span>\n          <ba-tooltip tooltip-text="Manage your app\'s users" tooltip-placement="right" class=""></ba-tooltip>\n        </a>\n      </li>\n      <li ng-class="{active: nav.state == \'security.team\', disabled: nav.DatabaseStatus != 1}">\n        <a ng-class="{disabled: nav.DatabaseStatus != 1}"  ng-click="nav.goTo(\'security.team\')" href="">\n          <i class="ba-icon-admins"></i>\n          <span>Team</span>\n          <ba-tooltip tooltip-text="Manage your administration team" tooltip-placement="right" class=""></ba-tooltip>\n        </a>\n      </li>\n      <li ng-class="{active: nav.state == \'security.actions\', disabled: nav.DatabaseStatus != 1}">\n        <a ng-class="{disabled: nav.DatabaseStatus != 1}"  ng-click="nav.goTo(\'security.actions\')" href="">\n          <i class="ba-icon-security-actions"></i>\n          <span>Security Actions</span>\n          <ba-tooltip tooltip-text="Manage users actions, configure sign-up and social emails"\n                      tooltip-placement="right"\n                      class=""></ba-tooltip>\n        </a>\n      </li>\n      <li ng-class="{active: nav.state == \'security.templates\', disabled: nav.DatabaseStatus != 1}">\n        <a ng-class="{disabled: nav.DatabaseStatus != 1}"  ng-click="nav.goTo(\'security.templates\')" href="">\n          <i class="ba-icon-secruirty-templates"></i>\n          <span>Security Templates</span>\n          <ba-tooltip tooltip-text="Reusable permissions that allows you to have more granular control over the CRUD actions of each object" tooltip-placement="right" class=""></ba-tooltip>\n        </a>\n      </li>\n    </ul>\n  </li>\n  <li ng-class="{active: nav.state == \'log.activity\', disabled: nav.DatabaseStatus != 1}">\n    <a ng-class="{disabled: nav.DatabaseStatus != 1}"  href="">\n      <i class="ba-icon-log"></i>\n      <span>Log</span>\n      <ba-tooltip tooltip-text="Tracks all app configuration changes, object data changed and exceptions"\n                  tooltip-placement="right" class=""></ba-tooltip>\n      <i class="ti-angle-double-right pull-right" style="font-size: 10px; margin-top: 7px; padding-left: 20px;"></i>\n    </a>\n    <ul>\n      <li ng-class="{active: nav.state == \'log.config\', disabled: nav.DatabaseStatus != 1}">\n        <a ng-class="{disabled: nav.DatabaseStatus != 1}"  ng-click="nav.goTo(\'log.config\')" href="">\n          <i class="ba-icon-configuration"></i>\n          <span>Configuration</span>\n        </a>\n      </li>\n      <li ng-class="{active: nav.state == \'log.history\', disabled: nav.DatabaseStatus != 1}">\n        <a ng-class="{disabled: nav.DatabaseStatus != 1}"  ng-click="nav.goTo(\'log.history\')" href="">\n          <i class="ba-icon-data-history"></i>\n          <span>Data History</span>\n        </a>\n      </li>\n      <li ng-class="{active: nav.state == \'log.exception\', disabled: nav.DatabaseStatus != 1}">\n        <a ng-class="{disabled: nav.DatabaseStatus != 1}"  ng-click="nav.goTo(\'log.exception\')" href="">\n          <i class="ba-icon-server-side-exceptions"></i>\n          <span>Server Side Exceptions</span>\n        </a>\n      </li>\n    </ul>\n  </li>\n\n\n    <li ng-class="{active: nav.state == \'database.show\' || nav.state == \'database.edit\'}">\n      <a href="">\n        <i class="ba-icon-settings"></i>\n        <span>Settings</span>\n        <span class="status status-{{nav.getDBStatus()}} pull-left"></span>\n        <i class="ti-angle-double-right pull-right" style="font-size: 10px; margin-top: 7px; padding-left: 20px;"></i>\n      </a>\n      <ul>\n        <li ng-class="{active: nav.state == \'app.edit\', disabled: nav.DatabaseStatus != 1}">\n          <a ng-click="nav.goTo(\'app.edit\')" href="">\n            <i class="ba-icon-general"></i>\n            <span>General</span>\n          </a>\n        </li>\n        <li ng-if="nav.DatabaseStatus == 1" ng-class="{active: nav.state == \'database.show\' || nav.state == \'database.edit\'}">\n          <a ng-class="{disabled: nav.DatabaseStatus != 1}" ng-click="nav.goTo(\'database.show\')" href="">\n            <i class="ba-icon-database"></i>\n            <span>Database</span>\n          </a>\n        </li>\n        <li ng-if="nav.DatabaseStatus == 0" ng-class="{active: nav.state == \'database.show\' || nav.state == \'database.edit\'}">\n          <a ng-class="{disabled: nav.DatabaseStatus != 0}" ng-click="nav.goToAlways(\'database.edit\')" href="">\n            <i class="ti-wand"></i>\n            <span>Connect</span>\n          </a>\n        </li>\n        <!--<li ng-class="{active: nav.state == \'database.add-tables\', disabled: nav.DatabaseStatus != 1}">\n          <a ng-class="{disabled: nav.DatabaseStatus != 1}" ng-click="nav.goTo(\'database.add-tables\')" href="">\n            <i class="ti-file"></i>\n            <span>Templates</span>\n          </a>\n        </li>-->\n      </ul>\n    </li>\n\n  <!--<li ng-class="{active: nav.state == \'backoffice.edit\', disabled: nav.DatabaseStatus != 1}">\n    <a ng-class="{disabled: nav.DatabaseStatus !== 1}"  href="">\n      <i class="icon-backoffice-icon"></i>\n      <span>Back Office</span>\n      <i class="ti-angle-double-right pull-right" style="font-size: 10px; margin-top: 7px; padding-left: 20px;"></i>\n    </a>\n    <ul>\n      <li ng-class="{active: nav.state == \'backoffice.edit\', disabled: nav.DatabaseStatus !== 1}">\n        <a ng-class="{disabled: nav.DatabaseStatus !== 1}"  ng-click="nav.goTo(\'backoffice.edit\')" href="">\n          <i class="icon-style"></i>\n          <span>Templates</span>\n        </a>\n      </li>\n      <li ng-class="{active: nav.state == \'backoffice.edit\', disabled: nav.DatabaseStatus !== 1}">\n        <a ng-class="{disabled: nav.DatabaseStatus !== 1}"  ng-click="nav.goToLocation(\'http://\' + nav.appName + \'.backand.net\')" href="">\n          <i class="icon-cloud"></i>\n          <span>Hosted Back Office</span>\n        </a>\n      </li>\n\n      <li ng-class="{active: nav.state == \'backoffice.cust\'}">\n        <a ng-click="nav.goToAlways(\'backoffice.cust\')" href="">\n          <i class="icon-magic"></i>\n          <span>Customization</span>\n        </a>\n      </li>\n\n      <li ng-class="{active: nav.state == \'backoffice.code\'}">\n        <a ng-click="nav.goToAlways(\'backoffice.code\')" href="">\n          <i class="icon-file-code-o"></i>\n          <span>Code Example</span>\n        </a>\n      </li>\n    </ul>\n  </li>-->\n</ul>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/shared/nav_connect_db.html",'<div class="nav-wrapper">\n  <ul id="nav1" class="nav"\n      data-slim-scroll\n      data-collapse-nav>\n    <li ui-sref-active="active">\n      <a ui-sref="apps.index"> <i class="ti-layers-alt"></i><span>My Apps</span> </a>\n    </li>\n\n    <li ui-sref-active="active" ng-hide="nav.app.DatabaseStatus == 2">\n      <a ng-if="!nav.isExampleApp()" ui-sref="database.edit"> <i class="ti-star"></i><span>Connect to Database</span></a>\n      <a ng-if="nav.isExampleApp()" ui-sref="database.example"> <i class="ti-star"></i><span>Connect to Database</span></a>\n    </li>\n\n    <li ui-sref-active="active">\n      <a ui-sref="docs.get-started" test-hook="nav.connect-db.docs.get-started">\n        <i class="ti-star"></i><span>Getting Started</span>\n      </a>\n    </li>\n\n    <li ui-sref-active="active">\n      <a ui-sref="docs.kickstart"> <i class="ti-star"></i><span>Kickstart Tutorial</span></a>\n    </li>\n\n    <li ui-sref-active="active">\n      <a href="http://docs.backand.com/en/latest/apidescription/index.html" target="_blank"> <i class="ti-star"></i><span>API Documentation</span></a>\n    </li>\n\n  </ul>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/shared/video_tutorials.html",'<a href="" ng-click="videoCtrl.close()" class="video-modal-close"><img\n  src="assets/images/docs_pages/close-modal.png"></a>\n<div class="video-modal-title">Video Tutorials</div>\n\n<div ng-repeat="video in videoCtrl.videos" class="video-container">\n  <div class="video-img-container">\n    <img class="video-img" ng-src="{{video.img}}" alt="" />\n    <a href="" class="play-img" video-modal url="video.href"\n       title="video.title">\n      <img src="assets/images/docs_pages/play.png" />\n    </a>\n  </div>\n\n  <div class="video-text-container">\n    <div class="video-title">{{video.title}}</div>\n\n  </div>\n</div>\n\n\n\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/shared/video_tutorials_window.html",'<div modal-render="{{$isRendered}}"\n     tabindex="-1"\n     role="dialog"\n     class="modal fade"\n     modal-animation-class="fade"\n     ng-class="{in: animate}"\n     ng-style="{\'z-index\': 1050 + index*10, display: \'block\'}"\n     ng-click="close($event)">\n  <div class="video-modal-dialog">\n    <div modal-transclude>\n    </div>\n  </div>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/no_tables.html",'<section class="page-form-ele page ng-scope">\n  <section class="panel panel-default">\n    <div class="panel-heading">\n        <strong> Objects </strong>\n        <button id="sync_button" type="button" class="btn btn-w-md btn-gap-v btn-round btn-primary btn-md" ng-click="tables.sync()" ladda="tables.syncing" data-style="expand-right" style="margin-left: 50px;">Sync with Database</button>\n\n        <li class=" btn btn-gap-v btn-xs dropdown tables-alert" ng-class="tables.alertClass" style="margin-left: 10px;">\n            <a href="javascript:;" class="dropdown-toggle" data-toggle="dropdown">\n                <i class="ti-bell" ></i>\n            </a>\n            <div class="dropdown-menu with-arrow panel panel-default">\n                <div class="panel-heading">\n                    Sync Status\n                </div>\n                <ul class="list-group">\n                    <li class="list-group-item" ng-repeat="message in tables.getMessages()" style="text-transform: none;">\n                        {{message}}\n                    </li>\n                </ul>\n            </div>\n        </li>\n      <div us-spinner spinner-key="loading" spinner-start-active></div>\n    </div>\n\n    <div class="panel-body">\n      <div class="ui-bullet">\n        <div class="btn-icon btn-icon-round btn-icon-lg bg-danger">\n          <i class="ti-wand"></i>\n        </div>\n        <div class="ui-bullet-content">\n          <br/><h4>Click the <a href="" ng-click="tables.sync()">Sync with Database</a> to add the objects to your app</h4>\n        </div>\n      </div>\n    </div>\n  </section>\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/show.html",'<section class="page-form-ele page ng-scope">\n  <section class="panel panel-default">\n    <div class="panel-heading">\n        <strong> Objects  </strong>\n        <button id="sync_button" type="button" class="btn btn-w-md btn-gap-v btn-round btn-primary btn-md" ng-click="tables.sync()" ladda="tables.syncing" data-style="expand-right" style="margin-left: 50px;">Sync Objects</button>\n\n        <li class=" btn btn-gap-v btn-xs dropdown tables-alert" ng-class="tables.alertClass" style="margin-left: 10px;">\n            <a href="javascript:;" class="dropdown-toggle" data-toggle="dropdown">\n                <i class="ti-bell" ></i>\n            </a>\n            <div class="dropdown-menu with-arrow panel panel-default">\n                <div class="panel-heading">\n                    Sync Status\n                </div>\n                <ul class="list-group">\n                    <li class="list-group-item" ng-repeat="message in tables.getMessages()" style="text-transform: none;">\n                        {{message}}\n                    </li>\n                </ul>\n            </div>\n        </li>\n      <div us-spinner spinner-key="loading" spinner-start-active></div>\n    </div>\n\n    <div class="panel-body">\n        <div class="row col-sm-10 col-sm-offset-1">\n            <table class="table table-striped">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Descriptive Field</th>\n                    <th>Pre-Filter Rule</th>\n                    <th>Default Sort Order</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr ng-repeat="table in tables.tables">\n                    <td>{{ table.name }}</td>\n                    <td>{{table.columnDisplayinTitle}}</td>\n                    <td>{{table.permanentFilter}}</td>\n                    <td>{{table.defaultSort}}</td>\n                </tr>\n                </tbody>\n            </table>\n            <div ng-show="tables.tables.length == 0" class="label-info col-xs-2">No Objects</div>\n        </div>\n    </div>\n  </section>\n\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/show_single_table.html",'<section class="page-form-ele page ng-scope">\n  <section class="panel panel-default">\n    <div class="panel-heading database-heading">\n      <strong style="text-transform:none"> Object - {{singleTable.tableName}} </strong>\n      <button ng-if="true" id="sync_button" type="button" class="btn btn-w-md btn-gap-v btn-round btn-primary btn-md" ng-click="singleTable.sync()" ladda="singleTable.syncing" data-style="expand-right" style="margin-left: 50px;">Sync with Database</button>\n      <span ng-if="true" ng-click="singleTable.showMessages = !singleTable.showMessages" class=" btn btn-gap-v btn-xs dropdown tables-alert" ng-class="singleTable.alertClass" style="margin-left: 10px;">\n          <i class="ti-bell" ></i>\n        <div ng-show="singleTable.showMessages" class="dropdown-menu with-arrow hovering-menu panel panel-default">\n          <div class="panel-heading">\n            Sync Status\n          </div>\n          <ul class="list-group">\n            <li class="list-group-item single-table-message" ng-repeat="message in singleTable.messages" style="text-transform: none;">\n              {{message}}\n            </li>\n          </ul>\n        </div>\n      </span>\n      <div us-spinner spinner-key="loading" spinner-start-active></div>\n    </div>\n\n    <div class="panel-body">\n      <div>\n\n        <div class="ui-tab-container ui-tab-horizontal">\n          <i class="fa fa-sitemap goto-diagram-icon"\n             ui-sref="erd_model({tableName: singleTable.tableName})"\n             tooltip="Go to model diagram"\n             tooltip-placement="left"></i>\n          <tabs data="singleTable.tabs" type="tabs" />\n          <div class="tab-content" ui-view></div>\n\n        </div>\n        <br/>\n      </div>\n    </div>\n  </section>\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/database/exs_data/exs_source.html",'<br/>\n\n<div class="row">\n  <div class="col-md-10 col-md-offset-1">\n    <div class="row">\n\n      <a class="icon-box col-md-2 col-md-offset-1" >\n        <div class="icon-container" ng-class="{active : dbedit.dataName === \'mysql\'}" ng-click="dbedit.chooseDb(\'mysql\')">\n          <img src="assets/images/mysql.png" style="vertical-align: inherit;"/>\n        </div>\n        <div class="desc-container">\n          <h4></h4>\n        </div>\n      </a>\n\n      <a class="icon-box col-md-2">\n        <div class="icon-container"\n             ng-class="{active : dbedit.dataName === \'postgresql\'}" ng-click="dbedit.chooseDb(\'postgresql\')">\n          <img src="assets/images/postgresql.jpg" style="vertical-align: inherit;"/>\n        </div>\n        <div class="desc-container">\n          <h4></h4>\n        </div>\n      </a>\n\n      <a class="icon-box col-md-2">\n        <div class="icon-container" ng-class="{active : dbedit.dataName === \'sqlserver\' || dbedit.dataName === \'sqlazure\'}" ng-click="dbedit.chooseDb(\'sqlserver\')">\n          <img src="assets/images/sqlserver.png" style="vertical-align: inherit;"/>\n        </div>\n        <div class="desc-container">\n          <h4></h4>\n        </div>\n      </a>\n\n      <a class="icon-box col-md-2" >\n        <div class="icon-container" ng-class="{active : dbedit.dataName === \'oracle\'}" ng-click="dbedit.chooseDb(\'oracle\')">\n          <img src="assets/images/oracle.jpg" style="vertical-align: inherit;"/>\n        </div>\n        <div class="desc-container">\n          <h4></h4>\n        </div>\n      </a>\n\n      <a class="icon-box col-md-2"  >\n        <div class="icon-container" ng-class="{active : false}" style="border: none;" ng-click="dbedit.chooseDb(\'mongodb\')">\n          <img src="assets/images/mongodb.png"/>\n        </div>\n        <div class="desc-container">\n          <h4></h4>\n        </div>\n      </a>\n    </div>\n  </div>\n</div>\n\n<div class="divider divider-dashed divider-lg pull-in"></div>\n\n<form class="form-horizontal" role="form" ng-submit="dbedit.sumbitForm()">\n\n  <div class="row">\n    <div class="col-md-5 col-md-offset-1">\n\n    <div class="form-group">\n        <label for="server" class="col-sm-4 control-label">Endpoint</label>\n        <div class="col-sm-8">\n            <input type="text" class="form-control" ng-model="dbedit.data.server" id="server" placeholder="Remote database server hostname" required>\n        </div>\n    </div>\n\n      <div class="form-group">\n        <label for="database" class="col-sm-4 control-label">DB Name</label>\n        <div class="col-sm-8">\n          <input type="text" class="form-control" ng-model="dbedit.data.database" id="database" placeholder="Database name" required>\n        </div>\n      </div>\n\n      <div ng-switch on="dbedit.dataName">\n        <div class="form-group row" ng-switch-when=\'mysql\'>\n          <label for="usingSsh" class="col-sm-4 control-label">Use SSH</label>\n\n          <div class="col-sm-8">\n              <span class="ui-select" id="usingSsh">\n                  <select name="usingSsh" class="Sitedropdown" ng-model="dbedit.data.usingSsh" required>\n                      <option value=true>Yes</option>\n                      <option value=false>No</option>\n                  </select>\n              </span>\n          </div>\n        </div>\n\n        <div class="form-group" ng-switch-when=\'postgresql\'>\n          <label for="usingSsl" class="col-sm-4 control-label">Use SSL\n          </label>\n          <div class="col-sm-8">\n              <span class="ui-select" id="usingSsl">\n                  <select name="usingSsl" class="Sitedropdown" ng-model="dbedit.data.usingSsl" require>\n                      <option value=true>Yes</option>\n                      <option value=false>No</option>\n                  </select>\n              </span>\n              <span style="padding-left:28px;"><ba-tooltip tooltip-text="use \'Yes\' for Heroku Postgre database"\n                           tooltip-placement="right"></ba-tooltip></span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class="col-md-5 col-md-offset-0">\n      <div class="form-group">\n        <label for="UserName" class="col-sm-4 control-label">Username</label>\n\n        <div class="col-sm-8">\n            <input type="text" class="form-control" ng-model="dbedit.data.username" id="UserName" placeholder="Name of user for your DB instance" required>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label for="password" class="col-sm-4 control-label">Password</label>\n\n        <div class="col-sm-8">\n          <input type="password" class="form-control" ng-model="dbedit.data.password" id="password" placeholder="" required>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n  <div ng-if="dbedit.data.usingSsh === \'true\'">\n\n    <div class="divider divider-dashed divider-lg pull-in"></div>\n\n    <div class="row">\n      <div class="col-md-5 col-md-offset-1">\n\n        <div class="form-group" >\n          <label for="sshRemoteHost" class="col-sm-4 control-label">SSH Remote Host</label>\n\n          <div class="col-sm-8">\n            <input type="text" class="form-control"  ng-model="dbedit.data.sshRemoteHost" id="sshRemoteHost" placeholder="Address of your remote SSH host" required>\n          </div>\n        </div>\n\n        <div class="form-group" >\n          <label for="sshUser" class="col-sm-4 control-label">SSH User Name</label>\n\n          <div class="col-sm-8">\n            <input type="text" class="form-control" ng-model="dbedit.data.sshUser" id="sshUser" placeholder="" required>\n          </div>\n        </div>\n      </div>\n\n      <div class="col-md-5 col-md-offset-0">\n        <div class="form-group" >\n          <label for="sshPort" class="col-sm-4 control-label">SSH Port</label>\n\n          <div class="col-sm-8">\n            <input type="number" class="form-control" ng-model="dbedit.data.sshPort" id="sshPort" placeholder="" required>\n          </div>\n        </div>\n\n        <div class="form-group" ng-if="!dbedit.data.sshPrivateKey" >\n          <label for="sshPassword" class="col-sm-4 control-label">SSH Password</label>\n\n          <div class="col-sm-8">\n              <input type="password" class="form-control" ng-model="dbedit.data.sshPassword" ng-disabled="dbedit.data.sshPrivateKey"\n                     id="sshPassword" placeholder="" required>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class="form-group" ng-if="!dbedit.data.usingSsh">\n      <div class="row">\n        <div class="col-md-5 col-md-offset-1">\n\n          <label for="sshPrivateKey" class="col-sm-2 control-label">SSH Private Key</label>\n\n          <div class="col-sm-10">\n            <input type="password" class="form-control" ng-model="dbedit.data.sshPrivateKey" ng-disabled="dbedit.data.sshPassword"\n                   id="sshPrivateKey" placeholder="" required>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class="divider divider-dashed divider-lg pull-in"></div>\n\n  <div class="row">\n    <div class="form-group">\n      <div class="text-center">\n        <button type="submit"  ng-disabled="form.$invalid || dbedit.databaseStatus == 2"\n                class="btn btn-success btn-lg btn-w-lg" ladda="dbedit.loading" data-style="expand-right">\n          Connect\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n</form>\n\n<div class="divider divider-solid"></div>\n\n<div class="panel-body">\n    <div class="ui-bullet">\n        <div class="btn-icon btn-icon-round btn-icon-lg bg-danger">\n            <i class="ti-help"></i>\n        </div>\n        <div class="ui-bullet-content">\n            <h4><br/><a ng-click="dbedit.showHelp = !dbedit.showHelp" href="" >Need help setting up security</a></h4>\n            <p></p>\n        </div>\n    </div>\n    <div class="ui-tab-container ui-tab-vertical" ng-show="dbedit.showHelp">\n        <tabset class="ui-tab">\n            <tab heading="AWS RDS VPC Security Groups">\n                <h4>If you are using VPC Security Groups please follow these instructions:</h4>\n                <br/>\n                <p> <span class="badge badge-info">1</span>\n                    <a target="_blank" href="https://console.aws.amazon.com/rds/home#dbinstances:" target="_blank">\n                        Enter\n                        your AWS console\n                    </a> and expand your DB instance.\n                </p>\n                <br/>\n                <p>\n                    <span class="badge badge-info">2</span> On the "Security and Network" column click the "Security Groups" link.\n                </p>\n                <br/>\n                <p>\n                    <span class="badge badge-info">3</span> Select the "Inbound" tab (lower part of the screen), and click the "Edit" button.\n                </p>\n                <br/>\n                <p><span class="badge badge-info">4</span>\n                    Click "Add Rule" on the bottom of the pane, select the "Type" based on your DB Product\n                    (MySQL, MS SQL Server or Custom TCP Rule for Oracle and PostgreSQL). If you choose\n                    "Custom" then enter the "Port Range" (you can get this info from your DB Instance\n                    endpoint url), for "Source" field enter 52.7.37.90/32 and save the rule.\n                </p>\n                <br/>\n                <p><article class="photo-box"><div class="photo-container"><img src="assets/images/security-group.png" /></div></article></p>\n            </tab>\n            <tab heading="AWS RDS DB Security Groups">\n                <h4>If you are using DB Security Groups please follow these instructions:</h4>\n                <br/>\n                <p><span class="badge badge-info">1</span> Sign in to the AWS Management Console and <a href="https://console.aws.amazon.com/rds/">open the Amazon RDS console</a>.</p>\n                <br/>\n                <p><span class="badge badge-info">2</span> Select Security Groups from the navigation pane on the left side of the console window.</p>\n                <p>Select the details icon for the DB security group you want to authorize.</p>\n                <br/>\n                <p><span class="badge badge-info">3</span> In the details page for your security group select the Connection type: CIDR/IP</p>\n                <p>Enter the Backand CIDR for the ingress rule 52.7.37.90/32 into the CIDR text box, and click Authorize.</p>\n                <p><article class="photo-box"><div class="photo-container"><img src="assets/images/security-cidr.png" /></div></article></p>\n                <br/>\n                <p><span class="badge badge-info">4</span> The status of the ingress rule will be authorizing until the new ingress rule has been applied to all DB instances that are associated with the DB security group.</p>\n                <p>After the ingress rule has been successfully applied, the status will change to authorized.\n                    for more information <a target="_blank" href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithSecurityGroups.html">click here</a></p>\n            </tab>\n            <tab heading="General Cloud Database">\n                <h4>Connecting your database to Backand requires:</h4>\n                <br/>\n                <p><span class="badge badge-info">1</span> Server must allow a connection over the Internet.</p>\n                <br/>\n                <p><span class="badge badge-info">2</span> Firewall must allow a connection for IP: 52.7.37.90, through Endpoint\'s port.</p>\n                <br/>\n                <p><span class="badge badge-info">3</span> Must grant permissions on your database to username: {{dbedit.data.username}}.</p>\n            </tab>\n        </tabset>\n        <br/>\n    </div>\n</div>\n')
}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/database/new_data/new_source.html",'<div class="db-footer" data-ng-init="dbedit.loadOpt()">\n  <button type="submit" ng-disabled="form.$invalid" class="btn btn-success btn-lg btn-w-lg"\n        ladda="dbedit.loading" data-style="expand-right"\n        ng-click="dbedit.create()"\n        test-hook="database-edit.create">Next</button>\n  <button class="btn btn-info btn-lg btn-w-lg "\n          ng-click="dbedit.showHelp()">Help</button>\n</div>\n<div ng-cloak>\n  <angled-window ng-show="dbedit.showHelpDialog"\n                 title="Help"\n                 id="help"\n                 grouping="w"\n                 close-function="dbedit.showHelpDialog=false"\n                 rolled-up="false"\n                 css-class="model-help"\n                  style="top:100px;">\n    <div ng-include="\'views/docs/orm_help.html\'"></div>\n  </angled-window>\n</div>\n<div class="db-tab-content">\n\n  <div class="row">\n    <div class="col-md-8 col-lg-9">\n      <div class="db-panel-body-description">\n        <p>Select a database model example to use as the starting point for your app\'s database,<br/>\n          or add your own model by editing the model in the "Custom" tab - <a href="" ng-click="dbedit.showHelp()">Need help?</a></h4></p>\n      </div>\n\n      <div class="row">\n\n        <div class="col-xs-3 db-nav-position-bottom">\n          <ul class="db-nav db-nav-tabs "\n              ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}">\n            <li ng-class="{active: dbedit.template === dbedit.customTemplate}" class="pull-left">\n              <a ng-click="dbedit.customize()" href=""\n                 tooltip="{{ ::dbedit.customTemplate.description }}" test-hook="database-edit.json.custom">\n                {{dbedit.customTemplate.title}}\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <div class="col-xs-9 pull-right">\n          <ul class="db-nav db-nav-tabs pull-right "\n              ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}">\n\n            <li class="db-ace-example-title">\n              Examples:\n            </li>\n            <li ng-class="{active: dbedit.template === template}"\n                ng-repeat="template in dbedit.templates | orderBy:\'order\'" class="">\n              <a ng-click="dbedit.showFile(template)" href="" tooltip="{{ ::template.description }}">\n                {{ ::template.title}}\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class="row">\n    <div class="col-md-8 col-lg-9">\n      <bknd-ace-features editor="dbedit.ace.editor">\n        <div\n          ui-ace="{onLoad : dbedit.ace.onLoad, theme:\'monokai\', mode: \'json\', firstLineNumber: 1, rendererOptions: { fontSize: 15 } }"\n          class="form-control ace-db-template"\n          name="tableTemplate"\n          id="tableTemplate"\n          ng-model="dbedit.template.schema"\n          required\n          ng-pattern="codeRegex"\n          style="resize: vertical; height: 500px;">\n        </div>\n      </bknd-ace-features>\n\n      <div class="notice">Id is added to all objects automatically, please do not add it yourself</div>\n\n    </div>\n\n    <div class="col-md-4 col-lg-3">\n      <div class="db-types-title"><span>Field Types</span>\n      <span><ba-tooltip tooltip-text="Click on a type to insert it in the editor"></ba-tooltip></span>\n      </div>\n      <br/>\n\n      <div class="db-types" ng-repeat="fieldType in dbedit.fieldTypes" ng-click="dbedit.insertTypeAtChar(fieldType)"\n           ng-mouseover="fieldHover = true">\n        <i class="ti-angle-left"></i>\n        {{fieldType}}\n      </div>\n      <br/>\n\n      <div class="db-note">\n        <p>\n          In <b>one to many relationship</b> between objects users and items:</br>\n          In the many side of the relationship (object items), we specify that each row relates to one row in the\n          other object users.<br/>\n          <b>"user": { "object": "users" }</b></br>\n          In the one side of the relationship (object users), we specify that each row relates to several rows in\n          items:<br/>\n          <b>"items": { "collection": "items", "via": "user" }</b>\n        </p>\n      </div>\n      <br/>\n    </div>\n  </div>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/security/Actions/actions.html",'<section class="page-form-ele page ng-scope">\n  <section class="panel panel-default">\n    <div class="panel-heading">\n      <strong> Security Actions </strong>\n      <div us-spinner spinner-key="loading" spinner-start-active></div>\n    </div>\n    <div class="panel-body">\n      <div>\n        The actions on this page, much like those on the other pages of the application, allow you to define custom\n        actions to occur at each point in the CRUD conversation against an object, or when called by\n        on demand action.<br/>\n        <b>**note:</b> These actions, though, are tied specifically to the internal Backand\n        Users object only\n        <ba-help-link key="securityActions"></ba-help-link>\n      </div>\n      <div class="field-group">\n        <div class="group-inner">\n          <ng-include src="\'views/tables/rules/rules.html\'"></ng-include>\n        </div>\n      </div>\n    </div>\n  </section>\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/security/auth/auth.html",'<section class="page-form-ele page ng-scope">\n  <section class="panel panel-default">\n    <div class="panel-heading">\n      <strong> Configuration </strong>\n        <ba-help-link key="securityGeneral" with-text="false"></ba-help-link>\n      <div us-spinner spinner-key="loading" spinner-start-active></div>\n    </div>\n    <div class="panel-body">\n      <form name="auth.authForm" novalidate>\n        <div class="field-group">\n          <div class="group-inner">\n            <div class="form-group">\n              <label class="strong" for="allowAnonymousPublic">Anonymous Access</label>\n              <label class="pull-right ui-switch ui-switch-success ui-switch-sm">\n                <input id="allowAnonymousPublic" type="checkbox" ng-model="auth.data.allowAnonymous" checked=""><i></i>\n              </label>\n              <div class="field-description">When set to True anyone can access the app without username and password\n                  <ba-help-link key="securityAnonymousAccess"></ba-help-link>\n              </div>\n            </div>\n            <div class="row" ng-show="auth.data.allowAnonymous">\n              <div class="form-group col-md-4" ng-class="{ \'has-error\': auth.authForm.AnonymousUserRole.$invalid }">\n                <label class="control-label strong" for="AnonymousUserRole">Anonymous users assigned role:</label>\n                <select class="form-control"\n                        ng-options="role.Name as role.Name for role in auth.roles "\n                        id="AnonymousUserRole"\n                        name="AnonymousUserRole"\n                        ng-model="auth.data.settings.defaultGuestRole"\n                        ng-model-options="{debounce:{default:400}}"\n                        ng-required="auth.data.allowAnonymous">\n                </select>\n                <div class="field-description">\n                  * The role can be changed any time after the registration via API or from user page\n                </div>\n              </div>\n            </div>\n            <div class="row" ng-if="auth.data.allowAnonymous">\n              <div class="col-md-12">\n                <label for="anonymouskey" class="control-label strong">Anonymous Token</label>\n                <div class="form-group">\n                  <div class="input-group">\n                    <input type="text" class="form-control" id="anonymouskey"\n                           ng-readonly="true"\n                           ng-model="auth.keys.anonymous">\n                    <span class="input-group-btn">\n                      <button class="btn btn-default" type="button" clip-copy="auth.keys.anonymous">Copy</button>\n                    </span>\n                  </div>\n                  <div class="field-description">\n                    Use this token when accessing the REST API without login (Anonymous access)\n                    (put the token in headers parameter AnonymousToken)\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class="field-group">\n          <div class="group-inner">\n            <div class="form-group">\n              <label class="strong" for="allowAnonymousPrivate">Public App</label>\n              <label class="pull-right ui-switch ui-switch-success ui-switch-sm">\n                <input id="allowAnonymousPrivate" type="checkbox" ng-model="auth.data.settings.enableUserRegistration"\n                       checked=""><i></i>\n              </label>\n              <div class="field-description">\n                When enabled, any user can register with the application. When disabled, only invited users may register.\n                To invite users, go to the <a href="" ng-click="auth.goTo(\'security.users\');">Users</a> page\n                  <ba-help-link key="securitySignup"></ba-help-link>\n              </div>\n            </div>\n            <div class="form-group" ng-class="{ \'has-error\': auth.authForm.PrivateAppRole.$invalid }">\n            <label class="control-label strong" for="PrivateAppRole">Invited users default assigned role:</label>\n            <select class="form-control"\n                    ng-options="role.Name as role.Name for role in auth.roles "\n                    id="PrivateAppRole"\n                    name="PrivateAppRole"\n                    ng-model="auth.data.settings.newUserDefaultRole"\n                    ng-model-options="{debounce:{default:400}}"\n                    ng-required="auth.data.settings.enableUserRegistration">\n            </select>\n            <div class="field-description">\n              * The role can be changed any time after the registration vip API or from user page\n            </div>\n              </div>\n          </div>\n        </div>\n        <div class="field-group">\n          <div class="group-inner">\n              <div class="form-group" ng-class="{ \'has-error\': auth.authForm.inputUrl1.$error.url }">\n                <label for="inputUrl1" class="control-label strong">Custom Registration Page URL</label>\n\n                <div class="form-group">\n                  <input type="url" class="form-control"\n                         id="inputUrl1" name="inputUrl1" placeholder="http://www.myappdomain.com/sign-up.html"\n                         ng-model-options="{ updateOn: \'blur\' ,debounce: 400 }"\n                         ng-keyup="cancel($event)"\n                         ng-model="auth.data.settings.registrationRedirectUrl">\n\n                  <div class="field-description">The registration page URL to be used in user invitation email\n                      <ba-help-link key="customPages"></ba-help-link>\n                  </div>\n                </div>\n              </div>\n              <div class="form-group" ng-class="{ \'has-error\': auth.authForm.inputUrl2.$error.url }">\n                <label for="inputUrl2" class="strong control-label">Custom Verified Email Page URL</label>\n\n                <div class="form-group">\n                  <input type="url" class="form-control"\n                         id="inputUrl2" name="inputUrl2"\n                         ng-model-options="{ updateOn: \'blur\' ,debounce: 400 }"\n                         placeholder="http://www.myappdomain.com/sign-in.html"\n                         ng-keyup="cancel($event)"\n                         ng-model="auth.data.settings.signInRedirectUrl">\n\n                  <div class="field-description">Redirect page after user has verified his email in the sign up process\n                      <ba-help-link key="customPages"></ba-help-link>\n                  </div>\n                </div>\n              </div>\n              <div class="form-group" ng-class="{ \'has-error\': auth.authForm.inputUrl3.$error.url }">\n                <label for="inputUrl2" class="strong control-label">Custom Reset Password Page URL</label>\n                <div class="form-group">\n                  <input type="url" class="form-control"\n                         id="inputUrl3" name="inputUrl3"\n                         ng-model-options="{ updateOn: \'blur\' ,debounce: 400 }"\n                         placeholder="http://www.myappdomain.com/reset-password.html"\n                         ng-keyup="cancel($event)"\n                         ng-model="auth.data.settings.forgotPasswordUrl">\n\n                  <div class="field-description">Redirect page after user got email in forgot password request\n                  </div>\n                </div>\n              </div>\n          </div>\n        </div>\n        <div class="field-group">\n          <div class="group-inner">\n            <div class="form-group">\n              <label class="strong" for="allowAnonymousPublic">Sign-up Email Verification</label>\n              <label class="pull-right ui-switch ui-switch-success ui-switch-sm">\n                <input id="emailVerification" type="checkbox" ng-model="auth.data.settings.signupEmailVerification" checked=""><i></i>\n              </label>\n              <div class="field-description">When enabled, users are sent a verification email by Backand which they must use to verify their account\n                  <ba-help-link key="emailVerification"></ba-help-link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </section>\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/security/role/new_role.html",'<div class="modal-header">\n  <h3 class="modal-title" ng-bind="modal.title"></h3>\n</div>\n\n<div class="modal-body clearfix">\n\n  <form novalidate>\n\n    <div class="form-group col-lg-12 col-md-12 col-sm-12">\n    <label>Role Name</label>\n    <input type="text"\n           class="form-control"\n           ng-model="role.name"\n           ng-model-options="{debounce:{default:400}}"\n           required\n           placeholder="Role name">\n  </div>\n\n\n\n  </form>\n\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-click="closeModal(role)" ng-bind="modal.okButtonText"></button>\n  <button class="btn btn-default" ng-click="cancel()" ng-bind="modal.cancelButtonText"></button>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/security/role/roles.html",'<section class="page-form-ele page ng-scope">\n  <section class="panel panel-default">\n    <div class="panel-heading">\n      <strong> Roles  </strong>\n      <div us-spinner spinner-key="loading" spinner-start-active></div>\n    </div>\n    <div class="panel-body"  ng-controller="SecurityRoles as roles">\n      <button type="button" id="addUser" class="btn btn-success" ng-click="roles.open()">Add role</button>\n      <button type="button" id="delUser" class="btn btn-success" ng-click="roles.delete()">Delete role</button>\n      <div id="rolessGrid" ui-grid="roles.gridOptions" ui-grid-edit  ui-grid-row-edit ui-grid-cellNav  ui-grid-selection  class="grid" ></div>\n    </div>\n  </section>\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/security/social_and_keys/social_and_keys.html",'<section class="page-form-ele page ng-scope">\n  <section class="panel panel-default">\n    <div class="panel-heading">\n      <strong> Social & Keys </strong>\n      <div us-spinner spinner-key="loading" spinner-start-active></div>\n    </div>\n    <div class="panel-body">\n      <div class="field-group" ng-repeat="displayedToken in keys.displayedTokens">\n        <div class="group-inner">\n          <div class="form-group">\n            <label class="control-label strong">{{ ::displayedToken.label }} Token</label>\n            <div class="form-group">\n              <div class="input-group">\n                <input type="text" class="form-control" id="signupkey"\n                       ng-readonly="true"\n                       ng-model="keys.tokens[displayedToken.name]">\n                <span class="input-group-btn">\n                  <button class="btn btn-default"\n                          type="button"\n                          clip-copy="keys.tokens[displayedToken.name]"\n                          ng-click="keys.resetKey(displayedToken.name);"\n                          ladda="keys.reseting === displayedToken.name"\n                          ng-class="{\'btn-success\': keys.reseted === displayedToken.name}">Reset</button>\n                  <button class="btn btn-default"\n                          type="button"\n                          clip-copy="keys.tokens[displayedToken.name]"\n                          ng-click="keys.copied = displayedToken.name"\n                          ng-class="{\'btn-success\': keys.copied === displayedToken.name}">Copy</button>\n                </span>\n              </div>\n              <div class="field-description">\n                {{ ::displayedToken.description }}\n                <ba-help-link key="{{displayedToken.helpKey}}"></ba-help-link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class="field-group">\n        <div class="group-inner">\n          <div class="row">\n            <div class="form-group col-md-12">\n                <label class="control-label strong">Session Length</label>\n                <!--<div class="form-group">-->\n                <select class="form-control"\n                      required\n                      ng-options="time.seconds as time.label for time in keys.tokenExpirations"\n                      ng-model="keys.tokenExpiration"\n                      ng-change="keys.updateTokenExpire()"></select>\n                <div class="field-description">\n                    The length of time that the session will remain valid. The expiration is set when calling /token\n                    API for sign-in\n                    <span style="color:red;"><ba-tooltip\n                        tooltip-text="New token value won\'t be affected until the user is re-login. When selecting \'Never - Use Refresh Token\' the access token is set to 1 day but it can be reconnected using refresh token. Backand\'s SDK is handling the refresh token so no additional code is needed." tooltip-placement="right"></ba-tooltip></span>\n                    . To setup the SDK\n                    <ba-help-link key="refreshToken"></ba-help-link>\n                </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class="field-group">\n        <div class="group-inner">\n          <div class="form-group">\n            <label class="control-label strong">Social Configuration</label><ba-help-link key="socialAndKeysGeneral"\n                                                                                          with-text="false"></ba-help-link>\n            <form name="keys.socialForm" novalidate ng-model-options="{updateOn: \'blur default\', debounce: {\'default\': 250, \'blur\': 0 }}">\n              <div class="field-group" ng-repeat="socialProvider in keys.socialProviders">\n                <div class="group-inner">\n                  <div class="social-provider-title" ng-class="socialProvider.name + \'-title\'">\n                    <label class="strong" for="{{::socialProvider.name}}-switch">\n                      <i class="fa social-provider-icon" ng-class="\'fa-\' + socialProvider.css"></i> <span>{{ ::socialProvider.label }}</span></label>\n                    <label class="pull-right ui-switch ui-switch-success ui-switch-sm">\n                      <input id="{{::socialProvider.name}}-switch"\n                             type="checkbox"\n                             ng-model="socialProvider.enable"\n                             ng-change="keys.updateSocialSettings(socialProvider)">\n                      <i></i>\n                    </label>\n                  </div>\n                  <div class="row" ng-show="socialProvider.enable">\n                    <div class="col-md-5 social-keys-container">\n                      <div class="form-group">\n                        <label for="{{::socialProvider.name}}-use-backand">\n                          Use your credentials for signing in with {{ ::socialProvider.label }}\n                            <ba-tooltip tooltip-text="By default the credentials belongs to Backand, so your users will see Backand as the provider. We suggest you create new app in {{ ::socialProvider.label }} and provide your own credentials." tooltip-placement="right"></ba-tooltip>\n                        </label>\n                        <label class="pull-right ui-switch ui-switch-success ui-switch-sm">\n                          <input id="{{::socialProvider.name}}-use-backand"\n                                 type="checkbox"\n                                 ng-model="socialProvider.useOwnApp"\n                                 ng-change="keys.useOwnAppChange(socialProvider)">\n                          <i></i>\n                        </label>\n                      </div>\n                      <div class="form-group">\n                        <label for="{{::socialProvider.name}}-api-key" class="control-label">{{::socialProvider.clientIdTitle || \'Client ID\'}}</label>\n                        <input type="text"\n                               class="form-control"\n                               ng-disabled="!socialProvider.useOwnApp"\n                               id="{{::socialProvider.name}}-api-key"\n                               ng-model="socialProvider.clientId"\n                               ng-change="keys.updateSocialSettings(socialProvider)">\n                      </div>\n                      <div class="form-group">\n                        <label for="{{::socialProvider.name}}-secret-key" class="control-label">{{::socialProvider.secretIdTitle || \'Client Secret\'}}</label>\n                        <input type="text"\n                               class="form-control"\n                               ng-disabled="!socialProvider.useOwnApp"\n                               id="{{::socialProvider.name}}-secret-key"\n                               ng-model="socialProvider.clientSecret"\n                               ng-change="keys.updateSocialSettings(socialProvider)">\n                      </div>\n                    </div>\n                    <div class="col-md-5 col-md-offset-2">\n                      <div class="social-provider-container">\n                        <div class="social-provider-help">\n                          <div class="social-provider-help-title">Configuring Your {{socialProvider.label}} App</div>\n                          To get started with {{ ::socialProvider.label }} authentication,\n                          you need to first create a new {{ ::socialProvider.label }} app\n                            <ba-help-link key="{{::socialProvider.helpUrl}}"></ba-help-link>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/security/user/change_user_password.html",'<div class="modal-header">\n  <h3 class="modal-title">New Password - User {{ChangeUserPassword.userData.username}}</h3>\n</div>\n\n<form novalidate name="ChangeUserPasswordForm">\n\n  <div class="modal-body clearfix">\n\n    <div class="form-group col-lg-12 col-md-12 col-sm-12" ng-class="{ \'has-error\': ChangeUserPasswordForm.password.$invalid }">\n      <label>Password</label>\n      <input type="password"\n             name="password"\n             class="form-control"\n             ng-model="ChangeUserPassword.userData.password"\n             ng-model-options="{debounce:{default:400}}"\n             ng-minlength="6"\n             ng-maxlength="20"\n             required\n             autofocus>\n      <div class="text-danger" ng-show="ChangeUserPasswordForm.password.$error.minlength">\n        Password must be at least 6 characters\n      </div>\n    </div>\n\n    <div class="form-group col-lg-12 col-md-12 col-sm-12" ng-class="{ \'has-error\': ChangeUserPasswordForm.confirm_password.$invalid }">\n      <label>Confirm Password</label>\n      <input type="password"\n             name="confirm_password"\n             class="form-control"\n             ng-model="ChangeUserPassword.confirmPassword"\n             ng-model-options="{debounce:{default:400}}"\n             ba-match="ChangeUserPassword.userData.password"\n             required>\n      <div class="text-danger" ng-show="ChangeUserPasswordForm.confirm_password.$error.match">\n        Please re-enter the same password as above\n      </div>\n    </div>\n  </div>\n\n  <div class="modal-footer">\n    <button class="btn btn-primary" type="submit" ng-click="ChangeUserPassword.savePassword()" ng-disabled="ChangeUserPasswordForm.$invalid">Change Password</button>\n    <button class="btn btn-default" ng-click="ChangeUserPassword.cancelNewPassword()">Cancel</button>\n  </div>\n</form>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/security/user/get_user_token.html",'<div class="modal-header">\n  <h3 class="modal-title">Key for {{GetUserToken.userData.username}}</h3>\n</div>\n\n<form novalidate name="GetUserTokenForm">\n\n  <div class="modal-body clearfix">\n\n    <div class="form-group col-lg-12 col-md-12 col-sm-12">\n\n      <div class="input-group">\n        <input type="text"\n               name="token"\n               class="form-control"\n               ng-model="GetUserToken.token"\n               ng-model-options="{debounce:{default:400}}"\n               ng-readonly="true"\n               autofocus>\n                <span class="input-group-btn">\n                  <button class="btn btn-default"\n                          type="button"\n                          clip-copy="GetUserToken.token"\n                          ng-click="GetUserToken.copied = true"\n                          ng-class="{\'btn-success\': GetUserToken.copied === true}">Copy</button>\n                </span>\n      </div>\n\n    </div>\n    <div class="text-warning">\n      <h3>Important</h3>\n      <ul>\n        <li>This key should only be used for server side activities.</li>\n        <li>Keep this key secret.</li>\n        <li>When you reset the key you need to update all the relevant code associated with it.</li>\n      </ul>\n    </div>\n\n  </div>\n\n  <div class="modal-footer">\n    <button class="btn" ladda="GetUserToken.reseting" ng-click="GetUserToken.resetToken()">Reset</button>\n    <button class="btn btn-default" ng-click="GetUserToken.closeGetToken()">Close</button>\n  </div>\n</form>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/security/user/new_user.html",'<div class="modal-header">\n  <h3 class="modal-title" ng-bind="modal.title"></h3>\n</div>\n\n<div class="modal-body clearfix">\n\n  <form novalidate name="newUserform">\n\n    <div class="form-group col-lg-12 col-md-12 col-sm-12" ng-class="{ \'has-error\': newUserform.email.$invalid }">\n    <label>Email</label>\n    <input type="email"\n           class="form-control"\n           ng-model="user.email"\n           ng-model-options="{debounce:{default:300}}"\n           ng-change="changeEmail(user)"\n           name="email"\n           required\n           placeholder="This will be the user\'s username">\n      <div class="text-danger" ng-show="newUserform.email.$error.email">\n        This is not a valid email\n      </div>\n    </div>\n\n    <div class="form-group col-lg-12 col-md-12 col-sm-12" ng-class="{ \'has-error\': newUserform.firstName.$invalid }">\n      <label>First name</label>\n      <input type="text"\n             name="firstName"\n             class="form-control"\n             ng-model="user.firstName"\n             ng-model-options="{debounce:{default:300}}"\n             ng-maxlength="50"\n             required>\n    </div>\n\n    <div class="form-group col-lg-12 col-md-12 col-sm-12" ng-class="{ \'has-error\': newUserform.lastName.$invalid }">\n      <label>Last name</label>\n      <input type="text"\n             name="lastName"\n             class="form-control"\n             ng-model="user.lastName"\n             ng-model-options="{debounce:{default:300}}"\n             ng-maxlength="50"\n             required>\n    </div>\n\n    <div class="form-group col-lg-12 col-md-12 col-sm-12" ng-class="{ \'has-error\': newUserform.userRole.$invalid }">\n      <label>User Role</label>\n      <select class="form-control"\n              name="userRole"\n              ng-model="user.role"\n              ng-model-options="{debounce:{default:300}}"\n              required>\n        <option ng-repeat="role in modal.roles">{{role}}</option>\n      </select>\n    </div>\n    <div class="text-info form-group col-lg-12 col-md-12 col-sm-12" ng-if="!modal.NewUser">\n      ** No need for password, user is already registered in another Backand app.\n      <ba-tooltip tooltip-text="Backand using single sign on, means user sign up once and can be assigned to many apps" tooltip-placement="right" class=""></ba-tooltip>\n    </div>\n\n  <div ng-if="modal.NewUser">\n    <div class="form-group col-lg-12 col-md-12 col-sm-12" ng-class="{ \'has-error\': newUserform.password.$invalid}">\n      <label>Password</label>\n      <input type="password"\n             name="password"\n             class="form-control"\n             ng-model="user.password"\n             ng-model-options="{debounce:{default:300}}"\n             ng-minlength="6"\n             ng-maxlength="20"\n             required>\n      <div class="text-danger" ng-show="newUserform.password.$error.minlength">\n        Password must be at least 6 characters\n      </div>\n    </div>\n\n    <div class="form-group col-lg-12 col-md-12 col-sm-12" ng-class="{ \'has-error\': newUserform.confirm_password.$invalid}">\n      <label>Confirm Password</label>\n      <input type="password"\n             name="confirm_password"\n             class="form-control"\n             ng-model="user.confirmPassword"\n             ng-model-options="{debounce:{default:300}}"\n             ba-match="user.password"\n             required>\n      <div class="text-danger" ng-show="newUserform.confirm_password.$error.match">\n        Please re-enter the same password as above\n      </div>\n    </div>\n  </div>\n  </form>\n\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-disabled="newUserform.$invalid" ng-click="closeModal(user)" ng-bind="modal.okButtonText"></button>\n  <button class="btn btn-default" ng-click="cancel()" ng-bind="modal.cancelButtonText"></button>\n</div>\n')
}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/security/user/users.html",'<section class="page-form-ele page ng-scope">\n  <section class="panel panel-default">\n    <div class="panel-heading">\n      <strong> {{users.title}} </strong>\n\n      <div us-spinner spinner-key="loading" spinner-start-active></div>\n    </div>\n    <div class="panel-body">\n      <br>\n\n      <div class="row" ng-if="users.adminMode">\n        <div class=" form-group col-sm-7">\n          <label for="inviteAdminEmails"></label>Invite team members to access the application with administrative role\n          <ba-help-link key="adminUsers"></ba-help-link></h4>\n          </lable>\n        </div>\n        <div class="form-group col-sm-7">\n          <input type="text" class="form-control col-sm-7" id="inviteAdminEmails" ng-model="users.invitedAdmins"\n                 placeholder="Admin Email Address -  Use comma for multiple users"/></div>\n        <div class="col-sm-3">\n          <button type="button" ng-disabled="!users.invitedAdmins" id="addAdminInvites"\n                  class="btn btn-default btn-success "\n                  ng-click="users.inviteAdmins()">Invite Admin User(s)\n          </button>\n        </div>\n      </div>\n      <div class="row" ng-if="!users.adminMode">\n        <div class=" form-group col-sm-7">\n          <label for="inviteUsersEmails"></label>Invite users to access the application with role\n          \'{{users.defaultUserRole}}\'. If "Public App"\n          is Off then this is the only way to add users to the app\n          <ba-help-link key="registeredUsers"></ba-help-link></h4>\n          </lable>\n\n        </div>\n\n        <div class=" form-group col-sm-7">\n          <input type="text" class="form-control  col-sm-7" id="inviteUsersEmails" ng-model="users.invitedUsers"\n                 ng-disabled="users.registrationRedirectUrl == \'\'"\n                 placeholder="Email Address -  Use comma for multiple users"/>\n        </div>\n        <div class="col-sm-3">\n          <button type="button" ng-disabled="!users.invitedUsers || users.registrationRedirectUrl == \'\'"\n                  id="addUserInvites" class="btn btn-success"\n                  ng-click="users.inviteUsers()">Invite User(s)\n          </button>\n        </div>\n\n        <div class="form-group col-sm-7">\n          <div class="field-description" ng-if="users.registrationRedirectUrl == \'\'">Note: Invite users is enabled only\n            when the registration page is ready. To update the custom registration page URL go to <a href="" ng-click="users.goTo(\'security.auth\')">Security\n              Configuration</a></div>\n        </div>\n        <br/>\n      </div>\n\n      <div class="actions-bar row">\n        <div class="col-md-8">\n          <h3 class="page-name">{{users.title}}</h3>\n          <h4 class="page-description">Manage your {{users.title}} here. To update user\'s details double click in the\n            cell</h4>\n        </div>\n      </div>\n      <div class="row">\n        <div class="col-xs-12">\n          <button ng-hide="users.adminMode" class="btn btn-success" ng-click="users.open()">+ New User</button>\n          <div class="pull-right form-inline">\n            <div class="input-group ">\n              <select class="form-control"\n                      ng-options="action for action in users.actions"\n                      ng-model="users.action"\n                      ng-model-options="{debounce:{default:400}}">\n                <option value="">Select Action...</option>\n              </select>\n              <span class="input-group-btn">\n                 <button class="btn btn-success" type="button" ng-click="users.delete()" ng-disabled="users.action==\'\'"\n                         style="padding-bottom: 7px;">\n                   Go\n                 </button>\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div us-spinner spinner-key="loading"></div>\n      <fieldset class="collapsible-fieldset"\n                ng-class="{\'fieldset-open\': users.showFilter, \'fieldset-closed\': !users.showFilter}">\n\n        <legend ng-click="users.toggleShowFilter()">\n          <a href="">\n            Filter Users</a>\n        </legend>\n\n        <div ng-show="users.showFilter">\n\n          <bknd-filter-form query="users.filterQuery"\n                            fields="users.filterOptions.fields"\n                            operators="users.filterOptions.operators"\n                            no-repeat="true"\n                            disable-value="users.disableValue"\n                            on-submit="users.filterData()">\n          </bknd-filter-form>\n\n        </div>\n      </fieldset>\n\n      <!-- Data Grid -->\n      <div id="usersGrid" ui-grid="users.gridOptions" ui-grid-edit ui-grid-row-edit ui-grid-cellNav ui-grid-selection external-scopes="users.gridExternalScope"\n           class="grid"></div>\n      <!--pagination-->\n      <div ng-show="users.gridOptions.totalItems == 0">\n        <h3>No {{users.title}}</h3>\n      </div>\n      <div ng-show="users.gridOptions.totalItems > 0" class="row">\n        <div class="col-md-5">\n          <pagination total-items="users.gridOptions.totalItems" ng-model="users.paginationOptions.pageNumber"\n                      max-size="5" class="pagination-sm" boundary-links="true" rotate="false"\n                      items-per-page="users.paginationOptions.pageSize" previous-text="&lsaquo;"\n                      next-text="&rsaquo;"></pagination>\n        </div>\n        <div class="col-md-2" style="margin-top:20px;">\n          Page size:\n          <select class="ui-select" ng-model="users.paginationOptions.pageSize">\n            <option ng-repeat="size in users.paginationOptions.pageSizes">{{size}}</option>\n          </select>\n        </div>\n        <div class="col-md-5" style="margin-top:20px;">\n          <span class="pull-right">Showing {{users.paginationOptions.pageSize * (users.paginationOptions.pageNumber-1) +1}} to {{users.pageMax(users.paginationOptions.pageSize, users.paginationOptions.pageNumber, users.gridOptions.totalItems)}} of {{users.gridOptions.totalItems}} rows</span>\n        </div>\n      </div>\n    </div>\n  </section>\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/security/workspace/workspace.html",'<section class="page-form-ele page ng-scope">\n  <section class="panel panel-default">\n    <div class="panel-heading">\n      <strong> Security templates </strong>\n\n        <div us-spinner spinner-key="loading" spinner-start-active></div>\n    </div>\n    <div class="panel-body">\n      <div>Security template is used to set the permissions on objects. You can create new\n          templates, update existing templates, and rename security templates as you see fit\n          <ba-help-link key="securityTemplates"></ba-help-link>\n      </div>\n      <br/>\n      <button class="btn btn-primary ng-scope ladda-button" ladda="securityws.processingNewWS" data-style="expand-right"  ng-click="securityws.addWorkspace()">+ Add Security Template</button>\n      <br/><br/>\n      <div class="ui-tab-container ui-tab-vertical"\n           style="height:500px; overflow:auto">\n        <tabset class="ui-tab workspace">\n          <tab ng-repeat="workspace in securityws.workspaces"\n               heading="{{ workspace.workspaceName }}" active="workspace.tabActive">\n            <div class="form-group">\n              <label for="wsName">Security Template Name</label>\n              <input type="text" class="form-control" id="wsName"\n                     ng-model="workspace.workspaceName" ng-change="securityws.changeName(workspace.workspaceName,workspace.__metadata.id)">\n            </div>\n            <br/>\n\n            <security-matrix security-template="workspace.template"\n                             override="workspace.overridepermissions"\n                             on-update="securityws.templateChanged(workspace.template,workspace.__metadata.id)"\n                             on-role-add="securityws.templateRoleAdd(role)"\n                             on-role-rename="securityws.templateRoleRename(role, newRole)"\n                             on-role-remove="securityws.templateRoleRemove(role)"\n              ></security-matrix>\n\n          </tab>\n\n        </tabset>\n      </div>\n    </div>\n  </section>\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/data/data.html",'<div id="grid-container" class="object-data-page">\n  <us-spinner spinner-key="loading-data" spinner-start-active="1"\n              style="position: relative; top: 15px; left: calc(100%/2);"></us-spinner>\n\n  <a href="" class="btn btn-success" ng-click="ObjectData.newRow()"><i class="ti-plus"></i> Add Row</a>\n\n  <button class="btn btn-default ba-icon-icon-refresh refresh-data-button" ng-click="ObjectData.refresh()"></button>\n\n  <a class="btn btn-success btn-xs btn-wide pull-right" ng-click="ObjectData.toggleShowLog()">\n    <i class="ti-angle-left" ng-show="ObjectData.showLog"></i>\n    {{ ObjectData.showLog ? \'HIDE CODE\' : \'SHOW CODE\' }}\n    <i class="ti-angle-right" ng-hide="ObjectData.showLog"></i>\n  </a>\n\n  <div class="row">\n    <div ng-class="ObjectData.showLog ? \'col-md-8\' : \'col-md-12\'">\n\n      <!-- Filter Data-->\n      <fieldset class="collapsible-fieldset"\n                ng-class="{\'fieldset-open\': ObjectData.showFilter, \'fieldset-closed\': !ObjectData.showFilter}">\n\n        <legend ng-click="ObjectData.toggleShowFilter()">\n          <a href="">\n            Filter Data</a>\n        </legend>\n\n        <div ng-show="ObjectData.showFilter">\n\n          <bknd-filter-form query="ObjectData.filterQuery"\n                            fields="ObjectData.filterOptions.fields"\n                            operators="ObjectData.filterOptions.operators"\n                            no-repeat="true"\n                            disable-value="ObjectData.disableValue"\n                            on-submit="ObjectData.filterData()">\n          </bknd-filter-form>\n\n        </div>\n      </fieldset>\n\n      <!-- Data Grid -->\n      <div ui-grid="ObjectData.gridOptions"\n           class="datagrid" ui-grid-resize-columns\n           external-scopes="$scope"\n           ng-show="ObjectData.gridOptions.totalItems > 0">\n      </div>\n      <div ng-show="ObjectData.gridOptions.totalItems == 0">\n        <h3>No items found</h3>\n      </div>\n      <div ng-show="ObjectData.gridOptions.totalItems > 0" class="row">\n        <div class="col-md-5">\n          <pagination total-items="ObjectData.gridOptions.totalItems"\n                      ng-model="ObjectData.paginationOptions.pageNumber"\n                      max-size="5"\n                      class="pagination-sm"\n                      boundary-links="true"\n                      rotate="false"\n                      items-per-page="ObjectData.paginationOptions.pageSize"\n                      previous-text="&lsaquo;"\n                      next-text="&rsaquo;"></pagination>\n        </div>\n        <div class="col-md-2" style="margin-top:20px;">\n          Page size:\n          <select class="ui-select"\n                  ng-model="ObjectData.paginationOptions.pageSize"\n                  ng-options="size for size in ObjectData.paginationOptions.pageSizes">\n          </select>\n        </div>\n        <div class="col-md-5" style="margin-top:20px;">\n          <span class="pull-right">\n            Showing {{ObjectData.paginationOptions.pageSize * (ObjectData.paginationOptions.pageNumber-1) +1}}\n            to {{ObjectData.pageMax(ObjectData.paginationOptions.pageSize,\n                                    ObjectData.paginationOptions.pageNumber,\n                                    ObjectData.gridOptions.totalItems)}}\n            of {{ObjectData.gridOptions.totalItems}} rows</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- HTTP Log -->\n    <div ng-show="ObjectData.showLog" class="col-md-4">\n      <div class="panel panel-default log-panel" ng-if="ObjectData.httpRequestsLog.length !== 0">\n        <div class="panel-heading">\n          <h3 class="panel-title">\n            {{ObjectData.httpRequestsLog[ObjectData.logIndex.last].requestTitle}},\n            {{ObjectData.httpRequestsLog[ObjectData.logIndex.last].requestMethod}}</h3>\n\n          <div class="log-navigation-buttons">\n\n            <button class="btn btn-xs btn-default"\n                    ng-disabled="!ObjectData.httpRequestsLog[ObjectData.logIndex.last - 1]"\n                    ng-click="ObjectData.gotoPrevLogItem()">\n              <i class="ti-angle-left"></i>\n            </button>\n\n            <button class="btn btn-xs btn-default"\n                    ng-disabled="!ObjectData.httpRequestsLog[ObjectData.logIndex.last + 1]"\n                    ng-click="ObjectData.gotoNextLogItem()">\n              <i class="ti-angle-right"></i>\n            </button>\n          </div>\n        </div>\n\n        <div class="panel-body">\n          <div class="object-data-log-container">\n            <div>\n              <label for="log-item-url">Endpoint</label>\n              <bknd-copy-box id="log-item-url"\n                             content="ObjectData.httpRequestsLog[ObjectData.logIndex.last].requestUrl"></bknd-copy-box>\n\n              <label for="log-item-request">Request Angular $HTTP code</label>\n              <bknd-copy-box id="log-item-request"\n                             type="textarea"\n                             content="ObjectData.httpRequestsLog[ObjectData.logIndex.last].requestJson"></bknd-copy-box>\n\n              <label for="log-item-response">Response JSON</label>\n              <bknd-copy-box id="log-item-response"\n                             type="textarea"\n                             content="ObjectData.httpRequestsLog[ObjectData.logIndex.last].response"></bknd-copy-box>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/data/edit_row.html",'<div class="modal-header">\n  <h3 class="modal-title">\n    {{EditRow.editRowData.id ? \'Edit Row (Id: \' + EditRow.editRowData.id + \')\': \'New Row\'}}\n  </h3>\n</div>\n<div class="modal-body edit-row-modal">\n  <form role="form" ng-submit="EditRow.saveRow()" name="EditRow.editRowForm" novalidate>\n    <fieldset>\n      <div class="form-group" ng-repeat="item in EditRow.editRowData.entities" ng-if="!item.hide">\n        <label for="{{item.key}}_{{item.type}}" style="text-transform: none;">\n          {{EditRow.getLabel(item.key)}}<span ng-if="item.required"> *</span>\n        </label>\n        <div ng-switch on="item.type">\n\n          <textarea ng-switch-when="textarea"\n                    class="form-control"\n                    id="{{item.key}}_textarea"\n                    name="item.key" ng-model="item.value"\n                    ng-required="item.required"\n                    ng-disabled="item.disable"></textarea>\n\n          <input ng-switch-when="checkbox" type="checkbox"\n                 class="form-control"\n                 id="{{item.key}}_checkbox"\n                 name="item.key"\n                 ng-model="item.value"\n                 ng-disabled="item.disable"/>\n\n          <div ng-switch-when="dateTime" class="input-group">\n            <span class="input-group-addon ti-calendar"></span>\n            <input type="date"\n                   class="editable-has-buttons editable-input form-control"\n                   ng-model="item.value"\n                   ng-required="item.required"\n                   ng-disabled="item.disable" />\n            <span class="input-group-addon ti-time"></span>\n            <input type="time"\n                   class="editable-has-buttons editable-input form-control"\n                   ng-model="item.value"\n                   ng-required="item.required"\n                   ng-disabled="item.disable" />\n          </div>\n\n          <div ng-switch-when="singleSelect">\n            <div bknd-single-select-typeahead input-id="{{item.key}}_singleSelect" item="item"></div>\n          </div>\n\n          <!--<input ng-switch-when="MultiSelect"\n                 type="text"\n                 ng-model="item.value"\n                 typeahead="row.value as row.value + \'. \' + row.label for row in EditRow.getMultiAutocomplete(item.key, $viewValue, item)"\n                 typeahead-editable="false"\n                 typeahead-on-select="EditRow.onMultiSelect(item, $model)"\n                 class="form-control">-->\n\n          <!-- text and MultiSelect\n          <div ng-switch-when="multiSelect" class="input-group">\n            <span class="input-group-addon">\n              <ba-tooltip tooltip-text="comma separated values, i.e. 3,17,50" tooltip-placement="left"></ba-tooltip>\n            </span>\n            <input type="text"\n                   class="form-control"\n                   id="{{item.key}}_multiSelect"\n                   name="item.key"\n                   ng-model="item.value"\n                   ng-required="item.required"\n                   ng-disabled="item.disable"/>\n          </div>-->\n\n          <div ng-switch-when="numeric" class="input-group">\n            <span class="input-group-addon" style="min-width: 39px">0</span>\n            <input type="text"\n                   class="form-control"\n                   id="{{item.key}}_text"\n                   name="item.key"\n                   ng-model="item.value"\n                   ng-required="item.required"\n                   ng-disabled="item.disable"/>\n          </div>\n\n          <div ng-switch-default class="input-group">\n            <span class="input-group-addon ti-text"></span>\n            <input type="text"\n                   class="form-control"\n                   id="{{item.key}}_text"\n                   name="item.key"\n                   ng-model="item.value"\n                   ng-required="item.required"\n                   ng-disabled="item.disable"/>\n          </div>\n        </div>\n      </div>\n    </fieldset>\n  </form>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-success"\n          ladda="EditRow.savingRow"\n          ng-click="EditRow.saveRow()"\n          ng-disabled="EditRow.editRowForm.$invalid">\n    Save\n  </button>\n  <button class="btn btn-success"\n          ladda="EditRow.savingRowAndNew"\n          ng-click="EditRow.saveAndNew()"\n          ng-if="!EditRow.editRowData.id"\n          ng-disabled="EditRow.editRowForm.$invalid">\n    Save & New\n  </button>\n  <button class="btn btn-default"\n          ng-click="EditRow.cancelEditRow()">\n    Cancel\n  </button>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/data/select_row_template.html",'<a tooltip-template="\'views/tables/data/select_row_tooltip.html\'"\n   tooltip-placement="right"\n   tooltip-class="select-row-tooltip"\n   tooltip-enable="match.label.fields.length > 0"\n   class="typeahead-select-row">\n  <span ng-bind-html="match.label.descriptiveLabel | typeaheadHighlight:query"></span>\n</a>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/data/select_row_tooltip.html",'<ul class="list-unstyled">\n  <li ng-repeat="field in match.label.fields">\n    {{field.key}}: <span ng-bind-html="field.value | typeaheadHighlight:query"></span>\n  </li>\n</ul>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/fields/fields.html",'<div class="slimScrollDiv panel-body panel-body-custom ui-tab-container ui-tab-vertical"\n     style="overflow:auto">\n      <tabset class="ui-tab" >\n        <tab ng-repeat="field in fields.items track by field.__metadata.id"\n             heading="{{ field.name }}">\n          <form role="form"  >\n\n            <div class="field-group">\n              <h4 class="group-label">General Info</h4>\n              <div class="group-inner">\n                <div class="form-group form-group-half">\n                  <label class="strong" for="jsonName">Name</label>\n                  <input ng-disabled="field.advancedLayout.delete" type="text" class="form-control" id="jsonName"\n                         ng-model="field.name">\n                  <div class="field-description">The name of the field for any JSON representation</div>\n                </div>\n                <div class="form-group form-group-half" ng-if="field.type !== \'MultiSelect\'">\n                  <label class="strong" for="dbName">Database Name</label>\n                  <input type="text" class="form-control" disabled id="dbName" ng-model="field.databaseName">\n                  <div class="field-description">The name of the column in the database</div>\n                </div>\n                <div class="form-group form-group-half" ng-if="field.type === \'MultiSelect\'">\n                  <label class="strong" for="dbName">Database Name</label>\n                  <input type="text" class="form-control" disabled id="dbName" ng-value="\'** added by Backand \'">\n                  <div class="field-description">The field represent a collection of objects</div>\n                </div>\n                <div class="form-group form-group-half" ng-if="field.relatedViewName !== \'\'">\n                  <label class="strong">Related Object</label>\n                  <div class="input-group">\n                    <input ng-disabled="true" type="text" class="form-control"\n                                        ng-model="field.relatedViewName">\n                    <span style="color:#428bca;" class="input-group-addon ti-angle-double-right addon-goto-object"\n                          ng-disabled="false"\n                          ui-sref="object_fields({tableName: field.relatedViewName, tableId: fields.getTableId(field.relatedViewName)})">\n                    </span>\n                    </div>\n                  <div class="field-description">One to many relationship object</div>\n                </div>\n                <div class="form-group form-group-half" ng-if="field.relatedViewName === \'\'">\n                  <label class="pull-right ui-switch ui-switch-success ui-switch-sm"><input\n                    ng-disabled="field.advancedLayout.delete" id="Searchable" type="checkbox"\n                    ng-model="field.grid.hideFilter" checked=""><i></i></label>\n                  <label class="strong" for="Searchable">Searchable</label>\n                  <div class="field-description">Include the filed in textual search filter</div>\n                </div>\n\n                <div class="form-group form-group-half">\n                  <label class="strong" for="DatabaseType">Type</label>\n                  <input type="text" class="form-control" disabled id="DatabaseType"\n                         ng-model="fields.newTypes[field.type]">\n                  <div class="field-description">The type of the field in Backand</div>\n                </div>\n                <div class="form-group form-group-half">\n                  <label class="strong" for="Required">Required</label>\n                  <label class="pull-right ui-switch ui-switch-success ui-switch-sm"><input\n                    ng-disabled="true" id="Required" type="checkbox"\n                    ng-model="field.advancedLayout.required" checked=""><i></i></label>\n                  <div class="field-description">Require that a value is provided for this field during record creation</div>\n                </div>\n                <div class="form-group form-group-half">\n                  <label class="strong" for="DefaultValue">Default Value</label>\n                  <input ng-disabled="true" type="text" class="form-control" id="DefaultValue"\n                         ng-model="field.advancedLayout.defaultValue">\n                  <div class="field-description">This value will be used as a default during creation</div>\n                </div>\n              </div><!--group inner-->\n\n            </div><!--field-group-->\n            <div class="field-group">\n              <h4 class="group-label">Server Side Validation</h4>\n              <div class="group-inner">\n\n                <div class="form-group form-group-half" ng-show="field.type==\'Numeric\'">\n                  <label class="strong" for="minVal">Min Value</label>\n                  <input ng-disabled="field.advancedLayout.delete"  type="text" class="form-control" id="minVal"\n                         ng-model="field.advancedLayout.minimumValue">\n                  <div class="field-description">The minimum value of the field</div>\n                </div>\n                <div class="form-group form-group-half" ng-show="field.type==\'Numeric\'">\n                  <label class="strong" for="maxVal">Max Value</label>\n                  <input ng-disabled="field.advancedLayout.delete"  type="text" class="form-control" id="maxVal"\n                         ng-model="field.advancedLayout.maximumValue">\n                  <div class="field-description">The maximum value of the field</div>\n                </div>\n                <!--<div class="form-group" ng-show="field.type==\'DateTime\'">-->\n                  <!--<label class="strong" for="Format">Format</label>-->\n                  <!--<input ng-disabled="field.advancedLayout.delete"  type="text" class="form-control" id="Format"-->\n                         <!--ng-model="field.advancedLayout.format">-->\n                  <!--<div class="field-description">Date or number format to be forced in the server side</div>-->\n                <!--</div>-->\n                <div class="form-group form-group-half">\n                  <label class="pull-right ui-switch ui-switch-success ui-switch-sm"><input ng-disabled="field.advancedLayout.delete"  id="ExcludeUpdate" type="checkbox" ng-model="field.advancedLayout.excludeInUpdate" checked=""><i></i></label>\n                  <label class="strong" for="ExcludeUpdate">Exclude in Update</label>\n                  <div class="field-description">Use the field in any server side rule but don\'t save to the database when updating a row</div>\n                </div>\n                <div class="form-group form-group-half">\n                  <label class="pull-right ui-switch ui-switch-success ui-switch-sm"><input ng-disabled="field.advancedLayout.delete"  id="ExcludeInsert" type="checkbox" ng-model="field.advancedLayout.excludeInInsert" checked=""><i></i></label>\n                  <label class="strong" for="ExcludeInsert">Exclude in Create</label>\n                  <div class="field-description">Use the field in any server side rule but don\'t save to the database when creating new row</div>\n                </div>\n              </div>\n            </div>\n            <!--<div class="row">\n              <div class="form-group col-md-6" ng-show="field.type==\'ShortText\' || field.type==\'LongText\'">\n                <label for="minLen">Min Length</label>\n                <input ng-disabled="field.advancedLayout.delete"  type="text" class="form-control ui-switch ui-switch-success" id="minLen"\n                       ng-model="field.advancedLayout.maximumLength">\n              </div>\n              <div class="form-group col-md-6" ng-show="field.type==\'ShortText\' || field.type==\'LongText\'">\n                <label for="maxLen">Max Length</label>\n                <input ng-disabled="field.advancedLayout.delete"  type="text" class="form-control" id="maxLen"\n                       ng-model="field.advancedLayout.minimumLength">\n              </div>\n            </div>-->\n\n        <!--    <div class="form-group col-sm-4" >\n              <label for="allowCreate">Allow Create</label>\n              <input ng-disabled="field.advancedLayout.delete"  type="text" class="form-control" id="allowCreate"\n                     ng-model="field.permissions.allowCreate">\n            </div>\n            <div class="form-group col-sm-4" >\n              <label for="allowEdit">Allow Edit</label>\n              <input ng-disabled="field.advancedLayout.delete"  type="text" class="form-control" id="allowEdit"\n                     ng-model="field.permissions.allowEdit">\n            </div>\n            <div class="form-group col-sm-4" >\n              <label for="allowRead">Allow Read</label>\n              <input ng-disabled="field.advancedLayout.delete"  type="text" class="form-control" id="allowRead"\n                     ng-model="field.permissions.allowRead">\n            </div>-->\n\n\n            <!--<div class="form-group">-->\n              <!--<label  for="EnableUpload">Enable Upload</label>-->\n              <!--<label class="pull-right ui-switch ui-switch-success ui-switch-sm"><input ng-disabled="field.advancedLayout.delete"  id="EnableUpload" type="checkbox" ng-model="field.EnableUpload" checked=""><i></i></label>-->\n            <!--</div>-->\n            <div class="field-group">\n              <div class="group-inner">\n                <div class="form-group">\n                  <label class="pull-right ui-switch ui-switch-success ui-switch-sm"><input id="excluded" type="checkbox"  ng-model="field.advancedLayout.delete" checked=""><i></i></label>\n                  <label class="strong" for="excluded">Ignore this field</label>\n                  <div class="field-description">When true, this field will be ignored by any server-side actions</div>\n                </div>\n              </div>\n            </div>\n          </form>\n        </tab>\n      </tabset>\n    </div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/log/log.html",'<div ng-controller="LogData as data" id="grid-container">\n  <div ui-grid="data.gridOptions"\n       class="datagrid"\n       ng-show="data.gridOptions.totalItems > 0">\n  </div>\n  <div ng-show="data.gridOptions.totalItems == 0">\n    <h3>No data in {{data.title}}</h3>\n  </div>\n  <div ng-show="data.gridOptions.totalItems > 0" class="row">\n    <div class="col-md-5">\n      <pagination total-items="data.gridOptions.totalItems" ng-model="data.paginationOptions.pageNumber" max-size="5" class="pagination-sm" boundary-links="true" rotate="false" items-per-page="data.paginationOptions.pageSize" previous-text="&lsaquo;" next-text="&rsaquo;"></pagination>\n    </div>\n    <div class="col-md-2" style="margin-top:20px;">\n      Page size:\n      <select class="ui-select" ng-model="data.paginationOptions.pageSize" >\n        <option ng-repeat="size in data.paginationOptions.pageSizes">{{size}}</option>\n      </select>\n    </div>\n    <div class="col-md-5" style="margin-top:20px;">\n      <span class="pull-right">Showing {{data.paginationOptions.pageSize * (data.paginationOptions.pageNumber-1) +1}} to {{data.pageMax(data.paginationOptions.pageSize, data.paginationOptions.pageNumber, data.gridOptions.totalItems)}} of {{data.gridOptions.totalItems}} rows</span>\n    </div>\n  </div>\n</div>\n')
}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/model/model.html",'<div class="db-footer">\n  <button type="submit" class="btn btn-success btn-lg btn-w-lg"\n          ladda="Model.loading" data-style="expand-right"\n          ng-click="Model.saveSchema()">Validate & Update</button>\n  <button class="btn btn-info btn-lg btn-w-lg "\n          ng-click="Model.showHelp()">Help</button>\n</div>\n\n<div ng-cloak>\n  <angled-window ng-show="Model.showHelpDialog"\n                       title="Help"\n                       id="help"\n                       grouping="w"\n                       close-function="Model.closeHelp()"\n                       rolled-up="false"\n                       css-class="model-help">\n  <div ng-include="\'views/docs/orm_help.html\'"></div>\n</angled-window>\n</div>\n\n<section class="page-form-ele page ng-scope">\n  <section class="panel panel-default">\n    <div class="panel-heading">\n     <button type="submit" class="btn btn-success pull-right btn-md btn-w-md" style="margin-top: -6px;"\n          ladda="Model.loading" data-style="expand-right"\n          ng-click="Model.saveSchema()">Validate & Update</button>\n\n      <strong test-hook="database-edit.title">model configuration</strong>\n\n      <div us-spinner spinner-key="loading" spinner-start-active="true"></div>\n    </div>\n\n    <div class="panel-body">\n      <div>\n\n        <div class="ui-tab-container ui-tab-horizontal">\n          <tabs data="Model.tabs" type="tabs" />\n          <div class="tab-content" ui-view></div>\n\n        </div>\n        <br/>\n      </div>\n    </div>\n\n  </section>\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/restapi/restapi.html",'<section class="ng-scope">\n    <div class="panel panel-default">\n        <div class="panel-heading">\n            <strong>REST API</strong>\n            <us-spinner spinner-key="loading" spinner-start-active></us-spinner>\n        </div>\n        <div class="panel-body">\n          <div class="row col-sm-12" ng-bind-html="rest.urlPrefix">\n              <!--<iframe id="restIfrmae" src="//www.modubiz.us:4019/misc/rest-api/index.html?useToken=true#!/Database_Table_Data" style="height:578px;width:1028px;border: none"></iframe>-->\n          </div>\n          <h5 class="panel-item">\n            Click on \'Try it out!\' to see the JSON result and the endpoint URL\n          </h5>\n        </div>\n    </div>\n</section>\n\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/rules/action_template_modal.html",'<div class="modal-header">\n  <h3 class="modal-title">Save Action Template </h3>\n</div>\n<div class="modal-body edit-row-modal">\n  <form ng-submit="actionTemplateCtrl.saveActionTemplate()"\n        name="actionTemplateCtrl.editActionTemplateForm"\n        novalidate>\n    <fieldset>\n      <div class="form-group">\n        <label for="shortDescription">\n          Short Description\n        </label>\n        <input class="form-control" id="shortDescription" ng-model="actionTemplateCtrl.actionTemplate.shortDescription">\n      </div>\n      <div class="form-group">\n        <label for="Category">\n          Category\n        </label>\n        <select class="form-control"\n                id="Category"\n                ng-model="actionTemplateCtrl.actionTemplate.Category"\n                ng-options="category.id as category.label for category in actionTemplateCtrl.categories">\n          </select>\n      </div>\n      <div class="form-group">\n        <label for="documentation">\n          Documentation\n        </label>\n        <textarea class="form-control" id="documentation" ng-model="actionTemplateCtrl.actionTemplate.documentation"></textarea>\n      </div>\n      <div class="form-group">\n        <label for="imageUrl">\n          Image URL\n        </label>\n        <input class="form-control" id="imageUrl" ng-model="actionTemplateCtrl.actionTemplate.json.imageUrl">\n      </div>\n    </fieldset>\n    <div class="modal-footer">\n      <button class="btn btn-success"\n              ladda="actionTemplateCtrl.savingActionTemplate">\n        Save\n      </button>\n      <input type="button" class="btn btn-default"\n             ng-click="actionTemplateCtrl.cancelActionTemplate()"\n             value="Cancel">\n      </input>\n    </div>\n  </form>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/rules/action_templates.html",'<div class="col-xs-8 col-md-9 action-template-container">\n  <h3>Add a New Action</h3>\n  <button ng-click="rules.newAction()"\n          id="new-rule-btn with-margin"\n          class="btn btn-lg new-action-button">\n    + New Blank Action\n  </button>\n  or use a 3rd party integration snippet:\n  <div ng-repeat="(categoryId, templates) in rules.actionTemplates">\n    <div class="action-template-category">{{ ::rules.getCategoryLabel(categoryId) }}</div>\n    <!-- a and img elements must be in the same line, otherwise space is inserted between them-->\n    <div class="action-template-icons-container">\n      <a href=""\n         ng-repeat="template in templates track by template.id"\n         ng-click="rules.templateToShow = template"\n         ng-show="!rules.action || rules.action.workflowAction === template.ruleType"\n         ng-class="{\'action-template-active\': rules.templateToShow === template}"\n         ><img class="action-template-icon"\n             ng-show="template.json.imageUrl"\n             ng-src="{{template.json.imageUrl}}"></a>\n\n    </div>\n\n    <div ng-show="rules.templateToShow && rules.templateToShow.category == categoryId"\n         ng-click="rules.selectTemplate(rules.templateToShow)"\n         class="action-template-description-container">\n      <div class="action-template-text-container">\n        <span class="action-template-title">{{rules.templateToShow.name}}</span>\n        <br/>\n        <span class="action-template-description">{{rules.templateToShow.shortDescription}}</span>\n        <br/>\n        <div style="margin-top: 10px;">\n          <button\n                  class="btn btn-success pull-left">\n            <strong>+ Add Action</strong>\n          </button>\n          <a ng-href="{{rules.templateToShow.json.docsUrl}}" target="_blank" class="action-template-docs-link" ng-click="$event.stopPropagation();">\n            <!--<i class="ti-help-alt"></i>-->\n            Read Documentation\n          </a>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/rules/dictionary_window.html",'<div ng-repeat="dictionarySection in anchorParams.dictionarySections">\n  <strong>{{ dictionarySection }}</strong>\n  <ul class="list-unstyled">\n    <li ng-repeat="item in anchorParams.getDictionaryItems(dictionarySection)"\n        ng-click="anchorParams.insertAtChar(inputId, item.token)"\n        style="cursor:pointer;">{{item.label}}\n\n      <!--<a ng-show="prevNeeded"\n      class="pull-right" href=""\n      ng-click="anchorParams.insertAtChar(inputId, \'prev:\' + prop.token); $event.stopPropagation()">prev value</a>-->\n    </li>\n  </ul>\n\n  <hr/>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/rules/email_form.html",'<fieldset ng-disabled="!rules.editMode">\n  <div class="form-group col-lg-6 col-md-6 col-sm-6"\n       ng-class="{\'has-error\': rules.newRuleForm.emailTo.$invalid}">\n\n    <label for="emailTo">To:</label>\n    <ba-tooltip tooltip-text="Use ; (semi-colon) for multiple emails" tooltip-placement="right" class=""></ba-tooltip>\n    <bknd-anchor anchor-params="rules.anchorParams"\n                 window-title="Email Recipient"\n                 input-id="emailTo"></bknd-anchor>\n    <input type="text"\n           required\n           name="emailTo"\n           id="emailTo"\n           ng-model="rules.action.to"\n           class="form-control"/>\n\n  </div>\n\n  <div class="form-group col-lg-6 col-md-6 col-sm-6"\n       ng-class="{\'has-error\': rules.newRuleForm.emailCc.$invalid}">\n    <label for="emailCc">Cc:</label>\n\n    <bknd-anchor anchor-params="rules.anchorParams"\n                 window-title="Email - CC"\n                 input-id="emailCc"></bknd-anchor>\n\n    <input type="text"\n           name="emailCc"\n           id="emailCc"\n           ng-model="rules.action.cc"\n           class="form-control"/>\n  </div>\n\n  <div class="form-group col-lg-6 col-md-6 col-sm-6"\n       ng-class="{\'has-error\': rules.newRuleForm.emailBcc.$invalid}">\n    <label for="emailBcc">Bcc:</label>\n\n    <bknd-anchor anchor-params="rules.anchorParams"\n                 window-title="Email - BCC"\n                 input-id="emailBcc"></bknd-anchor>\n\n    <input type="text"\n           id="emailBcc"\n           name="emailBcc"\n           ng-model="rules.action.bcc"\n           class="form-control"/>\n  </div>\n\n  <div class="form-group col-lg-6 col-md-6 col-sm-6"\n       ng-class="{\'has-error\': rules.newRuleForm.emailFrom.$invalid}">\n    <label for="emailFrom">From:</label>\n\n    <input type="text"\n           id="emailFrom"\n           name="emailFrom"\n           ng-model="rules.action.from"\n           placeholder="Leave empty for default"\n           class="form-control"/>\n  </div>\n\n  <div class="form-group col-lg-12 col-md-12 col-sm-12"\n       ng-class="{\'has-error\': rules.newRuleForm.emailSubject.$invalid}">\n\n    <label for="emailSubject">Subject:</label>\n\n    <bknd-anchor anchor-params="rules.anchorParams"\n                 window-title="Email Subject"\n                 input-id="emailSubject"></bknd-anchor>\n\n    <input type="text"\n           required\n           name="emailSubject"\n           id="emailSubject"\n           ng-model="rules.action.subject"\n           ng-maxlength="200"\n           class="form-control"/>\n  </div>\n\n  <div class="form-group col-lg-12 col-md-12 col-sm-12"\n       ng-class="{\'has-error\': rules.newRuleForm.notifyMessage.$invalid}">\n\n    <label for="emailMessage">Message:</label>\n\n    <bknd-anchor anchor-params="rules.anchorParams"\n                 window-title="Email Message"\n                 input-id="emailMessage"></bknd-anchor>\n\n          <textarea class="form-control"\n                    name="emailMessage"\n                    id="emailMessage"\n                    ng-model="rules.action.notifyMessage"\n                    style="resize: vertical" rows="10"\n                    on-update="modal.digest()">\n          </textarea>\n  </div>\n</fieldset>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/rules/js_code_help.html",'<section class="" style="width: 650px;">\n  <div class="panel panel-default">\n    <div class="panel-heading"><strong>Server side JavaScript actions</strong></div>\n    <div class="panel-body">\n  <p>You can run standard JavaScript on the server.\n    It runs on the <a href="http://en.wikipedia.org/wiki/V8_(JavaScript_engine)">V8 engine</a>.\n    To execute the JavaScript action, put your code into the following function:</p>\n      <pre><code>\n    function backandCallback(userInput, dbRow, parameters, userProfile) {\n        // write your code here\n        return {};\n    }\n      </code></pre>\n  <p>The function parameters are:</p>\n  <ul>\n    <li><strong>userInput</strong>:\n      This parameter is only provided for Create and Update actions,\n      and is the object that was sent to the action.\n      It is null for Delete actions, as well as for On Demand actions.\n    </li>\n    <li><strong>dbRow</strong>:\n      This parameter is populated in After Create, Update, and Delete automated actions,\n      and if you supply an optional ID to an On Demand action.\n      The dbRow parameter will contain the row\'s entry in the database prior to any changes made.\n    </li>\n    <li><strong>parameters</strong>:\n      This parameter represents the variables sent in the query string for the action.\n    </li>\n    <li><strong>userProfile</strong>:\n      This parameter stores the current username, the user\'s role,\n      app name and the access token used by the user to perform the action.\n      It is of the format {"username": "string", "role": "string","app": "string", "token": "string"}.\n      In addition to the above parameters, you can also make use of the following global objects:\n    </li>\n    <li>$http - a service for HTTP calls, similar to Angular $http but\n      without the promise, since it is a server side function it always runs in sync;\n      <ul>\n        <li>GET example:\n  <pre><code>\n    var response = $http({\n      method: "GET",\n      url: CONSTS.apiUrl + "/1/objects/objectexample",\n      params: {\n        filter: [{\n          fieldName: "fieldexample",\n          operator:"contains",\n          value:"somestring"\n        }]\n      },\n      headers: {"Authorization": userProfile.token}\n    });\n  </code></pre>\n        </li>\n        <li>POST example:\n  <pre><code>\n    var response = $http({\n      method: "POST",\n      url:CONSTS.apiUrl + "/1/objects/objectexample",\n      data: {\n        fieldexample1: "somevalue",\n        fieldexample2: "somevalue"\n      },\n      headers: {"Authorization": userProfile.token}\n    });\n  </code></pre>\n        </li>\n        <li>PUT example:\n  <pre><code>\n    var response = $http({\n      method: "PUT",\n      url: CONSTS.apiUrl + "/1/objects/objectexample/5",\n      data: {\n        fieldexample1: "somevalue",\n        fieldexample2: "somevalue"\n      },\n      headers: {"Authorization": userProfile.token}\n    });\n  </code></pre>\n        </li>\n        <li>DELETE example:\n  <pre><code>\n    var response = $http({\n      method: "DELETE",\n      url: CONSTS.apiUrl + "/1/objects/objectexample/5",\n      headers: {"Authorization": userProfile.token}\n    });\n  </code></pre>\n        </li>\n      </ul>\n    </li>\n    <li>CONSTS - CONSTS.apiUrl for Backand\'s API URL</li>\n    <li>Return values:<br/>\n      On Demand actions, will return whatever is returned by the custom server code,\n      which can be any properly-formatted JSON.\n      Trigger actions will have a response that matches the format\n      expected by the triggering call (such as the return value of a CREATE call).\n    </li>\n  </ul>\n  <h3>Debugging</h3>\n    <p><code>console.log(object)</code> and <code>console.error(object)</code>\n    </p>\n  <h3>Error Handling</h3>\n\n  <p>If your code results in an error (for example, if you write the following:\n    <code>throw new Error("An error occurred!"))</code>,\n    the request will return HTTP status 417,\n    and the response body will contain the associated error message.\n  </p>\n  </div>\n  </div>\n</section>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/rules/new_rule.html",'<div ng-if="rules.action">\n  <div ng-cloak>\n    <angled-window ng-show="rules.showJsCodeHelpDialog"\n                   title="Help - JavaScript Code"\n                   id="help"\n                   grouping="w"\n                   close-function="rules.showJsCodeHelpDialog = false"\n                   rolled-up="false"\n                   css-class="js-code-help">\n      <div ng-include="\'views/tables/rules/js_code_help.html\'"></div>\n    </angled-window>\n  </div>\n  <form name="rules.newRuleForm" insert-at-caret novalidate ng-submit="rules.saveAction()"\n        ng-model-options="{updateOn: \'default blur\', debounce: {\'default\': 300, blur: 0}}">\n    <div class="header row">\n      <div class="col-lg-12 col-md-12 col-sm-12">\n      <div class="col-lg-9 col-md-9 col-sm-8">\n        <div class="form-inline" name="rules.newRuleForm">\n          <div class="form-group"\n               ng-class="{\'has-error\': rules.newRuleForm.ruleName.$invalid}">\n\n            <label for="ruleName"><h3 class="title">{{modal.title}} - </h3></label>\n\n            <input type="text"\n                   id="ruleName"\n                   name="ruleName"\n                   class="rule-name form-control"\n                   ng-model="rules.action.name"\n                   required\n                   ng-pattern="rules.namePattern"\n                   placeholder="Name your action"\n                   ng-disabled="!rules.editMode || rules.isConstName(rules.action.name)">\n            <ba-tooltip tooltip-text="Use the action name in the request URL query string of the REST API"\n                        tooltip-placement="right" class=""></ba-tooltip>\n\n            <span ng-show="rules.editMode && rules.isConstName(rules.action.name)">In system action the name cannot be\n              modified.</span>\n\n            <div ng-messages="rules.newRuleForm.ruleName.$error">\n              <div ng-message="pattern" class="text-danger">Use only letters, numbers, space or underscore</div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n      <div class="col-lg-3 col-md-3 col-sm-4">\n\n        <input type="button" ng-show="rules.allowEditAction()"\n                ng-click="rules.editAction()"\n                class="btn btn-primary pull-right with-margin"\n          value="Edit Action">\n        </input>\n\n        <div ng-show="rules.editMode">\n          <input type="button"\n                 ng-click="rules.newRuleForm.$pristine ? rules.doneEdit() : rules.cancelEdit()"\n                 class="btn btn-default pull-right with-margin"\n                 value="{{ rules.newRuleForm.$pristine ? \'Done\' : \'Cancel\' }}">\n          </input>\n\n          <button ng-disabled="rules.newRuleForm.$invalid"\n                  class="btn btn-primary pull-right with-margin"\n                  ladda="rules.saving" data-style="expand-right">Save\n          </button>\n          <input type="button" ng-if="false"\n                 ng-click="rules.saveActionTemplate()"\n                 ng-disabled="rules.newRuleForm.$invalid"\n                 class="btn btn-primary pull-right with-margin"\n                 data-style="expand-right"\n                 value="Save Template">\n          </input>\n        </div>\n      </div>\n      <br/>\n\n      <div class="col-xs-12">\n        <input type="button" name="testCode"\n               ng-show="!rules.isNewAction"\n               class="pull-right btn btn-success btn-xs with-margin"\n               ng-click="rules.toggleTestForm()"\n               value="{{ rules.requestTestForm ? \'<< Hide Test\' : \'Test Action >>\'}}">\n        </input>\n      </div>\n      </div>\n    </div>\n\n    <div class="clearfix">\n\n      <fieldset>\n\n        <div class="form-group col-lg-12 col-md-12 col-sm-12"\n             ng-class="{\'has-error\': rules.newRuleForm.eventTrigger.$invalid}">\n          <label>Event Trigger</label>\n          <ba-tooltip\n            tooltip-text="Select the event that will trigger the action: on-demand via REST API or by CRUD request"\n            tooltip-placement="right" class=""></ba-tooltip>\n          <select class="form-control"\n                  ng-options="dataAction.value as dataAction.label for dataAction in modal.dataActions"\n                  ng-model="rules.action.dataAction"\n                  ng-disabled="!rules.editMode">\n            <option value="">Select trigger...</option>\n          </select>\n        </div>\n\n        <div class="form-group col-lg-12 col-md-12 col-sm-12" ng-show="rules.action.dataAction"\n             ng-class="{\'has-error\': rules.newRuleForm.action.$invalid}">\n\n          <label for="workflowAction">Type</label>\n          <ba-tooltip\n            tooltip-text="Select if you would like to run JavaScipt code, send email or execute database transaction script"\n            tooltip-placement="right" class=""></ba-tooltip>\n          <select class="form-control"\n                  name="action"\n                  id="workflowAction"\n                  required\n                  ng-options="workflowAction.value as workflowAction.label for workflowAction in modal.workflowActions"\n                  ng-model="rules.action.workflowAction"\n                  ng-model-options="{debounce: 0}"\n                  ng-disabled="!rules.editMode">\n            <option value="">Select what to do...</option>\n          </select>\n        </div>\n\n        <div class="form-group col-lg-12 col-md-12 col-sm-12"\n             ng-show="rules.action.workflowAction"\n             ng-class="{\'has-error\': rules.newRuleForm.inputParameters.$invalid}">\n          <label>Input Parameters</label>\n          <ba-tooltip tooltip-text="Use this to send additional parameters to the action" tooltip-placement="right"\n                      class=""></ba-tooltip>\n          <input type="text"\n                 ng-change="modal.buildParameters()"\n                 name="inputParameters"\n                 class="form-control"\n                 ng-model="rules.action.inputParameters"\n                 ng-pattern="rules.paramsPattern"\n                 placeholder="input1,input2,...."\n                 ng-disabled="!rules.editMode">\n          <div ng-messages="rules.newRuleForm.inputParameters.$error">\n            <div ng-message="pattern" class="text-danger">Use only letters, numbers and underscore for the parameters. Use commas as delimiters.</div>\n          </div>\n        </div>\n\n        <div ng-switch="rules.action.workflowAction">\n\n          <div class="form-group col-lg-12 col-md-12 col-sm-12"\n               ng-show="rules.action.workflowAction">\n\n            <!-- notify options -->\n            <div ng-switch-when="Notify">\n              <div ng-include="\'views/tables/rules/email_form.html\'"></div>\n            </div>\n            <!--./notify -->\n\n            <!-- execute SQL -->\n            <div ng-switch-when="Execute">\n\n              <div class="form-group col-lg-12 col-md-12 col-sm-12"\n                   ng-class="{\'has-error\': rules.newRuleForm.sqlCommand.$invalid, \'action-ace-show-test\': rules.requestTestForm}">\n\n                <label for="sqlCommand">Sql Script</label>\n                <ba-tooltip tooltip-text="The script uses SQL syntax and allows you to update other tables"\n                            tooltip-placement="right" class=""></ba-tooltip>\n\n                <bknd-anchor anchor-params="rules.anchorParams"\n                             window-title="SQL Command"\n                             input-id="sqlCommand"></bknd-anchor>\n\n                <bknd-ace-features editor="rules.ace.editor">\n                  <div\n                    ui-ace="{onLoad : rules.ace.onLoad, theme:\'dawn\', mode: ace.dbType, rendererOptions: { fontSize: 15 }}"\n                    class="form-control"\n                    name="sqlCommand"\n                    id="sqlCommand"\n                    ng-model="rules.action.command"\n                    required\n                    style="resize: vertical"\n                    ng-readonly="!rules.editMode">\n                  </div>\n                </bknd-ace-features>\n              </div>\n\n              <div class="form-group col-lg-12 col-md-12 col-sm-12"\n                   ng-class="{\'has-error\': rules.newRuleForm.sqlMessage.$invalid}">\n                <label for="sqlMessage">Message:</label>\n                <ba-tooltip tooltip-text="Returned message in case the sql script failed" tooltip-placement="right"\n                            class=""></ba-tooltip>\n\n          <textarea class="form-control"\n                    ng-model="rules.ac=tion.executeMessage"\n                    name="sqlMessage"\n                    id="sqlMessage"\n                    style="resize: vertical"\n                    ng-disabled="!rules.editMode"></textarea>\n              </div>\n            </div>\n            <!-- ./execute SQL-->\n\n            <!--code-->\n            <div ng-switch-when="JavaScript">\n\n              <div ng-class="{\'has-error\': rules.newRuleForm.code.$invalid}">\n\n                <div class="form-group" ng-class="{\'action-ace-show-test\': rules.requestTestForm}">\n                  <label for="code">JavaScript Code</label> <a href="" ng-click="rules.showJsCodeHelpDialog = true">Need help?</a>\n\n                  <bknd-ace-features editor="ace.editors.code" nesting-form="rules.newRuleForm">\n                    <div\n                      ui-ace="{onLoad : ace.onLoad, theme:\'monokai\', mode: \'javascript\', rendererOptions: { fontSize: 15 }}"\n                      class="form-control ace-rule"\n                      name="code"\n                      id="code"\n                      ng-model="rules.action.code"\n                      required\n                      ng-pattern="rules.codePattern"\n                      ng-keydown="modal.handleTabKey($event)"\n                      style="resize: vertical; "\n                      ng-readonly="!rules.editMode">\n                    </div>\n                  </bknd-ace-features>\n\n                  <!-- workaround: ui-ace doesn\'t work well in input, ng-pattern doesn\'t work on div-->\n                  <input ng-hide="true" name="codeHidden" ng-model="rules.action.code" ng-pattern="rules.codePattern">\n                  <div ng-messages="rules.newRuleForm.codeHidden.$error">\n                    <div ng-message="pattern" class="text-danger">Please use the original function signature.</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <!-- ./code -->\n            <!-- end switch -->\n          </div>\n          <div class="form-group col-lg-12 col-md-12 col-sm-12" ng-show="rules.action.workflowAction"\n               ng-class="{\'has-error\': rules.newRuleForm.whereCondition.$invalid && rules.newRuleForm.whereCondition.$dirty}">\n            <label for="whereCondition">Where Condition</label>\n            <ba-tooltip tooltip-text="SQL where clause that determines if the action will be performed"\n                        tooltip-placement="right" class=""></ba-tooltip>\n\n            <bknd-anchor anchor-params="rules.anchorParams"\n                         window-title="Where Condition"\n                         input-id="whereCondition"\n                         prev-needed="true"></bknd-anchor>\n\n            <div ui-ace="{onLoad : ace.onLoad, theme:\'dawn\', mode: ace.dbType, rendererOptions: { fontSize: 15 }}"\n                 id="whereCondition"\n                 required\n                 name="whereCondition"\n                 class="form-control ace-action-where"\n                 placeholder=""\n                 ng-model="rules.action.whereCondition"\n                 style="resize: vertical"\n                 ng-readonly="!rules.editMode">\n            </div>\n            <span ng-show="rules.editMode">** Enter \'true\' to ensure the action always executes, or use the anchor icon to build a condition governing the execution</span>\n          </div>\n\n          <div class="modal-footer" ng-show="rules.action && rules.editMode">\n            <button class="btn btn-primary" ng-disabled="rules.newRuleForm.$invalid"\n                    ladda="rules.saving" data-style="expand-right">Save\n            </button>\n            <input type="button"\n                   class="btn btn-danger pull-left"\n                   ng-click="rules.deleteAction()"\n                   ng-if="rules.action.__metadata"\n                   value="Delete">\n            </input>\n            <input type="button"\n                   class="btn btn-default"\n                   ng-click="rules.newRuleForm.$pristine ? rules.doneEdit() : rules.cancelEdit()"\n                   value="{{ rules.newRuleForm.$pristine ? \'Done\' : \'Cancel\'}}">\n            </input>\n          </div>\n        </div>\n      </fieldset>\n\n    </div>\n  </form>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/rules/rules.html",'<div ng-controller="RulesController as rules">\n\n  <div id="rules-header" class="page-header clearfix">\n    <div class="title-group">\n      <h2 class="page-name ">Actions</h2>\n      <h4 class=" page-description lead pull-left">Manage here all the server side logic and operations</h4>\n    </div>\n    <button ng-show="rules.action && !rules.editMode"\n            ng-click="rules.newAction()"\n            id="new-rule-btn"\n            class="btn btn-success pull-right">\n      + New Action\n    </button>\n\n\n  </div>\n\n  <div class="row">\n    <div ng-show="!rules.editMode && !rules.requestTestForm" class="col-xs-4 col-md-3 rule-column actions-animate-show">\n\n      <ul  class="list-unstyled rule-tree">\n\n        <li ng-repeat="item in rules.items">\n\n          <div class="rule-group-title">\n            <a href="" ng-click="item.visible = !item.visible" class="" >\n              <span class="col-xs-1">{{rules.treeSign(item)}}</span> <!-- + or - -->\n              {{ ::item.title }}\n            </a>\n          </div>\n\n          <ul class="rules-sub-items-list" ng-show="item.visible">\n\n            <li ng-repeat="subitem in item.items">\n\n              <div class="row rule-sub-title">\n                <a href="" ng-click="subitem.visible = !subitem.visible">\n                  <span class="col-xs-1">{{rules.treeSign(subitem)}}</span>\n                  {{ ::subitem.title }}</a>\n                <ba-tooltip tooltip-text="{{ ::subitem.description }}" tooltip-placement="right" class=""></ba-tooltip>\n                <button\n                   class="btn btn-xs btn-success pull-right rule-small-btn"\n                   ng-click="rules.newAction(subitem.dataAction)">+\n                </button>\n              </div>\n\n              <ol class="rules-names-list" ng-show="subitem.visible">\n\n                <li ng-repeat="rule in subitem.items" >\n\n                  <a href="" ng-click="rules.showAction(rule.name)" class="rule-name">\n                  {{ ::rule.name}}</a>\n                </li>\n\n              </ol>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n\n    <div ng-hide="rules.action" ng-include="\'views/tables/rules/action_templates.html\'"></div>\n\n    <div ng-class="(!rules.editMode || rules.showTestForm()) ? \'col-xs-8 col-md-9\' : \'col-xs-12\'"\n         class="actions-display"\n         ng-include="\'views/tables/rules/new_rule.html\'"></div>\n    <div ng-show="rules.showTestForm()"\n         class="col-xs-4 col-md-3 test-column actions-animate-show"\n         ng-include="\'views/tables/rules/test_code_window.html\'"></div>\n  </div>\n</div>\n\n\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/rules/test_code_window.html",'<h3>Test Action</h3>\n<br/>\n<form role="form" name="rules.inputParametersForm" novalidate>\n\n  <label>Parameters</label>\n\n  <div class="form-group" ng-repeat="inputParam in rules.test.inputParametersArray">\n    <label for="inputParam">{{inputParam}}</label>\n    <input type="text"\n           id="inputParam"\n           class="form-control"\n           ng-model="rules.test.parameters[inputParam]">\n  </div>\n\n  <hr class="narrow-top-margin">\n  <div class="form-group" ng-if="rules.getDataActionType() !== \'Create\'">\n    <label>Item Id <span ng-show="rules.getDataActionType() === \'On Demand\'">(Optional)</span></label>\n    <input type="number"\n           name="rowId"\n           id="rowId"\n           class="form-control"\n           max="{{rules.lastRowId}}"\n           ng-model="rules.test.rowId" ng-required="rules.getDataActionType() === \'Update\' || rules.getDataActionType() === \'Delete\'">\n  </div>\n\n  <div class="form-group">\n    <label for="rowData">{{ rules.ace.message }}</label>\n    <div us-spinner spinner-key="loading-row" us-spinner="{length:10, radius: 10}" style="position: relative; top: 100px;"></div>\n    <div\n      ui-ace="{onLoad : rules.ace.onLoad, theme:\'monokai\', mode: \'json\', firstLineNumber: 1, rendererOptions: { fontSize: 15 } }"\n      class="form-control ace-db-template"\n      name="rowData"\n      id="rowData"\n      ng-model="rules.rowData"\n      required\n      ng-pattern="codeRegex"\n      style="resize: vertical; height: 200px;">\n  </div>\n    <div ng-show="rules.testRowObjectNotification" class="text-danger">{{rules.testRowObjectNotification}}</div>\n    </div>\n\n  <div class="row">\n    <div class="col-md-12">\n      <button type="submit"\n              style="margin-left: 20px; margin-bottom: 3px"\n              class="btn btn-success pull-right"\n              data-style="expand-right" ladda="rules.test.testLoading"\n              ng-disabled="!rules.allowTest() || !rules.allowTestEditMode"\n              ng-click="rules.testData()"> {{rules.testActionTitle}}\n      </button>\n\n      <button type="button"\n              style=""\n              class="btn btn-primary pull-right"\n              data-style="expand-right" ladda="rules.savingAndTesting"\n              ng-disabled="rules.allowTest()"\n              ng-click="rules.saveAction(true)">Save & Test\n      </button>\n\n      <div ng-show="!rules.allowTest()">** Must save first to enable Test</div>\n      <div ng-show="!rules.allowTestEditMode">** Must have data first. Click Data tab to add new rows.</div>\n    </div>\n  </div>\n\n<div ng-if="rules.test.resultStatus">\n  <hr/>\n  <label>Response Status:</label>\n  <br/>\n  {{ rules.test.resultStatus.code }} - {{ rules.test.resultStatus.text }}\n  <br/><br/>\n  <label>Response Body:</label>\n  <br/>\n  {{ rules.test.result | json }}\n  <br/>\n\n</div>\n\n\n<div ng-if="rules.test.resultStatus">\n  <hr class="narrow-top-margin"/>\n  <label>Debug Console:</label>\n  <br/>\n\n  <table class="table log-table">\n    <tbody>\n    <tr ng-repeat="message in rules.test.logMessages | orderBy: \'time\' "\n        ng-class="{\'text-danger\': message.isError}">\n      <td class="log-icon" ng-bind="message.isError? \'X\' : \'>\' "></td>\n      <td class="log-text">{{ message.text }}</td>\n    </tr>\n    </tbody>\n  </table>\n\n</div>\n\n  <div ng-show="rules.getDataActionType() === \'On Demand\'">\n    <label>Request URL:</label>\n    <bknd-copy-url copy-url-params="rules.copyUrlParams"></bknd-copy-url>\n  </div>\n\n  <br/>\n  <label>Request $http:</label>\n  <bknd-copy-url type="textarea" copy-url-params="rules.copyHttpParams"></bknd-copy-url>\n\n</form>\n')
}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/security/pre_defined_window.html",'<strong ng-bind="security.dictionaryItems.headings.tokens"></strong>\n\n<hr/>\n\n<ul class="list-unstyled">\n  <li ng-repeat="token in security.dictionaryItems.data.tokens"\n      ng-click="security.insertAtChar(security.predefinedFilterType ,token.token)"\n      ng-bind="token.label"\n      style="cursor:pointer;">\n  </li>\n</ul>\n\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/security/security.html",'<div class="row security-header security-filter">\n  <div class="col-lg-12 form-group">\n    <h3>Pre-defined Filter</h3>\n\n    <div class="field-description">\n      The pre-defined filter can be used to add additional restrictions to load data associated with the user\n      session\n      <ba-help-link key="preDefinedFilter"></ba-help-link>\n    </div>\n\n    <fieldset class="collapsible-fieldset"\n              ng-class="{\'fieldset-open\': security.showWizard, \'fieldset-closed\': !security.showWizard}">\n\n      <legend ng-click="security.showWizard = !security.showWizard">\n        <a href="">\n          Wizard</a>\n      </legend>\n\n      <div ng-show="security.showWizard">\n\n        <form name="filterCodeForm" class="form-inline" ng-submit="security.getFilterCode()" novalidate>\n          Filter <b>{{ security.currentObjectName }}</b> for current user session based on\n          <div class="form-group">\n            <label class="sr-only" for="user-object">User Object</label>\n            <select id="user-object"\n                    class="ui-select"\n                    ng-model="security.filter.userObjectName"\n                    ng-options="object.name as object.name for object in security.appObjects"\n                    ng-change="security.getUserObjectFields()"\n                    required\n                    style="min-width: 130px; vertical-align: text-bottom;"></select>\n          </div>\n          object by\n          <div class="form-group">\n            <label class="sr-only" for="email-field">Email</label>\n            <select id="email-field"\n                    class="ui-select"\n                    ng-model="security.filter.emailField"\n                    ng-options="field.name as field.name for field in security.filter.userObjectFields"\n                    required\n                    style="min-width: 130px; vertical-align: text-bottom;"></select>\n          </div>\n          field and\n          <div class="form-group">\n            <select id="show-to-admin"\n                    class="ui-select"\n                    ng-model="security.filter.dontShowToAdmin"\n                    style="min-width: 130px; vertical-align: text-bottom;">\n              <option value="" selected>always show</option>\n              <option value="dontShow">don\'t show</option>\n            </select>\n          </div>\n          items to admin.\n\n          <button class="btn btn-success pull-right" ng-disabled="filterCodeForm.$invalid">Get Code</button>\n        </form>\n\n      </div>\n    </fieldset>\n\n    <h4>Code Filter <span ng-show="security.showWizard">(</span><a href="" ng-show="security.showWizard"\n                        ng-click="security.showWizard = !security.showWizard">Customize Code</a><span ng-show="security.showWizard">)</span></h4>\n\n    <span ng-show="security.predefinedFilterType  === \'nosql\'">Need help with NoSQL syntax <ba-help-link key="nosqlQuery"></ba-help-link></span>\n\n    <div ng-cloak>\n      <angled-window ng-show="security.dictionaryState"\n                     id="{{winId}}"\n                     title="App Tokens"\n                     grouping="w"\n                     close-function="security.toggleOptions()"\n                     style="left: 550px; top: -50px; height:400px;">\n        <div ng-include="\'views/tables/security/pre_defined_window.html\'"></div>\n      </angled-window>\n    </div>\n\n    <div class="security-filter-ace-row" ng-class="{\'security-filter-ace-row-disabled\': security.showWizard}">\n\n      <div class="panel panel-left"\n           ng-class="security.predefinedFilterType  === \'nosql\' ? \'ace-to-edit panel-success\' : \'ace-to-view panel-default\'">\n        <div class="panel-heading" ng-click="security.predefinedFilterType = \'nosql\'">\n\n          <div class="pull-right" ng-show="security.predefinedFilterType  === \'nosql\'">\n\n            <span class="ti-anchor" ng-click="security.toggleOptions()"></span>\n            <button class="btn btn-xs btn-w-md btn-success pull-right" ng-click="security.transformNoSQL()">\n              Validate & Update\n            </button>\n\n          </div>\n          <h3 class="panel-title">NoSQL</h3>\n        </div>\n\n        <bknd-ace-features editor="security.ace.editors[\'nosql\']">\n          <div ui-ace="{onLoad : security.ace.onLoad, theme:\'monokai\', mode: \'json\', rendererOptions: { fontSize: 15 }}"\n               id="nosql"\n               ng-model="security.view.dataEditing.nosqlPermanentFilter"\n               rows="10"\n               ng-readonly="security.predefinedFilterType !== \'nosql\' || security.showWizard">\n          </div>\n        </bknd-ace-features>\n      </div>\n\n      <div class="panel panel-right"\n           ng-class="security.predefinedFilterType  === \'sql\' ? \'ace-to-edit panel-success\' : \'ace-to-view panel-default\'">\n        <div class="panel-heading" ng-click="security.predefinedFilterType = \'sql\'">\n\n          <div class="pull-right" ng-show="security.predefinedFilterType  === \'sql\'">\n\n            <span class="ti-anchor" ng-click="security.toggleOptions()"></span>\n            <button class="btn btn-xs btn-w-md btn-success pull-right" ng-click="security.saveSqlFilter()">\n              Validate & Update\n            </button>\n\n          </div>\n          <h3 class="panel-title">SQL</h3>\n        </div>\n\n        <bknd-ace-features editor="security.ace.editors[\'sql\']">\n          <div ui-ace="{onLoad : security.ace.onLoad, theme:\'dawn\', mode: \'sql\', rendererOptions: { fontSize: 15 }}"\n               id="sql"\n               ng-model="security.view.dataEditing.permanentFilter"\n               rows="10"\n               ng-readonly="security.predefinedFilterType !== \'sql\' || security.showWizard">\n          </div>\n        </bknd-ace-features>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class="row security-header">\n  <div class="col-lg-12">\n    <h3>Security Template</h3>\n    <select class="form-control"\n            ng-options="workspace.__metadata.id as workspace.workspaceName for workspace in security.workspaces"\n            ng-model="security.currentST"\n            ng-disabled="security.view.permissions.overrideinheritable">\n    </select>\n\n    <div class="field-description">\n      The current security template of the object. By overriding it you define specific settings to this object\n      <ba-help-link key="objectSecurityTemplate"></ba-help-link>\n    </div>\n  </div>\n  <div class="col-lg-12" style="padding-top: 20px;">\n    <div class="strong"><label> Override the Security Template</label>\n      <label class="ui-switch ui-switch-success ui-switch-sm pull-right" for="override-checkbox">\n        <input id="override-checkbox" type="checkbox"\n               ng-model="security.view.permissions.overrideinheritable"/><i></i>\n      </label>\n    </div>\n    <security-matrix security-template="security.sTemplate"\n                     override="security.view.permissions.overrideinheritable"\n                     on-update="security.templateChanged(template)"\n                     on-role-add="security.templateRoleAdd(role)"\n                     on-role-rename="security.templateRoleRename(role, newRole)"\n                     on-role-remove="security.templateRoleRemove(role)">\n    </security-matrix>\n  </div>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/settings/settings.html",'<div class="panel-body panel-body-custom">\n      <div class="form-group form-group-half" >\n        <label class="strong" for="jsonName">Name</label>\n        <input  type="text" class="form-control" id="jsonName" ng-disabled="false"\n               ng-model="fields.view.name">\n        <div class="field-description">The name of the object for any JSON representation</div>\n      </div>\n      <div class="form-group form-group-half" >\n        <label class="strong" for="dbName">Database Name</label>\n        <input disabled type="text" class="form-control" id="dbName"\n                ng-model="fields.view.databaseName">\n        <div class="field-description">The name of the object in the database</div>\n      </div>\n      <div class="form-group form-group-half">\n        <label class="pull-right ui-switch ui-switch-success ui-switch-sm"><input  id="History" type="checkbox" ng-model="fields.view.toolbarSettings.saveHistory" checked=""><i></i></label>\n        <label class="strong" for="History">Track Changes</label>\n        <div class="field-description">When enabled, Backand will track all changes to the object\'s data. Enabling this option may negatively impact application performance</div>\n      </div>\n      <div class="form-group form-group-half" >\n        <label class="strong" for="dbName">Descriptive Column</label>\n        <select class="form-control"\n                ng-options="field.name as field.name for field in fields.items"\n                ng-model="fields.view.columnDisplayinTitle">\n        </select>\n        <div class="field-description">The descriptive column is used in MultiSelect and SingleSelect fields when this object has been selected as a "relatedTable"</div>\n      </div>\n      <!--<div class="form-group form-group-half">-->\n        <!--<label class="pull-right ui-switch ui-switch-success ui-switch-sm"><input  id="websockets" type="checkbox" ng-model="fields.view.sendRealTimeEvents" checked=""><i></i></label>-->\n        <!--<label class="strong" for="History">Send Rel-time events</label>-->\n        <!--<div class="field-description">When enabled, Backand will send messages using web sockets on every Create, Update and Delete of the object. The event names are: {{fields.view.name}}.created, {{fields.view.name}}.updated, {{fields.view.name}}.deleted</div>-->\n      <!--</div>-->\n      <!--<div class="form-group">-->\n        <!--<label  for="DefaultSort">Default Sort</label>-->\n       <!--<input  id="DefaultSort" ng-model="fields.view.dataEditing.defaultSort" class="form-control"/>-->\n      <!--</div>-->\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/model/erd_model/erd_model.html",'<div class="erd-model">\n  <h4>View the current model and review the objects\' relationship. Adjust the model view by dragging the boxes. To\n    manage your model click on the \'Model JSON\' tab</h4>\n\n  <bknd-flow-chart ng-if="erdModel.currentModel.erdModel"\n                   style="width: 100%;"\n                   chart="erdModel.currentModel.erdModel"\n                   on-update="erdModel.saveModel()"\n                   on-icon-click="erdModel.gotoObject(node)"\n                   selected-node="erdModel.currentObject">\n  </bknd-flow-chart>\n\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("views/tables/model/json_model/json_model.html",'<div class="panel-body">\n  <div class="row">\n    <div class="col-md-8 col-lg-9 info-panel-row">\n\n      <h4>Manage your model in the left JSON while compare it to the current version on the right JSON -\n        <a href="" ng-click="jsonModel.showHelp()">Need help?</a></h4>\n    </div>\n  </div>\n\n  <div class="row">\n    <div class="col-md-8 col-lg-9 info-panel-row">\n      <div class=" info-panel">\n        <div class="col-md-6 edit">\n                <span class="tab"><strong>Edit model</strong>\n                  <a href="" title="Update local changes with the current model" class="btn btn-sm"\n                     ng-click="jsonModel.reset()"><i\n                    class="glyphicon glyphicon-refresh"></i></a>\n                </span>\n          <a href="" ng-click="jsonModel.toggleShowDiff()">{{jsonModel.showDiffs ? \'hide\' : \'show\'}} diff</a>\n        </div>\n        <div class="col-md-6 current" style="margin-top: 6px; padding-left: 50px;">\n          <span class="tab"><strong>Current model (read-only)</strong></span>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class="row">\n    <div class="col-md-8 col-lg-9 ">\n      <div class="model-diff-container">\n        <ba-ace-diff ace-diff-options="jsonModel.aceDiffOptions"\n                     differ="jsonModel.differ"\n                     left-content="jsonModel.newModel.schema"\n                     right-content="jsonModel.oldModel.schema"\n                     left-editor="jsonModel.schemaEditor"\n                     right-editor="jsonModel.oldSchemaEditor"\n                     control="jsonModel.editorControl"\n                     class="model-edit-ace-diff">\n        </ba-ace-diff>\n      </div>\n      <p><div class="notice">** id is added to all objects automatically, please do not add it yourself</div></p>\n\n    </div>\n\n    <div class="col-md-4 col-lg-3 model-types-container">\n      <div class="db-types-title"><span>Field Types</span>\n        <span><ba-tooltip tooltip-text="Click on a type to insert it in the editor"></ba-tooltip></span></div>\n      <br/>\n\n      <div class="db-types" ng-repeat="fieldType in jsonModel.fieldTypes" ng-click="jsonModel.insertTypeAtChar(fieldType)"\n           ng-mouseover="fieldHover = true">\n        <i class="ti-angle-left"></i>\n        {{fieldType}}\n      </div>\n      <br/>\n\n      <div class="db-note">\n        <p>\n          In <b>one to many relationship</b> between objects users and items:</br>\n          In the many side of the relationship (object items), we specify that each row relates to one row in the\n          other object users.<br/>\n          <b>"user": { "object": "users" }</b></br>\n          In the one side of the relationship (object users), we specify that each row relates to several rows in\n          items:<br/>\n          <b>"items": { "collection": "items", "via": "user" }</b>\n        </p>\n      </div>\n\n    </div>\n  </div>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("common/services/confirm_popup_service.html",'<!--<div class="modal-body">\n  <p class="lead">{{ msg }}</p>\n  <button class="btn btn-danger" ng-click="close(true)" ng-bind="okBtnText"></button>\n  <button class="btn btn-info" ng-click="close(false)" ng-bind="cancelBtnText"></button>\n</div>-->\n\n<div class="modal-header">\n  <h3>{{!Title ? \'Confirmation\':Title}}</h3>\n</div>\n<div class="modal-body">\n  <span>\n      <label><span ng-bind-html="msg"></span></label>\n  </span>\n  <br>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-if="showOk" ng-click="close(true)" ng-bind="okBtnText"></button>\n  <button class="btn btn-default" ng-if="showCancel" ng-click="close(false)" ng-bind="cancelBtnText"></button>\n</div>\n\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("common/directives/ace-diff/ace-diff.html",'<div class="bknd-ace-container monokai" ng-class="{\'ace-full-screen\': aceFullScreen}">\n\n  <div class="bknd-ace-features ace-find-left-editor">\n    <bknd-find-in-ace editor="leftEditor"></bknd-find-in-ace>\n  </div>\n\n  <div class="bknd-ace-features" ng-class="aceFeatures.getThemeClass()">\n    <bknd-find-in-ace editor="rightEditor"></bknd-find-in-ace>\n    <i class="glyphicon ace-icon expand-ace-icon"\n       ng-click="toggleAceFullScreen()"\n       ng-class="aceFullScreen ? \'glyphicon-resize-small\': \'glyphicon-resize-full\'"></i>\n  </div>\n\n  <div id="flex-container" class="ace-diff-container">\n    <div id="acediff-left-editor"></div>\n    <div id="acediff-gutter"></div>\n    <div id="acediff-right-editor"></div>\n  </div>\n\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("common/directives/ace-features/ace-features.html",'<div class="bknd-ace-container" ng-class="[aceFullScreen ? \'ace-full-screen\': null, aceFeatures.getThemeClass()]">\n  <div class="bknd-ace-features">\n    <bknd-find-in-ace editor="aceFeatures.editor" nesting-form="aceFeatures.nestingForm"></bknd-find-in-ace>\n    <i class="glyphicon ace-icon expand-ace-icon"\n       ng-click="aceFullScreen = !aceFullScreen"\n       ng-class="aceFullScreen ? \'glyphicon-resize-small\': \'glyphicon-resize-full\'"></i>\n  </div>\n  <div ng-transclude></div>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("common/directives/anchor/anchor.html",'<div class="pull-right" ng-show=\'anchorParams.showAnchorCondition()\'>\n  <span class="ti-anchor"\n        style="cursor: pointer;font-size:20px;"\n        ng-click="anchorParams.toggleAngledWindow(inputId)"></span>\n</div>\n<div ng-cloak>\n  <angled-window ng-if="anchorParams.showAngledWindow(inputId)"\n                 title="{{windowTitle}}"\n                 id="{{winId}}"\n                 grouping="w"\n                 close-function="anchorParams.toggleAngledWindow(inputId)"\n                 dictionary-items="anchorParams.dictionaryItems"\n                 style="z-index: 10; left: calc(100% - 240px);">\n    <div ng-include="anchorParams.template"></div>\n  </angled-window>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("common/directives/angled/angled-window.html",'<div class="angled-window {{grouping}}" angled-draggable="{{dragOpts | obj2string}}" group="{{grouping}}">\n  <div class="panel panel-primary">\n    <div class="panel-heading cursor-move" id="windowHeading_{{id}}">\n      <span class="pull-right">\n        <input type="button" class="btn btn-danger btn-xs" style="margin-left: 3px;" ng-click="closeFunction()" value="X"></input>\n      </span>\n      <span class="pull-right">\n        <a type="button" id="windowMinimizeBtn_{{id}}" class="btn btn-primary btn-xs" ng-click="rollUp()">\n          <span class="glyphicon" ng-class="rolledUp ? \'glyphicon-chevron-up\' : \'glyphicon-chevron-down\'"></span>\n        </a>\n      </span>\n      <span class="angled-window-title" ng-bind-html="title"></span>\n    </div>\n    <div id="windowBody_{{id}}" class="angled-window-body">\n      <div class="panel-body angled-window-body-content" id="windowBodyContent_{{id}}" ng-transclude></div>\n    </div>\n  </div>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("common/directives/copy_box/copy_box.html",'<div>\n  <span ng-switch on="copy.type">\n\n    <textarea ng-switch-when="textarea"\n              rows="7"\n              class="request-url"\n              ng-readonly="true"\n              ng-bind="copy.getContent()"\n              style="resize: vertical">\n    </textarea>\n\n    <input ng-switch-default\n           type="text"\n           class="request-url"\n           ng-readonly="true"\n           ng-value="copy.getContent()">\n  </span>\n\n  <button clip-copy="copy.contentToCopy"\n          clip-click="copy.setContentCopied()"\n          no-propogate\n          class="btn btn-xs bknd-copy-button"\n          ng-class="{ \'btn-success\' : copy.isContentCopied(), \'btn-primary\' : copy.contentToCopy && !copy.deny()}"\n          ng-disabled="!copy.contentToCopy || copy.deny()"\n          tooltip="copy to clipboard">\n    <span class="ti-clipboard"></span>\n  </button>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("common/directives/copy_url/copy_url.html",'<div>\n  <span ng-switch on="copyUrl.type">\n\n    <textarea ng-switch-when="textarea"\n              rows="7"\n              class="request-url"\n              ng-readonly="true"\n              ng-bind="copyUrl.getUrl()"\n              style="resize: vertical">\n    </textarea>\n\n    <input ng-switch-default\n           type="text"\n           class="request-url"\n           ng-readonly="true"\n           ng-value="copyUrl.getUrl()">\n  </span>\n\n  <button clip-copy="copyUrl.url"\n          clip-click="copyUrl.urlCopied = true"\n          no-propogate\n          class="btn btn-xs request-url-copy"\n          ng-class="{ \'btn-success\' : copyUrl.isUrlCopied(), \'btn-primary\' : copyUrl.isUrlAvailable()}"\n          tooltip="copy to clipboard">\n    <span class="ti-clipboard"></span>\n  </button>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("common/directives/filter_form/filter_form.html",'<form name="filterForm.form"\n      ng-submit="filterForm.submit()"\n      novalidate\n      class="bknd-filter-form"\n      ng-model-options="{ updateOn: \'default blur\', debounce: { \'default\': 500, \'blur\': 0 } }">\n\n  <div class="form-group">\n    <fieldset>\n      <div class="form-group form-inline" ng-repeat="predicate in filterForm.query track by $index">\n\n        <!-- Select field to filter by -->\n\n        <span class="ui-select" ng-hide="predicate.field">\n          <select class="form-control"\n                  ng-model="predicate.field"\n                  ng-options="field.name for field in filterForm.fields"\n                  ng-change="filterForm.onFieldSelected(predicate)"></select>\n        </span>\n\n        <!-- Field is selected - select operator and value -->\n\n        <span ng-show="predicate.field">\n          <label class="form-group" ng-bind="predicate.field.name"></label>\n\n          <!-- Operator -->\n\n          <span class="ui-select">\n            <select class="form-control"\n                    ng-change="filterForm.submit()"\n                    ng-model="predicate.operator"\n                    ng-options="operator for operator in filterForm.operatorsList[predicate.field.type]"></select>\n          </span>\n\n          <!-- Value -->\n\n          <fieldset ng-switch on="predicate.field.type"\n                    ng-disabled="filterForm.disableValue(predicate.operator)">\n\n            <span ng-switch-when="Boolean" class="filter-form-bool">\n              <span class="input-group">\n                <span class="input-group-addon"\n                      ng-class="predicate.value === \'false\' ? \'ba-icon-icon-field-type-false\' : \'ba-icon-icon-field-type-true\'"></span>\n                <span class="ui-select">\n                  <select class="form-control"\n                        name="predicate.key"\n                        ng-model="predicate.value"\n                        ng-change="filterForm.submit()"\n                        ng-options="bool for bool in [\'true\', \'false\']"></select>\n                </span>\n              </span>\n            </span>\n\n            <span ng-switch-when="DateTime" class="filter-form-date">\n              <span class="input-group">\n                <span class="input-group-addon ti-calendar"></span>\n                <input type="date"\n                       class="editable-has-buttons editable-input form-control"\n                       ng-model="predicate.value"\n                       ng-change="filterForm.submit()"/>\n              </span>\n              <span class="input-group">\n                <span class="input-group-addon ti-time"></span>\n                <input type="time"\n                       class="editable-has-buttons editable-input form-control"\n                       ng-model="predicate.value"\n                       ng-change="filterForm.submit()"/>\n              </span>\n            </span>\n\n            <span ng-switch-when="select" class="input-group">\n              <span class="input-group-addon ba-icon-icon-field-type-text"></span>\n              <input type="text"\n                     class="form-control"\n                     ng-model="predicate.value"\n                     ng-change="filterForm.submit()"/>\n            </span>\n\n            <span ng-switch-when="Numeric" class="input-group">\n              <span class="input-group-addon ba-icon-icon-field-type-number"></span>\n              <input type="text"\n                     class="form-control"\n                     name="predicate.key"\n                     ng-model="predicate.value"\n                     ng-change="filterForm.submit()"/>\n            </span>\n\n            <span ng-switch-default class="input-group">\n              <span class="input-group-addon ba-icon-icon-field-type-text"></span>\n              <input type="text"\n                     class="form-control"\n                     ng-model="predicate.value"\n                     ng-change="filterForm.submit()"/>\n            </span>\n          </fieldset>\n\n        </span>\n\n        <i class="fa fa-close close-button" ng-click="filterForm.removePredicate(predicate)"></i>\n\n        </div>\n\n        <div ng-show="filterForm.showAddButton()">\n          <a href="" class="btn btn-success btn-xs btn-wide" ng-click="filterForm.addRow()">\n            <i class="ti-plus"></i> ADD CONDITION</a>\n        </div>\n\n    </fieldset>\n\n\n  </div>\n</form>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("common/directives/find_in_ace/find_in_ace.html",'<div class="find-in-ace">\n  <div class="find-in-ace-form" ng-show="showForm">\n    <form name="findForm" novalidate ng-submit="findInAce.findNext()" ng-disabled="false"\n          ng-model-options="{updateOn: \'default blur\', debounce: {\'default\': 100, \'blur\': 0}}">\n\n      <input name="searchTerm"\n             class="form-control input-round"\n             ng-model="findInAce.searchTerm"\n             ng-change="findInAce.findOnChange()"\n             placeholder="Press Enter to find"\n             autocomplete="off">\n      <i class="glyphicon glyphicon-circle-arrow-up ace-icon input-ace-icon first-ace-icon"\n         ng-click="findInAce.findPrev()"></i>\n      <i class="glyphicon glyphicon-circle-arrow-down ace-icon input-ace-icon second-ace-icon"\n         ng-click="findInAce.findNext()"></i>\n    </form>\n\n    <form name="replaceForm" novalidate ng-show="findInAce.replace && !findInAce.editor.getReadOnly()"\n          ng-submit="findInAce.findAndReplace()">\n      <input name="replaceTerm"\n             class="form-control input-round"\n             ng-model="findInAce.replaceTerm"\n             placeholder="Press Enter to find & replace"\n             autocomplete="off">\n      <i ng-show="findInAce.replaceTerm"\n         class="glyphicon glyphicon-ok-sign ace-icon input-ace-icon first-ace-icon"\n         ng-click="findInAce.findAndReplace()"></i>\n    </form>\n\n    <form name="findOptionsForm">\n      <div class="find-in-ace-options" ng-model-options="{updateOn: \'default\'}">\n        <label class="ui-checkbox find-in-ace-options-left">\n          <input name="caseSensitive"\n                 type="checkbox"\n                 ng-model="findInAce.searchOptions.caseSensitive"\n                 ng-change="findInAce.findOnChange()">\n          <span>Match Case</span>\n        </label>\n\n        <label class="ui-checkbox find-in-ace-options-right">\n          <input name="regExp"\n                 type="checkbox"\n                 ng-model="findInAce.searchOptions.regExp"\n                 ng-change="findInAce.findOnChange()">\n          <span>Regex</span>\n        </label>\n\n        <label class="ui-checkbox find-in-ace-options-left">\n          <input name="wholeWord"\n                 type="checkbox"\n                 ng-model="findInAce.searchOptions.wholeWord"\n                 ng-change="findInAce.findOnChange()">\n          <span>Words</span>\n        </label>\n\n        <label class="ui-checkbox find-in-ace-options-right">\n          <input name="replace"\n                 type="checkbox"\n                 ng-model="findInAce.replace"\n                 ng-disabled="findInAce.editor.getReadOnly()">\n          <span>Replace</span>\n        </label>\n      </div>\n    </form>\n\n  </div>\n  <i class="glyphicon glyphicon-search ace-icon find-in-ace-icon" ng-click="showForm = !showForm"></i>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("common/directives/flowchart/flowchart.html",'<div\n  mouse-capture\n  ng-keydown="flowchartCtrl.keyDown($event)"\n  ng-keyup="flowchartCtrl.keyUp($event)">\n\n  <div>\n    <div ng-show="flowchartCtrl.showModelControls">\n      <button\n        ng-click="flowchartCtrl.addNewNode()"\n        title="Add a new node to the chart">\n        Add Node\n      </button>\n      <button\n        ng-click="flowchartCtrl.addNewInputConnector()"\n        ng-disabled="flowchartCtrl.chartViewModel.getSelectedNodes().length == 0"\n        title="Add a new input connector to the selected node">\n        Add Input Connector\n      </button>\n      <button\n        ng-click="flowchartCtrl.addNewOutputConnector()"\n        ng-disabled="flowchartCtrl.chartViewModel.getSelectedNodes().length == 0"\n        title="Add a new output connector to the selected node">\n        Add Output Connector\n      </button>\n      <button\n        ng-click="flowchartCtrl.deleteSelected()"\n        ng-disabled="flowchartCtrl.chartViewModel.getSelectedNodes().length == 0 && flowchartCtrl.chartViewModel.getSelectedConnections().length == 0"\n        title="Delete selected nodes and connections">\n        Delete Selected\n      </button>\n    </div>\n\n    <flow-chart ng-mouseup="flowchartCtrl.updateChart()"\n      chart="flowchartCtrl.chartViewModel" on-icon-click="flowchartCtrl.onIconClick({node: node})">\n    </flow-chart>\n  </div>\n\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("common/directives/flowchart/flowchart_template.html",'<svg\n  class="draggable-container"\n  xmlns="http://www.w3.org/2000/svg"\n  ng-mousedown="mouseDown($event)"\n  ng-mousemove="mouseMove($event)">\n  <defs>\n    <linearGradient\n      spreadMethod="pad"\n      y2="0"\n      x2="0"\n      y1="1"\n      x1="0"\n      id="nodeBackgroundGradient">\n      <stop\n        offset="0"\n        stop-opacity="0.99609"\n        stop-color="#56aaff"/>\n      <stop\n        offset="0.63934"\n        stop-opacity="0.99219"\n        stop-color="#d0d0e5"/>\n    </linearGradient>\n  </defs>\n  <g\n    ng-repeat="node in chart.nodes"\n    ng-mousedown="nodeMouseDown($event, node)"\n    ng-attr-transform="translate({{node.x()}}, {{node.y()}})">\n    <rect\n      ng-attr-class="{{node.selected() && \'selected-node-rect\' || (node == mouseOverNode && \'mouseover-node-rect\' || \'node-rect\')}}"\n      ry="10"\n      rx="10"\n      x="0"\n      y="0"\n      ng-attr-width="{{node.width()}}"\n      ng-attr-height="{{node.height()}}"\n      fill="url(#nodeBackgroundGradient)">\n\n    </rect>\n\n    <text\n      class="node-title"\n      ng-attr-x="{{node.width()/2}}"\n      y="25"\n      text-anchor="middle"\n      alignment-baseline="middle">\n      {{node.name()}}\n    </text>\n\n    <text ng-click="onNodeClick(node)"\n      class="fa-icon magic-icon"\n      ng-attr-x="{{node.width() - 30}}"\n      y="25"\n      text-anchor="middle"\n      alignment-baseline="middle">&#xf0d0\n    </text>\n\n    <g\n      ng-repeat="connector in node.inputConnectors"\n      ng-mousedown="connectorMouseDown($event, node, connector, $index, true)"\n      class="connector input-connector">\n      <text\n        ng-attr-x="{{connector.x() + 20}}"\n        ng-attr-y="{{connector.y()}}"\n        text-anchor="left"\n        alignment-baseline="middle">\n        {{connector.name()}}\n      </text>\n\n      <circle\n        ng-attr-class="{{connector == mouseOverConnector && \'mouseover-connector-circle\' || \'connector-circle\'}}"\n        ng-attr-r="{{connectorSize}}"\n        ng-attr-cx="{{connector.x()}}"\n        ng-attr-cy="{{connector.y()}}"/>\n    </g>\n\n    <g\n      ng-repeat="connector in node.outputConnectors"\n      ng-mousedown="connectorMouseDown($event, node, connector, $index, false)"\n      class="connector output-connector">\n      <text\n        ng-attr-x="{{connector.x() - 20}}"\n        ng-attr-y="{{connector.y()}}"\n        text-anchor="end"\n        alignment-baseline="middle">\n        {{connector.name()}}\n      </text>\n\n      <circle\n        ng-attr-class="{{connector == mouseOverConnector && \'mouseover-connector-circle\' || \'connector-circle\'}}"\n        ng-attr-r="{{connectorSize}}"\n        ng-attr-cx="{{connector.x()}}"\n        ng-attr-cy="{{connector.y()}}"/>\n    </g>\n  </g>\n\n  <g>\n    <g\n      ng-repeat="connection in chart.connections"\n      class="connection"\n      ng-mousedown="connectionMouseDown($event, connection)">\n      <path\n        ng-attr-class="{{connection.selected() && \'selected-connection-line\' || (connection == mouseOverConnection && \'mouseover-connection-line\' || \'connection-line\')}}"\n        ng-attr-d="M {{connection.sourceCoordX()}}, {{connection.sourceCoordY()}}\n                     C {{connection.sourceTangentX()}}, {{connection.sourceTangentY()}}\n                       {{connection.destTangentX()}}, {{connection.destTangentY()}}\n                       {{connection.destCoordX()}}, {{connection.destCoordY()}}">\n      </path>\n\n      <text\n        ng-attr-class="{{connection.selected() && \'selected-connection-name\' || (connection == mouseOverConnection && \'mouseover-connection-name\' || \'connection-name\')}}"\n        ng-attr-x="{{connection.middleX()}}"\n        ng-attr-y="{{connection.middleY()}}"\n        text-anchor="middle"\n        alignment-baseline="middle">{{connection.name()}}\n      </text>\n\n      <text\n        ng-attr-class="{{connection.selected() && \'selected-connection-name\' || (connection == mouseOverConnection && \'mouseover-connection-name\' || \'connection-name\')}}"\n        ng-attr-x="{{connection.sourceCoordX() + 10}}"\n        ng-attr-y="{{connection.sourceCoordY() - 15}}"\n        text-anchor="middle"\n        alignment-baseline="middle">1\n      </text>\n\n      <text\n        ng-attr-class="{{connection.selected() && \'selected-connection-name\' || (connection == mouseOverConnection && \'mouseover-connection-name\' || \'connection-name\')}}"\n        ng-attr-x="{{connection.destCoordX() - 10}}"\n        ng-attr-y="{{connection.destCoordY() - 15}}"\n        text-anchor="middle"\n        alignment-baseline="middle">&infin;\n      </text>\n\n      <circle\n        ng-attr-class="{{connection.selected() && \'selected-connection-endpoint\' || (connection == mouseOverConnection && \'mouseover-connection-endpoint\' || \'connection-endpoint\')}}"\n        r="5"\n        ng-attr-cx="{{connection.sourceCoordX()}}"\n        ng-attr-cy="{{connection.sourceCoordY()}}">\n      </circle>\n\n      <circle\n        ng-attr-class="{{connection.selected() && \'selected-connection-endpoint\' || (connection == mouseOverConnection && \'mouseover-connection-endpoint\' || \'connection-endpoint\')}}"\n        r="5"\n        ng-attr-cx="{{connection.destCoordX()}}"\n        ng-attr-cy="{{connection.destCoordY()}}">\n      </circle>\n    </g>\n  </g>\n\n  <g\n    ng-if="draggingConnection">\n    <path\n      class="dragging-connection dragging-connection-line"\n      ng-attr-d="M {{dragPoint1.x}}, {{dragPoint1.y}}\n                 C {{dragTangent1.x}}, {{dragTangent1.y}}\n                   {{dragTangent2.x}}, {{dragTangent2.y}}\n                   {{dragPoint2.x}}, {{dragPoint2.y}}">\n    </path>\n\n    <circle\n      class="dragging-connection dragging-connection-endpoint"\n      r="4"\n      ng-attr-cx="{{dragPoint1.x}}"\n      ng-attr-cy="{{dragPoint1.y}}">\n    </circle>\n\n    <circle\n      class="dragging-connection dragging-connection-endpoint"\n      r="4"\n      ng-attr-cx="{{dragPoint2.x}}"\n      ng-attr-cy="{{dragPoint2.y}}">\n    </circle>\n  </g>\n\n  <rect\n    ng-if="dragSelecting"\n    class="drag-selection-rect"\n    ng-attr-x="{{dragSelectionRect.x}}"\n    ng-attr-y="{{dragSelectionRect.y}}"\n    ng-attr-width="{{dragSelectionRect.width}}"\n    ng-attr-height="{{dragSelectionRect.height}}">\n  </rect>\n\n</svg>\n')
}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("common/directives/log_list/log_list.html",'<div class="app-log">\n  <h4 class="row col-md-11 col-md-offset-1">APP Configuration LOG</h4>\n\n  <ul class="row list-unstyled">\n    <li ng-repeat="log in appLogArray | limitTo:logLimit" class="row">\n      <label class="col-md-3 col-sm-3 col-md-offset-1 text-muted">\n        <span am-time-ago="log.time"></span>\n      </label>\n      <span class="col-md-8 col-sm-8">\n         <div ng-show="!log.long">{{log.info}}</div>\n         <div ng-show="log.long && !log.open">{{log.info}} <a ng-click="log.open=!log.open" href="">more...</a></div>\n         <div ng-show="log.long && log.open">{{log.infoLong}} <a ng-click="log.open=!log.open" href="">close</a></div>\n      </span>\n    </li>\n  </ul>\n  <button type="button" class="btn btn-w-lg btn-default center-block" ui-sref="log.config({name: appName})">Show More</button>\n</div>\n\n\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("common/directives/security_matrix/security_matrix.html",'<table class="table table-striped" style="table-layout: fixed">\n\n  <thead>\n  <tr>\n    <th>ROLE</th>\n    <th class="text-center" ng-repeat="action in actions" ng-bind="action.toUpperCase()"></th>\n  </tr>\n  </thead>\n\n  <tbody>\n\n  <tr ng-repeat="role in securityTemplate">\n\n        <!--<td ng-if="override"-->\n            <!--editable-text="role.title">{{ role.title }}</td>-->\n      <td ng-if="override && !role.readonly"><a  href="" ng-click="OpenRole(role.title, \'update\')" ng-bind="role.title"></a></td>\n      <td ng-if="!override || role.readonly" ng-bind="role.title"></td>\n\n      <td class="text-center" ng-repeat="action in actions">\n        <input ng-checked="role.permissions[action]"\n               ng-disabled="!override"\n               ng-model="role.permissions[action]"\n               type="checkbox"/>\n      </td>\n\n  </tr>\n  </tbody>\n\n</table>\n<button class="btn btn-primary"\n        ng-if="override"\n        ng-click="OpenRole(role.name, \'new\')">+ Add Role</button>\n\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("common/directives/security_matrix/security_new_role.html",'<div class="modal-header">\n  <h3 class="modal-title" ng-bind="modal.title"></h3>\n  <h5>Any change to this Role will effect other Security Templates</h5>\n</div>\n<div class="modal-body clearfix">\n    <div class="form-group col-lg-12 col-md-12 col-sm-12">\n    <label>Role Name</label>\n    <input type="text"\n           class="form-control"\n           ng-model="modal.roleName"\n           placeholder="Role name">\n  </div>\n  <div ng-show="modal.roleName == \'Developer\'" class="input-error">Developer role can\'t be added or changed</div>\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-click="modal.closeModal()" ng-bind="modal.okButtonText" ng-disabled="!modal.roleName || modal.roleName == \'Developer\'"></button>\n  <button class="btn btn-default" ng-click="modal.cancel()" ng-bind="modal.cancelButtonText"></button>\n  <button class="btn btn-danger pull-left" ng-click="modal.removeRole()" ng-disabled ="modal.roleName == \'Developer\'" ng-bind="modal.deleteButtonText" ng-if="modal.mode == \'update\'"></button>\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("common/directives/video_modal/video_modal.html",'<div class="modal-header">\n  <h3 class="modal-title">{{title}}</h3>\n</div>\n<div class="modal-body text-center">\n  <iframe width="854" height="510" ng-src=\'{{givenUrl}}\' frameborder="0" allowfullscreen></iframe>\n</div>\n<div class="modal-footer">\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("common/directives/single_select_typeahead/single_select_typeahead.html",'<div class="input-group">\n  <span ng-hide="loadingSingleSelect"\n      class="input-group-addon ti-search"></span>\n<span ng-show="loadingSingleSelect"\n      class="input-group-addon"\n      us-spinner="{lines: 9, radius:4, width:3, length: 2, position: \'relative\'}"\n      style="padding: 6px 18px 6px 19px;"></span>\n<input type="text"\n       id="singleSelect.inputId"\n       ng-model="singleSelect.item.value"\n       typeahead="row.__metadata.id as singleSelect.getSingleSelectLabel(row, singleSelect.item) for row in singleSelect.getSingleAutocomplete($viewValue)"\n       typeahead-template-url="views/tables/data/select_row_template.html"\n       typeahead-editable="false"\n       typeahead-loading="loadingSingleSelect"\n       class="form-control"\n       ng-disabled="singleSelect.item.disable">\n</div>\n')}])}(),function(module){try{module=angular.module("templates")}catch(err){module=angular.module("templates",[])}module.run(["$templateCache",function($templateCache){"use strict";$templateCache.put("common/modals/confirm_update/confirm_update.html",'<div class="model-validation panel panel-primary">\n  <div class="panel-heading">\n    <h4 class="panel-title">Model Validation</h4>\n  </div>\n  <div class="panel-body">\n    <div class="callout" ng-class="\'callout-\' + ConfirmModelUpdate.text.cssClass">\n      <h4>{{ ConfirmModelUpdate.text.title }}</h4>\n      <label>\n        <div>{{ConfirmModelUpdate.actionPhrase}}</div>\n        <div ng-bind-html="ConfirmModelUpdate.text.message"></div>\n      </label>\n      <br>\n      <ba-nested-container container="ConfirmModelUpdate.notifications"></ba-nested-container>\n    </div>\n\n    <a href=""\n       ng-if="ConfirmModelUpdate.details"\n       ng-click="ConfirmModelUpdate.detailsOpen = !ConfirmModelUpdate.detailsOpen">\n      {{ ConfirmModelUpdate.detailsOpen ? \'less\' : \'more\'}} details\n    </a>\n\n    <div class="callout callout-info" ng-show="ConfirmModelUpdate.detailsOpen">\n      <label>{{ ConfirmModelUpdate.detailsTitle }}</label>\n\n      <ul ng-if="ConfirmModelUpdate.details === \'array\'">\n        <li ng-repeat="item in ConfirmModelUpdate.result">{{item}}</li>\n      </ul>\n\n      <p ng-show="ConfirmModelUpdate.details === \'string\'">{{ ConfirmModelUpdate.result }}</p>\n\n    </div>\n\n    <div class="modal-footer">\n      <button class="btn btn-success" ng-if="ConfirmModelUpdate.text.okButton"\n              ng-click="ConfirmModelUpdate.closeValidationModal(true)">\n        {{ ConfirmModelUpdate.text.okButton }}\n      </button>\n      <button class="btn btn-default" ng-click="ConfirmModelUpdate.closeValidationModal(false)">\n        {{ ConfirmModelUpdate.text.cancelButton }}\n      </button>\n    </div>\n  </div>\n</div>\n')}])}();